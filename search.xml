<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>FTP安装并配置虚拟用户</title>
    <url>/2024/01/19/ftp%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E7%94%A8%E6%88%B7/</url>
    <content><![CDATA[<h2 id="FTP安装并配置虚拟用户"><a href="#FTP安装并配置虚拟用户" class="headerlink" title="FTP安装并配置虚拟用户"></a>FTP安装并配置虚拟用户</h2><h3 id="1-安装软件"><a href="#1-安装软件" class="headerlink" title="1.安装软件"></a>1.安装软件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install vsftpd</span><br></pre></td></tr></table></figure>

<h3 id="2-创建相应的ftp数据目录"><a href="#2-创建相应的ftp数据目录" class="headerlink" title="2.创建相应的ftp数据目录"></a>2.创建相应的ftp数据目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /data/ftp/zhang</span><br></pre></td></tr></table></figure>

<h3 id="3-创建一个用户提供给虚拟用户使用"><a href="#3-创建一个用户提供给虚拟用户使用" class="headerlink" title="3.创建一个用户提供给虚拟用户使用"></a>3.创建一个用户提供给虚拟用户使用</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd -s /sbin/nologin virtual</span><br></pre></td></tr></table></figure>

<h3 id="4-将ftp数据目录设置成virtual用户"><a href="#4-将ftp数据目录设置成virtual用户" class="headerlink" title="4.将ftp数据目录设置成virtual用户"></a>4.将ftp数据目录设置成virtual用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> virtual. /data/ftp/zhang -R</span><br><span class="line">ll /data/ftp/</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>创建虚拟帐号与密码的文本文件(一行账号，一行密码, 注意不要有多余的空格)</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/vsftpd/logins.txt</span><br><span class="line">testzhang</span><br><span class="line">zhang@123</span><br></pre></td></tr></table></figure>

<h3 id="5-将创建好的密码文件txt格式转换db格式"><a href="#5-将创建好的密码文件txt格式转换db格式" class="headerlink" title="5.将创建好的密码文件txt格式转换db格式"></a>5.<strong>将创建好的密码文件txt格式转换db格式</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db_load -T -t <span class="built_in">hash</span> -f /etc/vsftpd/logins.txt /etc/vsftpd/login.db</span><br></pre></td></tr></table></figure>

<h3 id="6-定义db文件的权限"><a href="#6-定义db文件的权限" class="headerlink" title="6.定义db文件的权限"></a>6.<strong>定义db文件的权限</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 /etc/vsftpd/login.db</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>定义pam认证文件（注意：db&#x3D;&#x2F;etc&#x2F;vsftpd&#x2F;login 文件就是上面生成的login.db文件；省略后缀.db）</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/pam.d/ftp</span><br><span class="line">auth  required  /lib64/security/pam_userdb.so  db=/etc/vsftpd/login</span><br><span class="line">account  required  /lib64/security/pam_userdb.so  db=/etc/vsftpd/login</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>配置vsftpd主配置文件 （guest_username&#x3D;virtual 对应上面创建的用户）</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak</span><br><span class="line">vim /etc/vsftpd/vsftpd.conf</span><br><span class="line"><span class="comment">#禁止匿名登录FTP服务器</span></span><br><span class="line">anonymous_enable=NO</span><br><span class="line"><span class="comment">#允许本地用户登录FTP服务器</span></span><br><span class="line">local_enable=YES</span><br><span class="line"><span class="comment">#可以上传(全局控制) </span></span><br><span class="line">write_enable=NO</span><br><span class="line"><span class="comment">#匿名用户可以上传</span></span><br><span class="line">anon_upload_enable=NO</span><br><span class="line"><span class="comment">#匿名用户可以建目录</span></span><br><span class="line">anon_mkdir_write_enable=NO</span><br><span class="line"><span class="comment">#匿名用户修改删除</span></span><br><span class="line">anon_other_write_enable=NO</span><br><span class="line"><span class="comment">#全部用户被限制在主目录</span></span><br><span class="line">chroot_local_user=YES</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.3.5版本之后，如果用户被限定在了其主目录下，则该用户的主目录不能再具有写权限了，需新增加下面这条配置</span></span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line"></span><br><span class="line"><span class="comment">#将所有用户看成虚拟用户guest</span></span><br><span class="line">guest_enable=YES</span><br><span class="line"><span class="comment">#指定虚拟用户，也就是将guest用户映射到virtual用户</span></span><br><span class="line">guest_username=virtual</span><br><span class="line"><span class="comment">#指定为独立服务</span></span><br><span class="line">listen=YES</span><br><span class="line"><span class="comment">#指定监听的端口</span></span><br><span class="line">listen_port=21</span><br><span class="line"><span class="comment">#开启被动模式</span></span><br><span class="line">pasv_enable=YES</span><br><span class="line"></span><br><span class="line"><span class="comment">#FTP服务器公网IP</span></span><br><span class="line"><span class="comment">#pasv_address=&lt;FTP服务器公网IP&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置被动模式下，建立数据传输可使用port范围的最小值</span></span><br><span class="line">pasv_min_port=10000</span><br><span class="line"><span class="comment">#设置被动模式下，建立数据传输可使用port范围的最大值</span></span><br><span class="line">pasv_max_port=10088</span><br><span class="line"><span class="comment">#是否允许匿名用户下载全局可读的文件</span></span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line"><span class="comment">#指定虚拟用户配置文件的路径</span></span><br><span class="line">user_config_dir=/etc/vsftpd/user_conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">anonymous_enable=NO</span></span><br><span class="line"><span class="string">local_enable=YES</span></span><br><span class="line"><span class="string">write_enable=NO</span></span><br><span class="line"><span class="string">anon_upload_enable=NO</span></span><br><span class="line"><span class="string">anon_mkdir_write_enable=NO</span></span><br><span class="line"><span class="string">anon_other_write_enable=NO</span></span><br><span class="line"><span class="string">chroot_local_user=YES</span></span><br><span class="line"><span class="string">allow_writeable_chroot=YES</span></span><br><span class="line"><span class="string">guest_enable=YES</span></span><br><span class="line"><span class="string">guest_username=virtual</span></span><br><span class="line"><span class="string">listen=YES</span></span><br><span class="line"><span class="string">listen_port=21</span></span><br><span class="line"><span class="string">pasv_enable=YES</span></span><br><span class="line"><span class="string">pasv_min_port=10000</span></span><br><span class="line"><span class="string">pasv_max_port=10088</span></span><br><span class="line"><span class="string">anon_world_readable_only=NO</span></span><br><span class="line"><span class="string">user_config_dir=/etc/vsftpd/user_conf</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>创建上面配置文件中指定的子配置文件目录 user_conf</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /etc/vsftpd/user_conf</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>定义testzhang用户的配置文件(注意：这里创建配置用户配置文件的文件名必须与上面创建的用户名一致)</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/vsftpd/user_conf/testzhang</span><br><span class="line">write_enable=YES</span><br><span class="line">anon_world_readable_only=no</span><br><span class="line">anon_upload_enable=YES</span><br><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line">anon_other_write_enable=YESanon_umask=022</span><br><span class="line">local_root=/data/ftp/zhang</span><br></pre></td></tr></table></figure>

<h4 id="启动vsftpd"><a href="#启动vsftpd" class="headerlink" title="启动vsftpd"></a><strong>启动vsftpd</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart vsftpd</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>FTP</tag>
      </tags>
  </entry>
  <entry>
    <title>iops查看</title>
    <url>/2024/01/11/iops%E6%9F%A5%E7%9C%8B/</url>
    <content><![CDATA[<h1 id="IOPS查看"><a href="#IOPS查看" class="headerlink" title="IOPS查看"></a>IOPS查看</h1><h3 id="iostat命令"><a href="#iostat命令" class="headerlink" title="iostat命令"></a>iostat命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#每隔5秒执行一次iostat，连续执行3次</span></span><br><span class="line">iostat -xmtc 5 3</span><br><span class="line">Linux 3.10.0-1160.92.1.el7.x86_64 (zhang)       10/17/2023      _x86_64_        (2 CPU)</span><br><span class="line"></span><br><span class="line">10/17/2023 08:19:03 PM</span><br><span class="line">avg-cpu:  %user   %<span class="built_in">nice</span> %system %iowait  %steal   %idle</span><br><span class="line">           0.62    0.00    0.24    0.05    0.00   99.09</span><br><span class="line"></span><br><span class="line">Device:         rrqm/s   wrqm/s     r/s     w/s    rMB/s    wMB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %util</span><br><span class="line">vda               0.00     1.65    0.10    4.11     0.00     0.04    19.24     0.00    0.61    2.36    0.57   0.63   0.27</span><br><span class="line"></span><br><span class="line">– 设备（设备的名称）</span><br><span class="line">– rrqm/s（每秒钟进行的读操作的合并请求数）</span><br><span class="line">– wrqm/s（每秒钟进行的写操作的合并请求数）</span><br><span class="line">– r/s（每秒钟的读请求次数）</span><br><span class="line">– w/s（每秒钟的写请求次数）</span><br><span class="line">– rkB/s（每秒钟的读取数据量，单位KB）</span><br><span class="line">– wkB/s（每秒钟的写入数据量，单位KB）</span><br><span class="line">– avgrq-sz（每个请求的平均扇区数）</span><br><span class="line">– avgqu-sz（平均I / O请求数量）</span><br><span class="line">– awt（平均处理时间）</span><br><span class="line">– svctm（平均服务时间）</span><br><span class="line">– %util（每秒已使用磁盘时间的百分比）</span><br></pre></td></tr></table></figure>

<h3 id="dstat命令"><a href="#dstat命令" class="headerlink" title="dstat命令"></a>dstat命令</h3><p>dstat是一个系统资源统计工具，它能轻松监视系统的IOPS。它还可以报告CPU使用率、内存和磁盘使用率等更多指标。想要使用dstat，请使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@zhang ~]<span class="comment"># dstat -cdD total --disk-util --disk-tps --top-io-adv</span></span><br><span class="line">Module dstat_disk_util failed to load. (No counter objects to monitor)</span><br><span class="line">----total-cpu-usage---- -dsk/total- -dsk/total- -------most-expensive-i/o-process-------</span><br><span class="line">usr sys idl wai hiq siq| <span class="built_in">read</span>  writ|reads writs|process              pid  <span class="built_in">read</span> write cpu</span><br><span class="line">  1   0  99   0   0   0|2341B   38k|   0     4 |php-fpm: master proce31398  69k 199B0.0%</span><br><span class="line">  1   1  99   0   0   0|   0  8192B|   0     2 |postgres: zabbix zabb18738   0 8192B  0%</span><br><span class="line">  1   0  99   0   0   0|   0    12k|   0     3 |postgres: zabbix zabb18747   0 8192B  0%</span><br><span class="line">  1   1  99   0   0   0|   0    32k|   0     4 |postgres: zabbix zabb18736   0 8192B  0%</span><br><span class="line">  1   0  99   0   0   0|   0    12k|   0     3 |postgres: zabbix zabb18738   0 8192B  0%</span><br><span class="line">  1   1  99   0   0   0|   0    24k|   0     4 |postgres: zabbix zabb18735   0   16k  0%</span><br><span class="line">  1   1  99   0   0   0|   0  8192B|   0     2 |postgres: zabbix zabb18736   0 8192B  0%</span><br><span class="line">  1   1  99   0   0   0|   0    16k|   0     3 |postgres: zabbix zabb18747   0 8192B  0%</span><br><span class="line">  1   0  98   0   0   0|   0    56k|   0     4 |postgres: zabbix zabb18738   0 8192B  0%</span><br><span class="line">  1   1  98   0   0   0|   0  8192B|   0     2 |postgres: zabbix zabb18735   0 8192B  0%</span><br><span class="line">  1   0  99   0   0   0|   0  8192B|   0     2 |postgres: zabbix zabb18671   0 8192B  0%</span><br><span class="line">  2   1  98   0   0   0|   0   396k|   0     7 |postmaster           1314  550k   0   0%</span><br><span class="line">  1   1  99   0   0   0|   0    76k|   0    15 |node                 4925   11k  24k1.0%</span><br><span class="line">  2   0  98   0   0   0|   0    84k|   0     2 |zabbix_agentd: collec130521258B   0   0%</span><br><span class="line"> 15   2  82   2   0   0|7280k  144k| 223     8 |containerd-shim-runc-4875  105k  47k  0%^C</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
        <category>iops</category>
      </categories>
      <tags>
        <tag>磁盘读写</tag>
        <tag>iops</tag>
      </tags>
  </entry>
  <entry>
    <title>Clash配置负载</title>
    <url>/2024/01/16/clash%E9%85%8D%E7%BD%AE%E8%B4%9F%E8%BD%BD/</url>
    <content><![CDATA[<h1 id="Clash配置负载"><a href="#Clash配置负载" class="headerlink" title="Clash配置负载"></a>Clash配置负载</h1><h2 id="实现负载，下载拉满带宽"><a href="#实现负载，下载拉满带宽" class="headerlink" title="实现负载，下载拉满带宽"></a>实现负载，下载拉满带宽</h2><ul>
<li>找到settings—–&gt;Profiles——-&gt;Parsers——&gt;Edit，然后添加下面代码</li>
</ul>
<p><img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/clash.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">parsers:</span><br><span class="line">  - reg: &#x27;slbable$&#x27;</span><br><span class="line">    yaml:</span><br><span class="line">      append-proxy-groups:</span><br><span class="line">        - name:  负载均衡-散列</span><br><span class="line">          type: load-balance</span><br><span class="line">          url: &#x27;http://www.google.com/generate_204&#x27;</span><br><span class="line">          interval: 300</span><br><span class="line">          strategy: consistent-hashing</span><br><span class="line">        - name:  负载均衡-轮询</span><br><span class="line">          type: load-balance</span><br><span class="line">          url: &#x27;http://www.google.com/generate_204&#x27;</span><br><span class="line">          interval: 300</span><br><span class="line">          strategy: round-robin</span><br><span class="line">      commands:</span><br><span class="line">        - proxy-groups. 负载均衡-散列.proxies=[]proxyNames</span><br><span class="line">        - proxy-groups.0.proxies.0+ 负载均衡-散列</span><br><span class="line">        - proxy-groups. 负载均衡-轮询.proxies=[]proxyNames</span><br><span class="line">        - proxy-groups.0.proxies.0+ 负载均衡-轮询</span><br></pre></td></tr></table></figure>

<ul>
<li>然后在订阅链接后面添加触发条件，点击更新</li>
<li>会出现一个轮询，一个散列，下载建议用轮询，正常用就用散列</li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Clash</tag>
        <tag>小教程</tag>
      </tags>
  </entry>
  <entry>
    <title>team绑定双网卡</title>
    <url>/2024/01/13/team%E7%BB%91%E5%AE%9A%E5%8F%8C%E7%BD%91%E5%8D%A1/</url>
    <content><![CDATA[<h1 id="team绑定双网卡"><a href="#team绑定双网卡" class="headerlink" title="team绑定双网卡"></a>team绑定双网卡</h1><p>注意：虚拟机里做，一定要额外添加两块网卡才行，总共三块网卡</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看所有的网络连接</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection show</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建接口team，连接名team0，接口agg-eth0，工作模式为activebackup</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection add type team con-name team0 ifname agg-eth0 config &#x27;&#123;&quot;runner&quot;:&#123;&quot;name&quot;:&quot;activebackup&quot;&#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下为team0接口配置IP信息</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection modify team0 ipv4.addresses &quot;192.168.80.100/24&quot;</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection modify team0 ipv4.gateway &quot;192.168.80.2&quot;</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection modify team0 ipv4.dns &quot;192.168.80.2&quot;</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection modify team0 ipv4.method manual</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 ens38、ens37 加入agg-eth0</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection add type team-slave con-name team0-port1 ifname ens38 master agg-eth0</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection add type team-slave con-name team0-port2 ifname ens37 master agg-eth0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 激活 team0、team0-port1、team0-port2</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection up team0  </span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection up team0-port1</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection up team0-port2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 agg-eth0 网卡绑定的信息</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># teamdctl agg-eth0 state</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行此命令，并使用ping测试网络连通性，停掉一个，看会不会断，再启用，停掉另外一个测试。再复制一个窗口，一直ping自己的DNS，再用上面的命令看看是哪个网卡在工作</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection down team0-port1  </span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
        <category>team</category>
      </categories>
      <tags>
        <tag>双网卡绑定</tag>
        <tag>team</tag>
      </tags>
  </entry>
  <entry>
    <title>mount镜像挂载</title>
    <url>/2024/01/12/mount%E5%B0%8F%E7%9F%A5%E8%AF%86%E6%8C%82%E8%BD%BD%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<h1 id="mount小知识：挂载镜像"><a href="#mount小知识：挂载镜像" class="headerlink" title="mount小知识：挂载镜像"></a>mount小知识：挂载镜像</h1><h2 id="简单挂载"><a href="#简单挂载" class="headerlink" title="简单挂载"></a>简单挂载</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看一下镜像有没有连接，这里是sr0</span></span><br><span class="line">[root@server2 ~]<span class="comment"># lsblk -l</span></span><br><span class="line">NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda           8:0    0   20G  0 disk </span><br><span class="line">sda1          8:1    0    1G  0 part /boot</span><br><span class="line">sda2          8:2    0   19G  0 part </span><br><span class="line">centos-root 253:0    0   17G  0 lvm  /</span><br><span class="line">centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">sr0          11:0    1  988M  0 rom  </span><br><span class="line"></span><br><span class="line"><span class="comment">#创建一个挂载目录</span></span><br><span class="line">[root@server2 ~]<span class="comment"># mkdir /mnt/centos7.9</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将镜像文件挂载到目录里，-t指定一下文件系统</span></span><br><span class="line">[root@server2 ~]<span class="comment"># mount -t iso9660 /dev/sr0 /mnt/centos7.9</span></span><br><span class="line">mount: /dev/sr0 写保护，将以只读方式挂载</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以将配置写进配置文件，开机自动挂载</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/dev/sr0  /mnt/centos7.9  iso9660 defaults 0 0&quot;</span> &gt;&gt; /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果开机有错误，将配置文件里自己添加的删除了就行</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
        <category>mount</category>
      </categories>
      <tags>
        <tag>挂载</tag>
        <tag>mount</tag>
      </tags>
  </entry>
  <entry>
    <title>LVM服务器根目录扩容</title>
    <url>/2024/01/18/lvm%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%89%A9%E5%AE%B9/</url>
    <content><![CDATA[<h1 id="LVM服务器根目录扩容"><a href="#LVM服务器根目录扩容" class="headerlink" title="LVM服务器根目录扩容"></a>LVM服务器根目录扩容</h1><h2 id="新增加一块硬盘的情况"><a href="#新增加一块硬盘的情况" class="headerlink" title="新增加一块硬盘的情况"></a>新增加一块硬盘的情况</h2><h3 id="1-给根分区扩展容量"><a href="#1-给根分区扩展容量" class="headerlink" title="1.给根分区扩展容量"></a>1.给根分区扩展容量</h3><ul>
<li>使用<code>fdisk-l</code> 查看磁盘分区路径<br>先在虚拟机里增加一块磁盘</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">磁盘 /dev/sda：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x000a0ffa</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200    41943039    19921920   8e  Linux LVM</span><br><span class="line"></span><br><span class="line"><span class="comment">#这一个是新加的</span></span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个是原来的/目录</span></span><br><span class="line">磁盘 /dev/mapper/centos-root：18.2 GB, 18249416704 字节，35643392 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-swap：2147 MB, 2147483648 字节，4194304 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br></pre></td></tr></table></figure>

<h3 id="2-使用fdisk-dev-sdb-给新增硬盘进行分区"><a href="#2-使用fdisk-dev-sdb-给新增硬盘进行分区" class="headerlink" title="2.使用fdisk &#x2F;dev&#x2F;sdb 给新增硬盘进行分区"></a>2.使用fdisk &#x2F;dev&#x2F;sdb 给新增硬盘进行分区</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk /dev/sdb</span></span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">使用磁盘标识符 0x5371ec78 创建新的 DOS 磁盘标签。</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">分区号 (1-4，默认 1)：</span><br><span class="line">起始 扇区 (2048-41943039，默认为 2048)：</span><br><span class="line">将使用默认值 2048</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-41943039，默认为 41943039)：</span><br><span class="line">将使用默认值 41943039</span><br><span class="line">分区 1 已设置为 Linux 类型，大小设为 20 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x5371ec78</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048    41943039    20970496   83  Linux</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：w</span><br></pre></td></tr></table></figure>

<h3 id="3-确定新增成功"><a href="#3-确定新增成功" class="headerlink" title="3.确定新增成功"></a>3.确定新增成功</h3><p><code>fdisk -l</code> 确定&#x2F;dev&#x2F;sdb&#x2F;新增分区成功 新分区为&#x2F;dev&#x2F;sdb1</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">磁盘 /dev/sda：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x000a0ffa</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200    41943039    19921920   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x5371ec78</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048    41943039    20970496   83  Linux</span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-root：18.2 GB, 18249416704 字节，35643392 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br></pre></td></tr></table></figure>

<h3 id="4-使用LVM-给根分区扩展空间"><a href="#4-使用LVM-给根分区扩展空间" class="headerlink" title="4.使用LVM 给根分区扩展空间"></a>4.使用LVM 给根分区扩展空间</h3><ul>
<li>使用vgdisplay 命令查看VG 组名</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos</span><br></pre></td></tr></table></figure>

<h3 id="5-使用vgextend-命令把新增磁盘追加到centos-VG组"><a href="#5-使用vgextend-命令把新增磁盘追加到centos-VG组" class="headerlink" title="5.使用vgextend 命令把新增磁盘追加到centos VG组"></a>5.使用vgextend 命令把新增磁盘追加到centos VG组</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vgextend centos /dev/sdb1</span></span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sdb1&quot;</span> successfully created.</span><br><span class="line">  Volume group <span class="string">&quot;centos&quot;</span> successfully extended</span><br></pre></td></tr></table></figure>

<h3 id="6-添加完成之后使用vgdisplay-查看是否扩容成功"><a href="#6-添加完成之后使用vgdisplay-查看是否扩容成功" class="headerlink" title="6.添加完成之后使用vgdisplay 查看是否扩容成功"></a>6.添加完成之后使用vgdisplay 查看是否扩容成功</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos</span><br><span class="line">  System ID</span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        2</span><br><span class="line">  Metadata Sequence No  4</span><br><span class="line">  VG Access             <span class="built_in">read</span>/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                2</span><br><span class="line">  Open LV               2</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                2</span><br><span class="line">  Act PV                2</span><br><span class="line">  VG Size               38.99 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              9982</span><br><span class="line">  Alloc PE / Size       4863 / &lt;19.00 GiB</span><br><span class="line">  Free  PE / Size       5119 / &lt;20.00 GiB   <span class="comment">#看这个</span></span><br><span class="line">  VG UUID               uIB4kO-ywhz-ee5U-DzS7-Kja6-sPvZ-rbi3Bl</span><br></pre></td></tr></table></figure>

<h3 id="7-使用lvdisplay确定根分区路径"><a href="#7-使用lvdisplay确定根分区路径" class="headerlink" title="7.使用lvdisplay确定根分区路径"></a>7.使用lvdisplay确定根分区路径</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvdisplay</span></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/root  <span class="comment">#这里</span></span><br><span class="line">  LV Name                root</span><br><span class="line">  VG Name                centos</span><br><span class="line">  LV UUID                VrUURF-GOCQ-TvkL-Yd4O-OYJk-ZMBo-gqMEaI</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost, 2023-09-14 13:18:10 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 1</span></span><br><span class="line">  LV Size                &lt;17.00 GiB</span><br><span class="line">  Current LE             4351</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     8192</span><br><span class="line">  Block device           253:0</span><br></pre></td></tr></table></figure>

<h3 id="8-使用lvresize-给根分区扩展空间"><a href="#8-使用lvresize-给根分区扩展空间" class="headerlink" title="8.使用lvresize 给根分区扩展空间"></a>8.使用lvresize 给根分区扩展空间</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvresize  -L +20G  /dev/centos/root</span></span><br><span class="line"><span class="comment">#分区增加必须得加-L +20G,如果不写+号会改变原磁盘空间</span></span><br><span class="line">  Size of logical volume centos/root changed from &lt;17.00 GiB (4351 extents) to &lt;36.00 GiB (9215 extents).</span><br><span class="line">  Logical volume centos/root successfully resized.</span><br></pre></td></tr></table></figure>

<h3 id="9-根分区磁盘增加成功之后使用xfs-growfs-dev-centos-root-格式化磁盘空间"><a href="#9-根分区磁盘增加成功之后使用xfs-growfs-dev-centos-root-格式化磁盘空间" class="headerlink" title="9.根分区磁盘增加成功之后使用xfs_growfs &#x2F;dev&#x2F;centos&#x2F;root 格式化磁盘空间"></a>9.根分区磁盘增加成功之后使用xfs_growfs &#x2F;dev&#x2F;centos&#x2F;root 格式化磁盘空间</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># xfs_growfs /dev/centos/root</span></span><br><span class="line">meta-data=/dev/mapper/centos-root isize=512    agcount=4, agsize=1113856 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=4455424, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal               bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =bash                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 4455424 to 9436160</span><br></pre></td></tr></table></figure>

<h3 id="10-确认一下"><a href="#10-确认一下" class="headerlink" title="10.确认一下"></a>10.确认一下</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># df -h</span></span><br><span class="line">文件系统                 容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                 898M     0  898M    0% /dev</span><br><span class="line">tmpfs                    910M     0  910M    0% /dev/shm</span><br><span class="line">tmpfs                    910M  9.6M  901M    2% /run</span><br><span class="line">tmpfs                    910M     0  910M    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root   36G  1.3G   35G    4% /  <span class="comment">#增加了</span></span><br><span class="line">/dev/sda1               1014M  151M  864M   15% /boot</span><br><span class="line">tmpfs                    182M     0  182M    0% /run/user/0</span><br></pre></td></tr></table></figure>
<h2 id="在原有空间上修改磁盘大小的情况"><a href="#在原有空间上修改磁盘大小的情况" class="headerlink" title="在原有空间上修改磁盘大小的情况"></a>在原有空间上修改磁盘大小的情况</h2><p><img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/xunihua.png"></p>
<ul>
<li>比如从50G,直接修改成100G，新增加的磁盘是不识别的</li>
</ul>
<h3 id="1-新建分区"><a href="#1-新建分区" class="headerlink" title="1.新建分区"></a>1.新建分区</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk /dev/sda</span><br><span class="line">n</span><br><span class="line">p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">w</span><br><span class="line"><span class="comment">#使用lvm方式的话，是下面的操作，上面是基于传统的分区</span></span><br><span class="line">fdisk /dev/sda</span><br><span class="line">n</span><br><span class="line">p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t</span><br><span class="line"></span><br><span class="line">L</span><br><span class="line">8e</span><br><span class="line">w</span><br></pre></td></tr></table></figure>

<h3 id="2-对新增的磁盘处理"><a href="#2-对新增的磁盘处理" class="headerlink" title="2.对新增的磁盘处理"></a>2.对新增的磁盘处理</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">partprobe <span class="comment">#识别新增分区</span></span><br><span class="line"></span><br><span class="line">pvcreate /dev/sda3  <span class="comment">#使用 pvcreate 创建物理卷</span></span><br><span class="line"></span><br><span class="line">pvdisplay <span class="comment">#显示物理卷的属性 查看卷组信息</span></span><br><span class="line"></span><br><span class="line">vgextend centos /dev/sda3  <span class="comment">#使用vgextend命令动态扩展</span></span><br><span class="line"></span><br><span class="line">lvresize -L +100%FREE /dev/mapper/centos-root  <span class="comment">#扩招到/目录</span></span><br><span class="line"></span><br><span class="line">xfs_growfs /dev/mapper/centos-root <span class="comment">#重新识别/分区</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Linux</category>
        <category>运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>LVM</tag>
      </tags>
  </entry>
  <entry>
    <title>域控管理常用脚本</title>
    <url>/2024/05/01/%E5%9F%9F%E6%8E%A7%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h2 id="域控管理常用脚本"><a href="#域控管理常用脚本" class="headerlink" title="域控管理常用脚本"></a>域控管理常用脚本</h2><h3 id="1-批量创建用户-永不过期版"><a href="#1-批量创建用户-永不过期版" class="headerlink" title="1.批量创建用户(永不过期版)"></a>1.批量创建用户(永不过期版)</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入 CSV 文件，注意csv文件的编码和多余行，这个版本的账户默认为永不过期</span></span><br><span class="line"><span class="variable">$csvPath</span> = <span class="string">&quot;C:\user.csv&quot;</span></span><br><span class="line"><span class="variable">$users</span> = <span class="built_in">Import-Csv</span> <span class="variable">$csvPath</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置域控信息</span></span><br><span class="line"><span class="variable">$domainController</span> = <span class="string">&quot;testad.com&quot;</span></span><br><span class="line"><span class="variable">$ou</span> = <span class="string">&quot;OU=IT部门,OU=强盛集团,DC=testad,DC=com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环遍历 CSV 文件中的每一行</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span> <span class="keyword">in</span> <span class="variable">$users</span>) &#123;</span><br><span class="line">    <span class="comment"># 从 CSV 中获取用户信息</span></span><br><span class="line">    <span class="variable">$username</span> = <span class="variable">$user</span>.Username</span><br><span class="line">    <span class="variable">$firstname</span> = <span class="variable">$user</span>.FirstName</span><br><span class="line">    <span class="variable">$lastname</span> = <span class="variable">$user</span>.LastName</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$user</span>.Password</span><br><span class="line">    <span class="variable">$pager</span> = <span class="variable">$user</span>.Pager  <span class="comment"># 假设 CSV 有一个名为 Pager 的列</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 将密码转换为安全字符串</span></span><br><span class="line">    <span class="variable">$securePassword</span> = <span class="built_in">ConvertTo-SecureString</span> <span class="literal">-String</span> <span class="variable">$password</span> <span class="literal">-AsPlainText</span> <span class="literal">-Force</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 拼接姓名得到显示名称</span></span><br><span class="line">    <span class="variable">$displayName</span> = <span class="string">&quot;<span class="variable">$lastname</span><span class="variable">$firstname</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置邮箱地址</span></span><br><span class="line">    <span class="variable">$emailAddress</span> = <span class="string">&quot;<span class="variable">$username</span>@<span class="variable">$domainController</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建用户，添加显示名称和邮箱</span></span><br><span class="line">    <span class="built_in">New-ADUser</span> <span class="literal">-SamAccountName</span> <span class="variable">$username</span> `</span><br><span class="line">               <span class="literal">-UserPrincipalName</span> <span class="string">&quot;<span class="variable">$username</span>@<span class="variable">$domainController</span>&quot;</span> `</span><br><span class="line">               <span class="literal">-Name</span> <span class="string">&quot;<span class="variable">$lastname</span><span class="variable">$firstname</span>&quot;</span> `</span><br><span class="line">               <span class="literal">-GivenName</span> <span class="variable">$firstname</span> `</span><br><span class="line">               <span class="literal">-Surname</span> <span class="variable">$lastname</span> `</span><br><span class="line">               <span class="literal">-DisplayName</span> <span class="variable">$displayName</span> `</span><br><span class="line">               <span class="literal">-EmailAddress</span> <span class="variable">$emailAddress</span> `</span><br><span class="line">               <span class="literal">-AccountPassword</span> <span class="variable">$securePassword</span> `</span><br><span class="line">               <span class="literal">-CannotChangePassword</span> <span class="variable">$true</span> `</span><br><span class="line">               <span class="literal">-PasswordNeverExpires</span> <span class="variable">$true</span> `</span><br><span class="line">               <span class="literal">-Enabled</span> <span class="variable">$true</span> `</span><br><span class="line">               <span class="literal">-OtherAttributes</span> <span class="selector-tag">@</span>&#123;<span class="string">&#x27;pager&#x27;</span>=<span class="variable">$pager</span>&#125; `</span><br><span class="line">               <span class="literal">-Path</span> <span class="variable">$ou</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="对应CSV文件结构"><a href="#对应CSV文件结构" class="headerlink" title="对应CSV文件结构"></a>对应CSV文件结构</h4><table>
<thead>
<tr>
<th align="center">Username</th>
<th align="center">LastName</th>
<th align="center">FirstName</th>
<th align="center">Password</th>
<th align="center">Pager</th>
</tr>
</thead>
</table>
<h3 id="2-批量创建用户-指定过期时间"><a href="#2-批量创建用户-指定过期时间" class="headerlink" title="2.批量创建用户(指定过期时间)"></a>2.批量创建用户(指定过期时间)</h3><ul>
<li>注意修改自己的OU等信息</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下面是可以指定账户过期时间的版本</span></span><br><span class="line"><span class="comment"># 导入 CSV 文件</span></span><br><span class="line"><span class="variable">$csvPath</span> = <span class="string">&quot;C:\user.csv&quot;</span></span><br><span class="line"><span class="variable">$users</span> = <span class="built_in">Import-Csv</span> <span class="variable">$csvPath</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置域控信息</span></span><br><span class="line"><span class="variable">$domainController</span> = <span class="string">&quot;testad.com&quot;</span></span><br><span class="line"><span class="variable">$ou</span> = <span class="string">&quot;OU=外部公司,DC=testad,DC=com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环遍历 CSV 文件中的每一行</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span> <span class="keyword">in</span> <span class="variable">$users</span>) &#123;</span><br><span class="line">    <span class="comment"># 从 CSV 中获取用户信息</span></span><br><span class="line">    <span class="variable">$username</span> = <span class="variable">$user</span>.Username</span><br><span class="line">    <span class="variable">$firstname</span> = <span class="variable">$user</span>.FirstName</span><br><span class="line">    <span class="variable">$lastname</span> = <span class="variable">$user</span>.LastName</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$user</span>.Password</span><br><span class="line">    <span class="variable">$pager</span> = <span class="variable">$user</span>.Pager <span class="comment"># 假设 CSV 有一个名为 Pager 的列</span></span><br><span class="line">    <span class="variable">$accountExpirationDate</span> = <span class="variable">$user</span>.ExpirationDate <span class="comment"># 从 CSV 读取账户过期时间</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 将密码转换为安全字符串</span></span><br><span class="line">    <span class="variable">$securePassword</span> = <span class="built_in">ConvertTo-SecureString</span> <span class="literal">-String</span> <span class="variable">$password</span> <span class="literal">-AsPlainText</span> <span class="literal">-Force</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 拼接姓名得到显示名称</span></span><br><span class="line">    <span class="variable">$displayName</span> = <span class="string">&quot;<span class="variable">$lastname</span><span class="variable">$firstname</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置邮箱地址</span></span><br><span class="line">    <span class="variable">$emailAddress</span> = <span class="string">&quot;<span class="variable">$username</span>@<span class="variable">$domainController</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$accountExpirationDate</span> = <span class="variable">$user</span>.ExpirationDate</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (![<span class="built_in">string</span>]::IsNullOrEmpty(<span class="variable">$accountExpirationDate</span>)) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment"># 转换为 DateTime 对象</span></span><br><span class="line">        <span class="variable">$expirationDate</span> = [<span class="built_in">datetime</span>]::ParseExact(<span class="variable">$accountExpirationDate</span>, <span class="string">&#x27;yyyy-MM-dd&#x27;</span>, <span class="variable">$null</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 添一天确保在指定时区的次日结束过期</span></span><br><span class="line">        <span class="variable">$expirationDate</span> = <span class="variable">$expirationDate</span>.AddDays(<span class="number">1</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        <span class="built_in">Write-Warning</span> <span class="string">&quot;无法解析用户 <span class="variable">$username</span> 的过期日期: &#x27;<span class="variable">$accountExpirationDate</span>&#x27;&quot;</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建用户，添加显示名称、邮箱和账户过期时间</span></span><br><span class="line">    <span class="built_in">New-ADUser</span> <span class="literal">-SamAccountName</span> <span class="variable">$username</span> `</span><br><span class="line">               <span class="literal">-UserPrincipalName</span> <span class="string">&quot;<span class="variable">$username</span>@<span class="variable">$domainController</span>&quot;</span> `</span><br><span class="line">               <span class="literal">-Name</span> <span class="string">&quot;<span class="variable">$displayName</span>&quot;</span> `</span><br><span class="line">               <span class="literal">-GivenName</span> <span class="variable">$firstname</span> `</span><br><span class="line">               <span class="literal">-Surname</span> <span class="variable">$lastname</span> `</span><br><span class="line">               <span class="literal">-DisplayName</span> <span class="variable">$displayName</span> `</span><br><span class="line">               <span class="literal">-EmailAddress</span> <span class="variable">$emailAddress</span> `</span><br><span class="line">               <span class="literal">-AccountPassword</span> <span class="variable">$securePassword</span> `</span><br><span class="line">               <span class="literal">-PasswordNeverExpires</span> <span class="variable">$true</span> `</span><br><span class="line">               <span class="literal">-CannotChangePassword</span> <span class="variable">$true</span> `</span><br><span class="line">               <span class="literal">-AccountExpirationDate</span> <span class="variable">$expirationDate</span> `</span><br><span class="line">               <span class="literal">-Enabled</span> <span class="variable">$true</span> `</span><br><span class="line">               <span class="literal">-OtherAttributes</span> <span class="selector-tag">@</span>&#123;<span class="string">&#x27;pager&#x27;</span>=<span class="variable">$pager</span>&#125; `</span><br><span class="line">               <span class="literal">-Path</span> <span class="variable">$ou</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="对应CSV文件结构-1"><a href="#对应CSV文件结构-1" class="headerlink" title="对应CSV文件结构"></a>对应CSV文件结构</h4><table>
<thead>
<tr>
<th align="center">Username</th>
<th align="center">LastName</th>
<th align="center">FirstName</th>
<th align="center">Password</th>
<th align="center">Pager</th>
<th align="center">ExpirationDate</th>
</tr>
</thead>
</table>
<h3 id="3-批量修改账户过期时间"><a href="#3-批量修改账户过期时间" class="headerlink" title="3.批量修改账户过期时间"></a>3.批量修改账户过期时间</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"><span class="built_in">Import-Csv</span> <span class="string">&quot;C:\modify.csv&quot;</span> | <span class="built_in">ForEach-Object</span> &#123;</span><br><span class="line">    <span class="comment"># 解析日期并加上一天</span></span><br><span class="line">    <span class="variable">$expiredate</span> = [<span class="built_in">DateTime</span>]::ParseExact(<span class="variable">$_</span>.expiredate, <span class="string">&quot;yyyy-MM-dd&quot;</span>, <span class="variable">$null</span>).AddDays(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">Set-ADUser</span> <span class="variable">$_</span>.username <span class="literal">-AccountExpirationDate</span> <span class="variable">$expiredate</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="对应CSV文件结构-2"><a href="#对应CSV文件结构-2" class="headerlink" title="对应CSV文件结构"></a>对应CSV文件结构</h4><table>
<thead>
<tr>
<th align="center">username</th>
<th align="center">expiredate</th>
</tr>
</thead>
</table>
<h3 id="4-指定账户永不过期"><a href="#4-指定账户永不过期" class="headerlink" title="4.指定账户永不过期"></a>4.指定账户永不过期</h3><ul>
<li>有一个username列</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"><span class="built_in">Import-Csv</span> <span class="string">&quot;C:\modify.csv&quot;</span> | <span class="built_in">ForEach-Object</span> &#123;</span><br><span class="line">    <span class="comment"># 设置用户账户为永不过期</span></span><br><span class="line">    <span class="built_in">Set-ADUser</span> <span class="variable">$_</span>.username <span class="literal">-AccountExpirationDate</span> <span class="variable">$null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-批量修改密码"><a href="#5-批量修改密码" class="headerlink" title="5.批量修改密码"></a>5.批量修改密码</h3><ul>
<li>csv要有一个sAMAccountName和password列</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$userlist</span> = <span class="built_in">Import-Csv</span> <span class="literal">-Path</span> <span class="string">&quot;C:\user.csv&quot;</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span> <span class="keyword">in</span> <span class="variable">$userlist</span>) &#123;</span><br><span class="line">    dsmod user (dsquery user <span class="literal">-samid</span> <span class="variable">$user</span>.sAMAccountName) <span class="literal">-pwd</span> <span class="variable">$user</span>.password</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-批量删除用户"><a href="#6-批量删除用户" class="headerlink" title="6.批量删除用户"></a>6.批量删除用户</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"><span class="built_in">Import-Csv</span> <span class="string">&quot;C:\deleteusers.csv&quot;</span> | <span class="built_in">ForEach-Object</span> &#123;</span><br><span class="line">    <span class="comment"># 删除用户账户</span></span><br><span class="line">    <span class="built_in">Remove-ADUser</span> <span class="literal">-Identity</span> <span class="variable">$_</span>.username <span class="literal">-Confirm</span>:<span class="variable">$False</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="7-批量修改用户登录名"><a href="#7-批量修改用户登录名" class="headerlink" title="7.批量修改用户登录名"></a>7.批量修改用户登录名</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"><span class="built_in">Import-Csv</span> <span class="string">&quot;C:\username.csv&quot;</span> | <span class="built_in">ForEach-Object</span> &#123;</span><br><span class="line">    <span class="comment"># 获取当前用户的详细信息</span></span><br><span class="line">    <span class="variable">$user</span> = <span class="built_in">Get-ADUser</span> <span class="literal">-Filter</span> <span class="string">&quot;SamAccountName -eq &#x27;<span class="variable">$</span>(<span class="variable">$_</span>.OldUsername)&#x27;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$user</span>) &#123;</span><br><span class="line">        <span class="comment"># 如果用户存在，则同时更新其 sAMAccountName、UserPrincipalName 和 mail</span></span><br><span class="line">        <span class="built_in">Set-ADUser</span> <span class="literal">-Identity</span> <span class="variable">$user</span> <span class="literal">-SamAccountName</span> <span class="variable">$_</span>.NewSamAccountName <span class="literal">-UserPrincipalName</span> <span class="variable">$_</span>.NewUserPrincipalName <span class="literal">-EmailAddress</span> <span class="variable">$_</span>.NewUserPrincipalName</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;Updated usernames and email for <span class="variable">$</span>(<span class="variable">$user</span>.Name): sAMAccountName to <span class="variable">$</span>(<span class="variable">$_</span>.NewSamAccountName), UserPrincipalName and EmailAddress to <span class="variable">$</span>(<span class="variable">$_</span>.NewUserPrincipalName)&quot;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;User <span class="variable">$</span>(<span class="variable">$_</span>.OldUsername) not found.&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>结构如下</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">OldUsername,NewSamAccountName,NewUserPrincipalName</span><br><span class="line">zhangdaniu,lierniu,lierniu@domain.com</span><br></pre></td></tr></table></figure>

<h3 id="8-批量允许用户可修改密码"><a href="#8-批量允许用户可修改密码" class="headerlink" title="8.批量允许用户可修改密码"></a>8.批量允许用户可修改密码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置成true,原来状态是不允许的，就可以变成允许，因为域控写的是，“用户不能更改密码”</span></span><br><span class="line">Username,CanChangePassword</span><br><span class="line">pjt_zhanglinyan,<span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入Active Directory模块</span></span><br><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定CSV文件路径</span></span><br><span class="line"><span class="variable">$csvPath</span> = <span class="string">&quot;C:\passwd.csv&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从CSV文件读取用户数据</span></span><br><span class="line"><span class="variable">$users</span> = <span class="built_in">Import-Csv</span> <span class="literal">-Path</span> <span class="variable">$csvPath</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span> <span class="keyword">in</span> <span class="variable">$users</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment"># 获取AD用户对象</span></span><br><span class="line">        <span class="variable">$adUser</span> = <span class="built_in">Get-ADUser</span> <span class="literal">-Identity</span> <span class="variable">$user</span>.Username <span class="literal">-Properties</span> CannotChangePassword</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 根据CSV文件设置&#x27;CannotChangePassword&#x27;属性</span></span><br><span class="line">        <span class="variable">$canChangePassword</span> = <span class="keyword">if</span> (<span class="variable">$user</span>.CanChangePassword <span class="operator">-eq</span> <span class="string">&#x27;true&#x27;</span>) &#123;<span class="variable">$false</span>&#125; <span class="keyword">else</span> &#123;<span class="variable">$true</span>&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 更新AD用户对象的属性</span></span><br><span class="line">        <span class="built_in">Set-ADUser</span> <span class="literal">-Identity</span> <span class="variable">$user</span>.Username <span class="literal">-CannotChangePassword</span> <span class="variable">$canChangePassword</span></span><br><span class="line">        </span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;已更新用户 <span class="variable">$</span>(<span class="variable">$user</span>.Username) 的密码修改设置。&quot;</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;无法更新用户 <span class="variable">$</span>(<span class="variable">$user</span>.Username) 的设置。错误: <span class="variable">$_</span>&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="9-批量禁用域账户"><a href="#9-批量禁用域账户" class="headerlink" title="9.批量禁用域账户"></a>9.批量禁用域账户</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入Active Directory模块，如果未安装可能需要先安装RSAT工具</span></span><br><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定CSV文件路径</span></span><br><span class="line"><span class="variable">$csvPath</span> = <span class="string">&quot;C:\aban.csv&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从CSV文件中读取用户名</span></span><br><span class="line"><span class="variable">$users</span> = <span class="built_in">Import-Csv</span> <span class="literal">-Path</span> <span class="variable">$csvPath</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历每一个用户名，并尝试禁用对应的AD账户</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span> <span class="keyword">in</span> <span class="variable">$users</span>) &#123;</span><br><span class="line">    <span class="comment"># 获取AD用户对象</span></span><br><span class="line">    <span class="variable">$adUser</span> = <span class="built_in">Get-ADUser</span> <span class="literal">-Filter</span> <span class="string">&quot;SamAccountName -eq &#x27;<span class="variable">$</span>(<span class="variable">$user</span>.Username)&#x27;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 如果用户存在，则禁用账户</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$adUser</span>) &#123;</span><br><span class="line">        <span class="built_in">Disable-ADAccount</span> <span class="literal">-Identity</span> <span class="variable">$adUser</span></span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;User <span class="variable">$</span>(<span class="variable">$user</span>.Username) has been disabled.&quot;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;User <span class="variable">$</span>(<span class="variable">$user</span>.Username) not found.&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>WinServer</category>
        <category>域控</category>
      </categories>
      <tags>
        <tag>域控</tag>
        <tag>powershell</tag>
        <tag>AD</tag>
      </tags>
  </entry>
  <entry>
    <title>无网设置multipath多路径</title>
    <url>/2023/12/16/%E6%97%A0%E7%BD%91%E8%AE%BE%E7%BD%AEmultipath%E5%B0%8F%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h1 id="无网设置multipath小知识"><a href="#无网设置multipath小知识" class="headerlink" title="无网设置multipath小知识"></a>无网设置multipath小知识</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看一下镜像有没有连接，这里是sr0</span></span><br><span class="line">lsblk -l</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> /mnt/redhat</span><br><span class="line">mount -t iso9660 /dev/sr0 /mnt/redhat</span><br><span class="line"></span><br><span class="line">vim /etc/yum.repos.d/local.repo</span><br><span class="line">[<span class="built_in">local</span>]</span><br><span class="line">name=Local Repository </span><br><span class="line">baseurl=file:///mnt/redhat</span><br><span class="line">enabled=1 </span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install device-mapper-multipath -y</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Clash配置负载</title>
    <url>/2024/01/20/%E7%BC%96%E8%AF%91zabbix6.0.5/</url>
    <content><![CDATA[<h1 id="编译Zabbix6-0-5"><a href="#编译Zabbix6-0-5" class="headerlink" title="编译Zabbix6.0.5"></a>编译Zabbix6.0.5</h1><h3 id="pgsql数据库配置"><a href="#pgsql数据库配置" class="headerlink" title="pgsql数据库配置"></a>pgsql数据库配置</h3><p>环境为Nginx1.24+PHP7.4+PGSQL13.7+Zabbix6.0.5</p>
<ul>
<li>1.安装编译工具和依赖项，有跳过这步骤</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf install -y gcc make wget openssl-devel libevent-devel libxml2-devel libcurl-devel libevent-devel pcre-devel libuuid-devel libtool-ltdl-devel postgresql-devel</span><br><span class="line"></span><br><span class="line">dnf install php-bcmath -y</span><br><span class="line">dnf install php-sockets -y</span><br></pre></td></tr></table></figure>

<ul>
<li>2.下载和解压 Zabbix 源代码</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://cdn.zabbix.com/zabbix/sources/stable/6.0/zabbix-6.0.5.tar.gz</span><br><span class="line">tar -zxvf zabbix-6.0.5.tar.gz &amp;&amp; <span class="built_in">cd</span> zabbix-6.0.5</span><br></pre></td></tr></table></figure>

<ul>
<li>3.登录到postgres，创建Zabbix数据库</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE zabbix;</span><br><span class="line">CREATE USER zabbix;</span><br><span class="line">ALTER USER zabbix WITH ENCRYPTED PASSWORD <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON DATABASE zabbix TO zabbix;</span><br></pre></td></tr></table></figure>

<ul>
<li>4.给Zabbix配置时序数据库timescaledb</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">postgres=<span class="comment"># \c zabbix</span></span><br><span class="line">You are now connected to database <span class="string">&quot;zabbix&quot;</span> as user <span class="string">&quot;postgres&quot;</span>.</span><br><span class="line">zabbix=<span class="comment"># CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;</span></span><br><span class="line">WARNING:</span><br><span class="line">WELCOME TO</span><br><span class="line"> _____ _                               _     ____________</span><br><span class="line">|_   _(_)                             | |    |  _  \ ___ \</span><br><span class="line">  | |  _ _ __ ___   ___  ___  ___ __ _| | ___| | | | |_/ /</span><br><span class="line">  | | | |  _ ` _ \ / _ \/ __|/ __/ _` | |/ _ \ | | | ___ \</span><br><span class="line">  | | | | | | | | |  __/\__ \ (_| (_| | |  __/ |/ /| |_/ /</span><br><span class="line">  |_| |_|_| |_| |_|\___||___/\___\__,_|_|\___|___/ \____/</span><br><span class="line">               Running version 2.11.1</span><br><span class="line">For more information on TimescaleDB, please visit the following links:</span><br><span class="line"></span><br><span class="line"> 1. Getting started: https://docs.timescale.com/timescaledb/latest/getting-started</span><br><span class="line"> 2. API reference documentation: https://docs.timescale.com/api/latest</span><br><span class="line"> 3. How TimescaleDB is designed: https://docs.timescale.com/timescaledb/latest/overview/core-concepts</span><br><span class="line"></span><br><span class="line">Note: TimescaleDB collects anonymous reports to better understand and assist our <span class="built_in">users</span>.</span><br><span class="line">For more information and how to <span class="built_in">disable</span>, please see our docs https://docs.timescale.com/timescaledb/latest/how-to-guides/configuration/telemetry.</span><br><span class="line"></span><br><span class="line">CREATE EXTENSION</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看插件</span></span><br><span class="line">zabbix=<span class="comment"># \dx</span></span><br><span class="line">                                                List of installed extensions</span><br><span class="line">    Name     | Version |   Schema   |                                      Description</span><br><span class="line">-------------+---------+------------+---------------------------------------------------------------------------------------</span><br><span class="line"> plpgsql     | 1.0     | pg_catalog | PL/pgSQL procedural language</span><br><span class="line"> timescaledb | 2.11.1  | public     | Enables scalable inserts and complex queries <span class="keyword">for</span> time-series data (Community Edition)</span><br><span class="line">(2 rows)</span><br></pre></td></tr></table></figure>

<ul>
<li>5.还是postgres用户状态下，把源码包复制到家目录，导入 Zabbix 数据库模式和数据</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#表在源码包里面，依次导入三个表，不然可能会出错</span></span><br><span class="line"><span class="built_in">cd</span> database/postgresql</span><br><span class="line">psql -d zabbix -U zabbix -f schema.sql</span><br><span class="line">psql -d zabbix -U zabbix -f images.sql</span><br><span class="line">psql -d zabbix -U zabbix -f data.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#导入时序表，成功会出现下面信息</span></span><br><span class="line">bash-4.4$ psql -d zabbix -U zabbix -f timescaledb.sql</span><br><span class="line">psql:timescaledb.sql:69: NOTICE:  PostgreSQL version 13.7 is valid</span><br><span class="line">psql:timescaledb.sql:69: NOTICE:  TimescaleDB extension is detected</span><br><span class="line">psql:timescaledb.sql:69: NOTICE:  TimescaleDB version 2.11.1 is valid</span><br><span class="line">psql:timescaledb.sql:69: WARNING:  column <span class="built_in">type</span> <span class="string">&quot;character varying&quot;</span> used <span class="keyword">for</span> <span class="string">&quot;source&quot;</span> does not follow best practices</span><br><span class="line">HINT:  Use datatype TEXT instead.</span><br><span class="line">psql:timescaledb.sql:69: WARNING:  column <span class="built_in">type</span> <span class="string">&quot;character varying&quot;</span> used <span class="keyword">for</span> <span class="string">&quot;value&quot;</span> does not follow best practices</span><br><span class="line">HINT:  Use datatype TEXT instead.</span><br><span class="line">psql:timescaledb.sql:69: NOTICE:  TimescaleDB is configured successfully</span><br><span class="line">DO</span><br></pre></td></tr></table></figure>

<h3 id="Zabbix安装与配置"><a href="#Zabbix安装与配置" class="headerlink" title="Zabbix安装与配置"></a>Zabbix安装与配置</h3><ul>
<li>安装依赖</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf --enablerepo=powertools install OpenIPMI-devel -y </span><br><span class="line">dnf install make wget chrony gcc curl-devel net-snmp-devel libxml2-devel.i686 libevent-devel pcre-devel -y</span><br></pre></td></tr></table></figure>

<ul>
<li>创建zabbix用户</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd -s /sbin/nologin -M zabbix</span><br></pre></td></tr></table></figure>

<ul>
<li>.配置编译参数并编译安装，在刚刚解压好的源码包中执行</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure -prefix=/usr/local/zabbix --enable-server --enable-agent --with-postgresql --with-openssl --with-libxml2 --with-libcurl --with-uuid --with-libevent</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R zabbix.zabbix /usr/local/zabbix</span><br></pre></td></tr></table></figure>

<ul>
<li>配置Zabbix-server数据库连接</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@rocky1 zabbix]<span class="comment"># cd /usr/local/zabbix/etc/</span></span><br><span class="line">[root@rocky1 etc]<span class="comment"># vim zabbix_server.conf</span></span><br><span class="line">DBPassword=123456</span><br><span class="line">DBPort=5432</span><br><span class="line">DBHost=192.168.80.10</span><br><span class="line">LogFile=/var/log/zabbix_server.log  <span class="comment">#指定日志位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#去创建一下这个</span></span><br><span class="line"><span class="built_in">touch</span> /var/log/zabbix_server.log  </span><br><span class="line"><span class="built_in">chown</span> zabbix.zabbix /var/log/zabbix_server.log</span><br></pre></td></tr></table></figure>

<ul>
<li>创建Zabbix Server的systemctl 服务管理文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/zabbix-server.service</span><br><span class="line">[Unit]  </span><br><span class="line">Description=Zabbix Server with PostgreSQL DB  </span><br><span class="line">After=syslog.target network.target postgresql-13.service</span><br><span class="line"></span><br><span class="line">[Service]  </span><br><span class="line">Type=simple  </span><br><span class="line">ExecStart=/usr/local/zabbix/sbin/zabbix_server -f  </span><br><span class="line">User=zabbix</span><br><span class="line"></span><br><span class="line">[Install]  </span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<ul>
<li>创建Zabbix Agent启动脚本</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /lib/systemd/system/zabbix-agent.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Zabbix Agent</span><br><span class="line">After=syslog.target</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">&quot;CONFFILE=/usr/local/zabbix/etc/zabbix_agentd.conf&quot;</span> EnvironmentFile=-/etc/sysconfig/zabbix-agent</span><br><span class="line">Type=forking</span><br><span class="line">Restart=on-failure</span><br><span class="line">PIDFile=/tmp/zabbix_agentd.pid</span><br><span class="line">KillMode=control-group</span><br><span class="line">ExecStart=/usr/local/zabbix/sbin/zabbix_agentd</span><br><span class="line">ExecStop=/bin/kill -SIGTERM <span class="variable">$MAINPID</span></span><br><span class="line">RestartSec=10s</span><br><span class="line">User=zabbix</span><br><span class="line">Group=zabbix</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<ul>
<li>使用以下命令启动Zabbix Server及Zabbix Agent</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --now zabbix-server</span><br><span class="line">systemctl <span class="built_in">enable</span> --now zabbix-agent</span><br></pre></td></tr></table></figure>

<h3 id="修改-nginx-配置"><a href="#修改-nginx-配置" class="headerlink" title="修改 nginx 配置"></a>修改 nginx 配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#要注意一下，主配置有没有包含到子配置文件，忘了包含踩坑了</span></span><br><span class="line">vim /apps/nginx/conf.d/zabbix.conf</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name test.zabbix.com;</span><br><span class="line">  location / &#123;</span><br><span class="line">    root /var/www/zabbix;</span><br><span class="line">    index index.php;</span><br><span class="line">  &#125;</span><br><span class="line">  location ~ \.php$ &#123;</span><br><span class="line">    fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">    fastcgi_index index.php;</span><br><span class="line">    fastcgi_param SCRIPT_FILENAME /var/www/zabbix<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">    include fastcgi_params;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="修改-php-配置"><a href="#修改-php-配置" class="headerlink" title="修改 php 配置"></a>修改 php 配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /apps/php/etc/php-fpm.d/www.conf</span><br><span class="line">user = nginx</span><br><span class="line">group = nginx</span><br><span class="line"></span><br><span class="line">vim /apps/php/lib/php.ini</span><br><span class="line">memory_limit = 128M</span><br><span class="line">post_max_size = 16M</span><br><span class="line">upload_max_filesize = 2M</span><br><span class="line">max_execution_time = 300</span><br><span class="line">max_input_time = 300</span><br><span class="line">session.auto_start = 0</span><br><span class="line">mbstring.func_overload = 0</span><br><span class="line">date.timezone = Asia/Shanghai</span><br></pre></td></tr></table></figure>

<h3 id="创建目录和测试文件"><a href="#创建目录和测试文件" class="headerlink" title="创建目录和测试文件"></a>创建目录和测试文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /var/www/zabbix</span><br><span class="line"><span class="built_in">chown</span> -R nginx.nginx /var/www/zabbix</span><br><span class="line">vim /var/www/zabbix/index.php</span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now nginx php-fpm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#浏览器访问这个，电脑hosts修改一下,有时候得多等一下或者强制重启nginx，不然好像访问不通</span></span><br><span class="line">http://test.zabbix.com/index.php</span><br></pre></td></tr></table></figure>

<h3 id="最终web相关配置"><a href="#最终web相关配置" class="headerlink" title="最终web相关配置"></a>最终web相关配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#把源码包里ui目录下所有文件复制到指定的文件夹里</span></span><br><span class="line">[root@rocky1 www]<span class="comment"># cp -r -a /root/zabbix-6.0.5/ui/* /var/www/zabbix</span></span><br></pre></td></tr></table></figure>

<h4 id="小坑"><a href="#小坑" class="headerlink" title="小坑"></a>小坑</h4><p>重启后不知道为啥，Zabbix显示未设置数据库类型<br>排查以后发现，zabbix.conf.php文件变成了空白的，从源码里复制一份模板进去根据自己需求修改</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /apps/packages/zabbix-6.0.5/ui/conf/zabbix.conf.php.example /var/www/zabbix/conf/zabbix.conf.php</span><br><span class="line"></span><br><span class="line">vim /var/www/zabbix/conf/zabbix.conf.php</span><br><span class="line"></span><br><span class="line">systemctl restart zabbix-server</span><br></pre></td></tr></table></figure>

<ul>
<li>安装中文语言包、检查PHP模块，主要注意一定不能在php.ini中禁用proc_open函数，否则会导致pdo_pgsql()函数不可用</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum reinstall glibc-common -y</span><br><span class="line">yum install langpacks-zh_CN.noarch -y</span><br><span class="line"></span><br><span class="line">[root@rocky1 ~]<span class="comment"># cd /apps/packages/zabbix-6.0.5/ui/</span></span><br><span class="line">[root@rocky1 ui]<span class="comment"># locale -a</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/zabbix.png"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>编译安装PHP7.4</title>
    <url>/2024/01/16/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85php7.4/</url>
    <content><![CDATA[<h1 id="编译安装PHP7-4"><a href="#编译安装PHP7-4" class="headerlink" title="编译安装PHP7.4"></a>编译安装PHP7.4</h1><h2 id="依赖环境准备"><a href="#依赖环境准备" class="headerlink" title="依赖环境准备"></a>依赖环境准备</h2><ul>
<li>下载安装编译工具</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum groupinstall <span class="string">&#x27;Development Tools&#x27;</span> -y</span><br></pre></td></tr></table></figure>

<ul>
<li>安装依赖包，否则可能会报错</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update -y</span><br><span class="line">yum install zlib-devel -y</span><br><span class="line">yum install libxml2-devel -y</span><br><span class="line">yum install libcurl-devel -y</span><br><span class="line">yum install openssl-devel -y</span><br><span class="line">yum install libjpeg-devel -y</span><br><span class="line">yum install libpng-devel -y</span><br><span class="line">yum install freetype-devel -y</span><br><span class="line">yum install libpq-devel -y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">yum install bzip2-devel -y</span><br><span class="line">yum install sqlite-devel -y</span><br><span class="line">yum install libcurl-devel -y</span><br><span class="line">yum install libpng-devel -y</span><br><span class="line">yum install automake -y</span><br><span class="line">yum install autoconf -y</span><br><span class="line">yum install libtool -y</span><br><span class="line">yum install libicu-devel -y</span><br><span class="line">yum install gmp-devel -y</span><br><span class="line">yum install libzip-devel -y</span><br><span class="line">yum -y install postgresql-devel</span><br><span class="line"></span><br><span class="line"><span class="comment">#报错：configure: error: Cannot find ldap.h </span></span><br><span class="line">yum install openldap.i686 -y</span><br><span class="line">yum install openldap-devel.i686 -y</span><br><span class="line">yum install openldap-devel -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#遇到oniguruma的报错，要安装6.9以上版本的才行</span></span><br><span class="line">wget https://github.com/kkos/oniguruma/releases/download/v6.9.8/onig-6.9.8.tar.gz</span><br><span class="line">tar -xzvf oniguruma-6.9.4.tar.gz &amp;&amp; <span class="built_in">cd</span> oniguruma-6.9.4</span><br><span class="line">./autogen.sh &amp;&amp; ./configure --prefix=/usr</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">##较低版本的系统，libzip是低版本的，要安装高版本libzip</span></span><br><span class="line">yum install bzip2-devel</span><br><span class="line">wget https://libzip.org/download/libzip-1.7.3.tar.gz</span><br><span class="line">tar -xvzf libzip-1.7.3.tar.gz </span><br><span class="line"><span class="built_in">cd</span> libzip-1.7.3</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=/usr/libs</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=/usr/libs/lib64/pkgconfig:<span class="variable">$PKG_CONFIG_PATH</span></span><br></pre></td></tr></table></figure>

<h2 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h2><ul>
<li>下载php7.4源码与安装</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@rocky1 src]<span class="comment"># cd /usr/local/src &amp;&amp; wget https://www.php.net/distributions/php-7.4.30.tar.gz</span></span><br><span class="line">[root@rocky1 src]<span class="comment"># tar xzvf php-7.4.30.tar.gz &amp;&amp; cd php-7.4.30</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户</span></span><br><span class="line">useradd -r php -s /sbin/nologin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#在php-7.4.30目录下预编译</span></span><br><span class="line">./configure --prefix=/apps/php --with-fpm-user=php --with-fpm-group=php  --with-curl --enable-gd --enable-sockets --enable-bcmath --with-ldap --enable-gettext --enable-mbstring --with-openssl --with-zip --with-zlib  --enable-fpm --with pgsql=/apps/postgresql --with-pdo-pgsql=/apps/postgresql/bin/pg_config --with-gd --with-jpeg --with-freetype</span><br><span class="line"></span><br><span class="line"><span class="comment">#不指定路径</span></span><br><span class="line">./configure --with-fpm-user=php --with-fpm-group=php  --with-curl --enable-gd --enable-sockets --enable-bcmath --with-ldap --enable-gettext --enable-mbstring --with-openssl --with-zip --with-zlib  --enable-fpm --with-pgsql --with-pdo-pgsql --with-gd --with-jpeg --with-freetype --with-mysqli --with-pdo-mysql</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/libzip/lib64/pkgconfig ONIG_CFLAGS=<span class="string">&quot;-I/usr/include&quot;</span> ONIG_LIBS=<span class="string">&quot;-L/usr/lib -lonig&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#8.29版本的</span></span><br><span class="line">./configure --prefix=/apps/php --with-fpm-user=php --with-fpm-group=php --with-curl --with-gd --with-jpeg --with-freetype --enable-sockets --enable-bcmath --with-ldap --enable-gettext --enable-mbstring --with-openssl --with-zip --with-zlib --enable-fpm --with-pgsql=/apps/postgresql --with-pdo-pgsql=/apps/postgresql/bin/pg_config</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#编译</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R php.php /apps/php</span><br></pre></td></tr></table></figure>

<ul>
<li>复制PHP配置文件模板</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/local/src/php-7.4.30/php.ini-development /apps/php/lib/php.ini</span><br></pre></td></tr></table></figure>

<h3 id="添加全局变量"><a href="#添加全局变量" class="headerlink" title="添加全局变量"></a>添加全局变量</h3><ul>
<li>1.打开终端，并以root权限登录</li>
<li>2.编辑&#x2F;etc&#x2F;profile文件，可以使用文本编辑器（如vi或nano）进行编辑：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#最后一行添加</span></span><br><span class="line">[root@rocky1 src]<span class="comment"># vim /etc/profile</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/apps/php/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>3.重启配置生效</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<ul>
<li>4.确认PHP命令是否可以全局使用</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@rocky1 php]<span class="comment"># php -v</span></span><br><span class="line">PHP 7.4.30 (cli) (built: Aug 14 2023 09:37:56) ( NTS )</span><br><span class="line">Copyright (c) The PHP Group</span><br><span class="line">Zend Engine v3.4.0, Copyright (c) Zend Technologies</span><br></pre></td></tr></table></figure>

<h3 id="systemctl管理PHP"><a href="#systemctl管理PHP" class="headerlink" title="systemctl管理PHP"></a>systemctl管理PHP</h3><ul>
<li>创建一个名为php-fpm.service的服务单元文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@rocky1~]<span class="comment"># vim /etc/systemd/system/php-fpm.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=PHP-FPM FastCGI Process Manager</span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/apps/php/sbin/php-fpm --nodaemonize --fpm-config /apps/php/etc/php-fpm.conf</span><br><span class="line">ExecReload=/bin/kill -USR2 <span class="variable">$MAINPID</span></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">几个小坑：</span><br><span class="line">1./apps/php/etc/php-fpm.conf配置文件名字必须为conf结尾的，默认的是php-fpm.conf.default，需要手动修改</span><br><span class="line">2./apps/php/etc/php-fpm.d目录下的www.conf.default文件也需要修改成www.conf</span><br></pre></td></tr></table></figure>

<ul>
<li>启用并启动PHP-FPM服务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> php-fpm</span><br><span class="line">systemctl start php-fpm</span><br></pre></td></tr></table></figure>

<ul>
<li>在&#x2F;apps&#x2F;php&#x2F;etc&#x2F;php-fpm.d目录下的<a href="http://www.conf里添加以下行/">www.conf里添加以下行</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">php_admin_value[php.ini] = /apps/php/lib/php.ini</span><br></pre></td></tr></table></figure>

<ul>
<li>重启生效</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart php-fpm</span><br></pre></td></tr></table></figure>

<ul>
<li><code>www.conf</code>文件中的参数优化</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line">pm = dynamic</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>监控Mysql脚本</title>
    <url>/2024/01/15/%E7%9B%91%E6%8E%A7mysql%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h1 id="监控Mysql脚本"><a href="#监控Mysql脚本" class="headerlink" title="监控Mysql脚本"></a>监控Mysql脚本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义MySQL用户名、密码和主机</span></span><br><span class="line">MYSQL_USER=<span class="string">&quot;root&quot;</span></span><br><span class="line">MYSQL_PASSWORD=<span class="string">&quot;123456&quot;</span></span><br><span class="line">MYSQL_HOST=<span class="string">&quot;localhost&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测MySQL服务是否运行</span></span><br><span class="line"><span class="keyword">if</span> ! pgrep mysqld &gt;/dev/null 2&gt;&amp;1 ; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 如果MySQL服务未运行，则尝试启动服务</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;MySQL is not running, attempting to start...&quot;</span></span><br><span class="line">    systemctl start mysqld</span><br><span class="line">    <span class="built_in">sleep</span> 5</span><br><span class="line">    <span class="comment"># 再次检查MySQL服务是否已经运行</span></span><br><span class="line">    <span class="keyword">if</span> ! pgrep mysqld &gt;/dev/null 2&gt;&amp;1 ; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Failed to start MySQL.&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;MySQL started successfully.&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查能否连接到MySQL服务器</span></span><br><span class="line"><span class="keyword">if</span> ! mysqladmin ping -h <span class="string">&quot;<span class="variable">$MYSQL_HOST</span>&quot;</span> -u <span class="string">&quot;<span class="variable">$MYSQL_USER</span>&quot;</span> -p<span class="string">&quot;<span class="variable">$MYSQL_PASSWORD</span>&quot;</span> &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Could not connect to MySQL server. Attempting to restart MySQL.&quot;</span></span><br><span class="line">    /etc/init.d/mysql restart</span><br><span class="line">    <span class="built_in">sleep</span> 5</span><br><span class="line">    <span class="keyword">if</span> ! mysqladmin ping -h <span class="string">&quot;<span class="variable">$MYSQL_HOST</span>&quot;</span> -u <span class="string">&quot;<span class="variable">$MYSQL_USER</span>&quot;</span> -p<span class="string">&quot;<span class="variable">$MYSQL_PASSWORD</span>&quot;</span> &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Failed to restart MySQL.&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;MySQL restarted successfully.&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;MySQL is running.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>监控</tag>
        <tag>Mysql</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>编译安装Postgresql13.7</title>
    <url>/2024/01/20/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85postgresql13.7/</url>
    <content><![CDATA[<h1 id="编译安装Postgresql13-7"><a href="#编译安装Postgresql13-7" class="headerlink" title="编译安装Postgresql13.7"></a>编译安装Postgresql13.7</h1><h3 id="创建postgres用户及安装目录"><a href="#创建postgres用户及安装目录" class="headerlink" title="创建postgres用户及安装目录"></a>创建postgres用户及安装目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># useradd postgres</span></span><br><span class="line"><span class="comment"># mkdir -p /apps/postgresql</span></span><br></pre></td></tr></table></figure>

<h3 id="安装PostgreSQL依赖包"><a href="#安装PostgreSQL依赖包" class="headerlink" title="安装PostgreSQL依赖包"></a>安装PostgreSQL依赖包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install perl-ExtUtils-Embed -y</span><br><span class="line">yum install readline-devel -y</span><br><span class="line">yum install python-devel -y</span><br><span class="line">yum install python3 -y</span><br><span class="line">yum install python3-devel -y&amp;nbsp;</span><br><span class="line">yum install gcc-c++ -y</span><br><span class="line">yum install cmake -y</span><br><span class="line">yum install libarchive -y</span><br><span class="line">yum install openssl-devel -y</span><br></pre></td></tr></table></figure>

<h3 id="部署PostgreSQL"><a href="#部署PostgreSQL" class="headerlink" title="部署PostgreSQL"></a>部署PostgreSQL</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##下载安装包</span></span><br><span class="line">wget https://ftp.postgresql.org/pub/source/v13.7/postgresql-13.7.tar.gz  </span><br><span class="line">tar -zxvf postgresql-13.7.tar.gz  <span class="comment">##解压安装包</span></span><br><span class="line"><span class="built_in">cd</span> postgresql-13.7/</span><br><span class="line">./configure --prefix=/apps/postgresql --with-python --with-perl --with-openssl</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">##查看已经安装成功</span></span><br><span class="line">[root@rocky1 postgresql-13.7]<span class="comment"># /apps/postgresql/bin/pg_ctl --version</span></span><br><span class="line">pg_ctl (PostgreSQL) 13.7</span><br></pre></td></tr></table></figure>

<h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /apps/postgresql/pgdata <span class="comment">##创建数据库的数据目录</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/profile &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">### postgres ###</span></span><br><span class="line"><span class="string">export PATH=/apps/postgresql/bin:$PATH</span></span><br><span class="line"><span class="string">export LD_LIBRARY_PATH=/apps/postgresql/lib</span></span><br><span class="line"><span class="string">export PGDATA=/apps/postgresql/pgdata</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line">pg_ctl --version  <span class="comment">##环境变量配置成功</span></span><br></pre></td></tr></table></figure>

<p>给用户目录赋权并创建数据库簇</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R postgres.postgres /apps/postgresql  <span class="comment">##修改postgresql所属组和所属用户</span></span><br><span class="line">su - postgres</span><br><span class="line">initdb  <span class="comment">##初始化数据库</span></span><br></pre></td></tr></table></figure>

<h3 id="后续配置"><a href="#后续配置" class="headerlink" title="后续配置"></a>后续配置</h3><h4 id="自定义开放访问的IP-修改data目录下的pg-hba-conf文件"><a href="#自定义开放访问的IP-修改data目录下的pg-hba-conf文件" class="headerlink" title="自定义开放访问的IP ,修改data目录下的pg_hba.conf文件"></a>自定义开放访问的IP ,修改data目录下的pg_hba.conf文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /apps/postgresql/pgdata</span><br><span class="line">[root@rocky1 pgdata]<span class="comment"># vim pg_hba.conf</span></span><br><span class="line"><span class="comment"># IPv4 out connections:</span></span><br><span class="line">host    all             all             0.0.0.0/0                md5</span><br></pre></td></tr></table></figure>

<h4 id="添加主机ip和主机名"><a href="#添加主机ip和主机名" class="headerlink" title="添加主机ip和主机名"></a>添加主机ip和主机名</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@rocky1 pgdata]<span class="comment"># vim postgresql.conf</span></span><br><span class="line">listen_addresses = <span class="string">&#x27;*&#x27;</span>          <span class="comment"># what IP address(es) to listen on;</span></span><br><span class="line">port = 5432 </span><br></pre></td></tr></table></figure>

<ul>
<li>切换到root用户，并到postgresql源码包的解压目录下(&#x2F;root&#x2F;postgresql-13.7&#x2F;)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /apps/postgresql/log</span><br><span class="line"><span class="built_in">cd</span> /apps/postgresql/log</span><br><span class="line"><span class="built_in">touch</span> server.log</span><br><span class="line"><span class="built_in">chown</span> -R postgres.postgres <span class="built_in">log</span></span><br><span class="line"><span class="comment">#在/root/postgresql-13.7/contrib/start-scripts里面</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">将 PostgreSQL 的启动脚本从源码包的 contrib/start-scripts/linux 目录复制到 /etc/init.d 目录中。这个脚本是用于启动、停止和管理 PostgreSQL 服务器的脚本。</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">[root@rocky1 start-scripts]<span class="comment"># cp linux /etc/init.d/postgresql</span></span><br><span class="line">vim /etc/init.d/postgresql</span><br><span class="line">prefix=/apps/postgresql</span><br><span class="line">PGDATA=<span class="string">&quot;/apps/postgresql/pgdata&quot;</span></span><br><span class="line">PGLOG=<span class="string">&quot;/apps/postgresql/log/server.log&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>赋予该文件执行权限</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /etc/init.d/postgresql</span><br><span class="line"><span class="comment">#设置服务开机自启</span></span><br><span class="line">chkconfig --add postgresql</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /home/postgres</span><br><span class="line"><span class="built_in">chown</span> -R postgres.postgres /home/postgres</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动数据库</span></span><br><span class="line">service postgresql restart</span><br></pre></td></tr></table></figure>

<h3 id="源码安装timesacledb"><a href="#源码安装timesacledb" class="headerlink" title="源码安装timesacledb"></a>源码安装timesacledb</h3><h5 id="cmake需要3-0以上版本"><a href="#cmake需要3-0以上版本" class="headerlink" title="cmake需要3.0以上版本"></a>cmake需要3.0以上版本</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget&amp;nbsp;https://github.com/Kitware/CMake/releases/download/v3.27.4/cmake-3.27.4.tar.gz</span><br><span class="line"></span><br><span class="line">tar zxvf cmake-3.27.4.tar.gz</span><br><span class="line"><span class="built_in">cd</span> cmake-3.27.4</span><br><span class="line">./bootstrap --prefix=/usr/local</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">vi ~/.bash_profile</span><br></pre></td></tr></table></figure>

<ul>
<li>下载源码，或者直接下载包，传上去</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/timescale/timescaledb/archive/refs/tags/2.11.2.tar.gz</span><br><span class="line">tar zxvf timescaledb-2.11.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> timescaledb-2.11.1</span><br></pre></td></tr></table></figure>

<ul>
<li>安装和编译</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bootstrap <span class="comment">#如果有需要openssl就安装重新构建pgsql</span></span><br><span class="line"><span class="built_in">cd</span> ./build &amp;&amp; make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#加在最后一行</span></span><br><span class="line"><span class="built_in">cd</span> /apps/postgresql/pgdata</span><br><span class="line">[root@rocky1 pgdata]<span class="comment"># vim postgresql.conf</span></span><br><span class="line">shared_preload_libraries = <span class="string">&#x27;timescaledb&#x27;</span></span><br><span class="line"></span><br><span class="line">service postgresql restart</span><br><span class="line"></span><br><span class="line">CREATE DATABASE example;</span><br><span class="line">\c example</span><br><span class="line">CREATE EXTENSION IF NOT EXISTS timescaledb;</span><br><span class="line">SELECT * FROM pg_extension WHERE extname=<span class="string">&#x27;timescaledb&#x27;</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Postgresql</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Postgresql</tag>
      </tags>
  </entry>
</search>
