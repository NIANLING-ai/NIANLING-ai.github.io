<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>用户组管理</title>
    <url>/2023/12/24/10.%E7%94%A8%E6%88%B7%E7%BB%84%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h2 id="用户-组基本概念"><a href="#用户-组基本概念" class="headerlink" title="用户&#x2F;组基本概念"></a>用户&#x2F;组基本概念</h2><h4 id="用户和组"><a href="#用户和组" class="headerlink" title="用户和组"></a>用户和组</h4><ul>
<li>系统上的每个进程(运行的程序)都是作为特定用户运行</li>
<li>每个文件是由一个特定的用户拥有</li>
<li>访问文件和目录受到用户的限制</li>
<li>与正在运行的进程相关联的用户确定该进程可访问的文件和目录</li>
</ul>
<h4 id="查看当前的登录的用户信息-id命令"><a href="#查看当前的登录的用户信息-id命令" class="headerlink" title="查看当前的登录的用户信息  id命令"></a>查看当前的登录的用户信息  id命令</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# id   //有其他用户时可以用id  xxx来查看其信息</span><br><span class="line">uid=0(root) gid=0(root) 组=0(root) 环境=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023</span><br></pre></td></tr></table></figure>
<h4 id="查看文件的拥有者-ls命令"><a href="#查看文件的拥有者-ls命令" class="headerlink" title="查看文件的拥有者  ls命令"></a>查看文件的拥有者  ls命令</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# ll anaconda-ks.cfg</span><br><span class="line">-rw-------. 1 root root 1257 10月 29 06:08 anaconda-ks.cfg</span><br><span class="line">“rwx” 表示文件所有者的权限:r是读，w是写，x是执行</span><br><span class="line">第一个“root” 表示文件的所有者       第二个“root” 表示为文件的所在群组  </span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls命令参数：ls -[alrtAFR]</span><br><span class="line">-a 显示所有文件及目录 (ls内定将文件名或目录名称开头为&quot;.&quot;的视为隐藏档，不会列出)</span><br><span class="line">-l 除文件名称外，亦将文件型态、权限、拥有者、文件大小等资讯详细列出</span><br><span class="line">-r 将文件以相反次序显示(原定依英文字母次序)</span><br><span class="line">-t 将文件依建立时间之先后次序列出</span><br><span class="line">-A 同 -a ，但不列出 &quot;.&quot; (目前目录) 及 &quot;..&quot; (父目录)</span><br><span class="line">-F 在列出的文件名称后加一符号；例如可执行档则加 &quot;*&quot;, 目录则加 &quot;/&quot;</span><br><span class="line">-R 若目录下有文件，则以下之文件亦皆依序列出</span><br></pre></td></tr></table></figure>
<h4 id="查看运行进程的用户名-ps命令"><a href="#查看运行进程的用户名-ps命令" class="headerlink" title="查看运行进程的用户名  ps命令"></a>查看运行进程的用户名  ps命令</h4><p>ps命令，要对进程进行监测和控制,首先必须要了解当前进程的情况,也就是需要查看当前进程, 而ps命令（Process Status）就是最基本同时也是非常强大的进程查看命令。使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵尸、哪些进程占用了过多的资源等等。总之大部分信息都是可以通过执行该命令得到的。ps提供的进程查看是一次性的，如果想要动态结果，可以使用top命令。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# ps aux |less      //ps aux是显示所有进程和其状态</span><br><span class="line">一般配合grep命令使用</span><br><span class="line">[root@server1 ~]#ps aux |grep httpd</span><br><span class="line">USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">root          1  0.1  0.6 128000  6548 ?        Ss   07:17   0:01 /usr/lib/systemd/systemd --switched-root --system --deserialize 22</span><br><span class="line">root          2  0.0  0.0      0     0 ?        S    07:17   0:00 [kthreadd]</span><br><span class="line">root          3  0.0  0.0      0     0 ?        S    07:17   0:00 [ksoftirqd/0]</span><br><span class="line">root          5  0.0  0.0      0     0 ?        S&lt;   07:17   0:00 [kworker/0:0H]</span><br><span class="line">root          6  0.0  0.0      0     0 ?        S    07:17   0:00 [kworker/u256:0]</span><br><span class="line">root          7  0.0  0.0      0     0 ?        S    07:17   0:00 [migration/0]</span><br><span class="line">root          8  0.0  0.0      0     0 ?        S    07:17   0:00 [rcu_bh]</span><br><span class="line">root          9  0.0  0.0      0     0 ?        R    07:17   0:00 [rcu_sched]</span><br><span class="line">root         10  0.0  0.0      0     0 ?        S&lt;   07:17   0:00 [lru-add-drain]</span><br><span class="line">root         11  0.0  0.0      0     0 ?        S    07:17   0:00 [watchdog/0]</span><br><span class="line">root         13  0.0  0.0      0     0 ?        S    07:17   0:00 [kdevtmpfs]</span><br><span class="line">root         14  0.0  0.0      0     0 ?        S&lt;   07:17   0:00 [netns]</span><br></pre></td></tr></table></figure>
<p>ps aux输出格式：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND</span><br></pre></td></tr></table></figure>
<p>格式说明：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">USER: 行程拥有者</span><br><span class="line">PID: pid</span><br><span class="line">%CPU: 占用的 CPU 使用率</span><br><span class="line">%MEM: 占用的记忆体使用率</span><br><span class="line">VSZ: 占用的虚拟记忆体大小</span><br><span class="line">RSS: 占用的记忆体大小</span><br><span class="line">TTY: 终端的次要装置号码 (minor device number of tty)</span><br><span class="line">STAT: 该行程的状态，linux的进程有5种状态：</span><br><span class="line">D 不可中断 uninterruptible sleep (usually IO)</span><br><span class="line">R 运行 runnable (on run queue)</span><br><span class="line">S 中断 sleeping</span><br><span class="line">T 停止 traced or stopped</span><br><span class="line">Z 僵死 a defunct (”zombie”) process</span><br><span class="line">注: 其它状态还包括W(无驻留页), &lt;(高优先级进程), N(低优先级进程), L(内存锁页).</span><br><span class="line">START: 行程开始时间</span><br><span class="line">TIME: 执行的时间</span><br><span class="line">COMMAND:所执行的指令</span><br></pre></td></tr></table></figure>
<h4 id="和用户组相关的一些文件"><a href="#和用户组相关的一些文件" class="headerlink" title="和用户组相关的一些文件"></a>和用户组相关的一些文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/etc/passwd </span><br><span class="line">root:x:0:0:root:/root:/bin/bash # 用户信息</span><br><span class="line">用户名:x:uid:gid:描述:HOME:shell # x密码占位符</span><br><span class="line"></span><br><span class="line">/etc/shadow</span><br><span class="line">root:$6$j3YZCHCXpIiDho7x$v4/j6b0zGgyTcfP6jOa1ZY.q.sHvqQp/nsmEowjrtmo/iFKdo4X</span><br><span class="line">piWZm5OpDKqhZEw8OSXTpdAM2JyIgBI.Mz0::0:99999:7:::</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">id</span>$salt<span class="variable">$encrypted</span> <span class="comment"># 密码信息，用户的密码和有效期都在这个文件中</span></span></span><br><span class="line"></span><br><span class="line">/etc/group </span><br><span class="line">root:x:0: # 组的信息</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">格式是  组名:口令:组标识号:组内用户列表</span></span><br></pre></td></tr></table></figure>
<h4 id="系统约定"><a href="#系统约定" class="headerlink" title="系统约定"></a>系统约定</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uid:0 特权用户</span><br><span class="line">uid:1~999 系统用户</span><br><span class="line">uid:1000+ 普通用户</span><br></pre></td></tr></table></figure>
<h4 id="root用户的权力"><a href="#root用户的权力" class="headerlink" title="root用户的权力"></a>root用户的权力</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uid是0</span><br><span class="line">所有权力</span><br><span class="line">该用户有权力覆盖文件系统上的普通权限</span><br><span class="line">安装或删除软件并管理系统文件和目录</span><br><span class="line">大多数设备只能由root控制</span><br></pre></td></tr></table></figure>
<h2 id="用户组管理"><a href="#用户组管理" class="headerlink" title="用户组管理"></a>用户组管理</h2><h3 id="添加用户组：groupadd"><a href="#添加用户组：groupadd" class="headerlink" title="添加用户组：groupadd"></a>添加用户组：groupadd</h3><p>用于将新组加入系统。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">groupadd [选项] 组 </span><br><span class="line">-g &lt;gid&gt;：指定组ID号。  </span><br><span class="line">-o：允许组ID号，不必惟一。  </span><br><span class="line">-r：加入组ID号，系统组id号必须低于500  </span><br><span class="line">-f：加入已经有的组时，程序退出。</span><br><span class="line">-K：覆盖配置文件 /etc/login.defs</span><br></pre></td></tr></table></figure>
<h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# groupadd hr -g 1000</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看一下是否添加成功</span></span><br><span class="line">[root@server1 ~]# tail -n 1 /etc/group</span><br><span class="line">hr:x:1000:</span><br></pre></td></tr></table></figure>
<h3 id="修改用户组：groupmod"><a href="#修改用户组：groupmod" class="headerlink" title="修改用户组：groupmod"></a>修改用户组：groupmod</h3><p>用于更改群组识别码或名称</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">groupmod [选项] 组 </span><br><span class="line">-g：将组 ID 改为 GID</span><br><span class="line">-n：改名为 NEW_GROUP</span><br><span class="line">-o：允许使用重复的 GID</span><br></pre></td></tr></table></figure>
<h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改hr为hr1</span></span><br><span class="line">[root@server1 ~]# groupmod -n hr1 hr</span><br><span class="line">[root@server1 ~]# tail -n 1 /etc/group</span><br><span class="line">hr1:x:1000:</span><br></pre></td></tr></table></figure>
<h3 id="删除用户组：groupdel"><a href="#删除用户组：groupdel" class="headerlink" title="删除用户组：groupdel"></a>删除用户组：groupdel</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# groupdel hr1</span><br></pre></td></tr></table></figure>
<h3 id="用户组成员管理：gpasswd"><a href="#用户组成员管理：gpasswd" class="headerlink" title="用户组成员管理：gpasswd"></a>用户组成员管理：gpasswd</h3><p>该命令用于将用户添加到组里或者从组里删除‘</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> 用法：gpasswd[-a user][-d user][-A user,...][-M user,...][-r][-R]groupname</span><br><span class="line"> 参数：</span><br><span class="line">-a：添加用户到组</span><br><span class="line">-d：从组删除用户</span><br><span class="line">-A：指定管理员</span><br><span class="line">-M：指定组成员和-A的用途差不多</span><br><span class="line">-r：删除密码</span><br><span class="line">-R：限制用户登入组，只有组中的成员才可以用newgrp加入该组 </span><br></pre></td></tr></table></figure>
<h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# useradd user1</span><br><span class="line">[root@server1 ~]# groupadd test</span><br><span class="line">[root@server1 ~]# gpasswd -a user1 test</span><br><span class="line">正在将用户“user1”加入到“test”组中</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>用户管理</title>
    <url>/2023/12/25/11.%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><h3 id="用户分类"><a href="#用户分类" class="headerlink" title="用户分类"></a>用户分类</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">用户UID                              含义</span><br><span class="line">  0                              超级用户管理员</span><br><span class="line">1-200                  系统用户，用来运行系统自带的进程，默认已创建</span><br><span class="line">201-1000           系统用户，用来运行用户安装的程序，所以此类用户无需登录系统</span><br><span class="line">1000+              普通用户，正常可以登陆系统的用户权限比较小能执行的任务有限</span><br></pre></td></tr></table></figure>
<h3 id="添加用户：useradd"><a href="#添加用户：useradd" class="headerlink" title="添加用户：useradd"></a>添加用户：useradd</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">useradd 选项 用户名</span><br><span class="line">-u 用户号：指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。</span><br><span class="line">-g：表示指定用户的用户主组，选项的值可以是用户组的id，也可以是组名</span><br><span class="line">-G：表示指定用户的用户附加组，选项的值可以是用户组的id，也可以是组名</span><br><span class="line">-d 目录：指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。</span><br><span class="line">-m：创建用户的主目录</span><br><span class="line">-c ：注释与说明</span><br><span class="line">-s Shell文件：指定用户的登录Shell。</span><br></pre></td></tr></table></figure>
<h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1.创建指定用户组的用户</span></span><br><span class="line">[root@server1 ~]# useradd -g test user1</span><br><span class="line">[root@server1 ~]# find / -name user1 -ls</span><br><span class="line">17275456    0 drwx------   2 user1    test           62 1月  5 20:27 /home/user1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2.为新添加的用户指定home目录</span></span><br><span class="line">[root@server1 ~]# useradd -d /home/test user3</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">3.创建一个不给登录的用户</span></span><br><span class="line">[root@server1 ~]# useradd -s /sbin/nologin user4</span><br></pre></td></tr></table></figure>
<h3 id="修改用户：usermod"><a href="#修改用户：usermod" class="headerlink" title="修改用户：usermod"></a>修改用户：usermod</h3><p>usermod命令用于修改用户的基本信息。但是不允许修改正在线上的使用者帐号名称。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">usermod(选项)(登录名称)</span><br><span class="line">-c&lt;备注&gt;：修改用户帐号的备注文字;</span><br><span class="line">-d&lt;登入目录&gt;：修改用户登入时的目录；</span><br><span class="line">-e&lt;有效期限&gt;：修改帐号的有效期限；</span><br><span class="line">-f&lt;缓冲天数&gt;： 修改在密码过期后多少天即关闭该帐号；</span><br><span class="line">-g&lt;群组&gt;：修改用户所属的群组；</span><br><span class="line">-G&lt;群组&gt;：修改用户所属的附加群组；</span><br><span class="line">-l&lt;帐号名称&gt;： 修改用户帐号名称；</span><br><span class="line">-L： 锁定用户密码，使密码无效；</span><br><span class="line">-s&lt;shell&gt;：修改用户登入后所使用的shell；</span><br><span class="line">-u&lt;uid&gt;：修改用户ID；</span><br><span class="line">-U: 解除密码锁定。</span><br><span class="line">-a：追加，默认的修改是覆盖</span><br></pre></td></tr></table></figure>
<h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改newuser的用户名为newuser1</span></span><br><span class="line">usermod -l newuser1 newuser</span><br><span class="line">------------------------------------------</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">把<span class="built_in">test</span>用户加入usertest组</span></span><br><span class="line">usermod -aG usertest test</span><br><span class="line">------------------------------------------</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">改变用户的uid</span></span><br><span class="line">usermod -u 6666 user02</span><br></pre></td></tr></table></figure>
<h3 id="删除用户：userdel"><a href="#删除用户：userdel" class="headerlink" title="删除用户：userdel"></a>删除用户：userdel</h3><p>删除用户，不加参数，不删除用户相关文件，俗称没删干净，后续可能会出现问题。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">userdel [-r][用户帐号] </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">加r连着文件夹一起删除</span></span><br></pre></td></tr></table></figure>
<h3 id="passwd文件中的shell"><a href="#passwd文件中的shell" class="headerlink" title="passwd文件中的shell"></a>passwd文件中的shell</h3><p>&#x2F;etc&#x2F;passwd 文件会发现在每行的最后是登录成功之后执行的命令，大家可以把这个字段理解为登陆以后拥有的权限。如果这里使用的是 bash 命令解释器，就代表这个用户拥有权限范围内的所有权限。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> [root@server1 ~]# vim /etc/passwd  </span><br><span class="line">lamp:x:502:502::/home/lamp:/bin/bash</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">添加了 lamp 用户，它使用的是 bash 命令解释器，那么这个用户就可以使用普通用户的所有权限。</span></span><br><span class="line">---------------------------------------------------------</span><br><span class="line">[root@server1 ~]# vi /etc/passwd  </span><br><span class="line">lamp:x:502:502::/home/lamp:/sbin/nologin</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改为 /sbin/nologin，那么，这个用户就不能登录</span></span><br><span class="line">----------------------------------------------------------</span><br><span class="line">[root@server1 ~]#vi /etc/passwd  </span><br><span class="line">lamp:x:502:502::/home/lamp:/usr/bin/passwd</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用户可以登录，但登录之后就只能修改自己的密码，不能有其他操作</span></span><br></pre></td></tr></table></figure>
<h2 id="用户密码管理"><a href="#用户密码管理" class="headerlink" title="用户密码管理"></a>用户密码管理</h2><h3 id="passwd命令"><a href="#passwd命令" class="headerlink" title="passwd命令"></a>passwd命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">passwd [选项...] &lt;帐号名称&gt; </span><br><span class="line">-k：保持身份验证令牌不过期</span><br><span class="line">-d：删除已命名帐号的密码(只有根用户才能进行此操作)</span><br><span class="line">-l：锁定指名帐户的密码(仅限 root 用户)</span><br><span class="line">-u：解锁指名账户的密码(仅限 root 用户)</span><br><span class="line">-x：密码的最长有效时限(只有根用户才能进行此操作)</span><br><span class="line">-n：密码的最短有效时限(只有根用户才能进行此操作)</span><br><span class="line">-w：在密码过期前多少天开始提醒用户(只有根用户才能进行此操作)</span><br><span class="line">-i：当密码过期后经过多少天该帐号会被禁用(只有根用户才能进行此操作)</span><br><span class="line">-S：报告已命名帐号的密码状态(只有根用户才能进行此操作)</span><br><span class="line">--stdin：从标准输入读取令牌(只有根用户才能进行此操作，批量可用)</span><br></pre></td></tr></table></figure>
<h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改<span class="built_in">test</span>用户密码</span></span><br><span class="line">[root@server1 ~]# passwd test</span><br><span class="line">更改用户test的密码 。</span><br><span class="line">新的 密码：</span><br><span class="line">重新输入新的 密码：</span><br><span class="line">passwd：所有的身份验证令牌已经成功更新。</span><br><span class="line"></span><br><span class="line">--------------------------------------------------</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用管道符设置用户密码(批量)</span></span><br><span class="line">[root@server1 ~]# echo 123456 | passwd --stdin test</span><br><span class="line">更改用户 test的密码 。</span><br><span class="line">passwd：所有的身份验证令牌已经成功更新。</span><br></pre></td></tr></table></figure>
<h3 id="login-defs文件"><a href="#login-defs文件" class="headerlink" title="login.defs文件"></a>login.defs文件</h3><p>&#x2F;etc&#x2F;login.defs 文件用于在创建用户时，对用户的一些基本属性做默认设置，例如指定用户 UID 和 GID 的范围，用户的过期时间，密码的最大长度等。需要注意的是，该文件的用户默认配置对 root 用户无效。并且，当此文件中的配置与 &#x2F;etc&#x2F;passwd 和 &#x2F;etc&#x2F;shadow 文件中的用户信息有冲突时，系统会以&#x2F;etc&#x2F;passwd 和 &#x2F;etc&#x2F;shadow 为准。</p>
<h3 id="chage命令"><a href="#chage命令" class="headerlink" title="chage命令"></a>chage命令</h3><p>作用：chage用于密码的实效管理，用来修改帐号和密码的有效期。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chage [选项] 登录</span><br><span class="line">-l：列出用户的以及密码的有效期限</span><br><span class="line">-m:修改密码的最小天数</span><br><span class="line">-M：修改密码的最大天数</span><br><span class="line">-I：密码过期后，锁定帐号的天数</span><br><span class="line">-d：指定密码最后修改的日期</span><br><span class="line">-E：有效期，0表示立即过期，-1表示永不过期</span><br><span class="line">-W：密码过期前，开始警告天数</span><br></pre></td></tr></table></figure>
<h4 id="举例-1"><a href="#举例-1" class="headerlink" title="举例"></a>举例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1.强制用户在下次登录的时候换密码</span></span><br><span class="line">[root@server1 ~]# chage -d 0 test1</span><br><span class="line">---------------------------------------------------</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2.创建用于切换的用户</span></span><br><span class="line">[root@server1 ~]# useradd test2</span><br><span class="line">[root@server1 ~]# passwd test2</span><br><span class="line">更改用户 test2 的密码 。</span><br><span class="line">新的 密码：</span><br><span class="line">重新输入新的 密码：</span><br><span class="line">passwd：所有的身份验证令牌已经成功更新。</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置密码过期时间为立即过期（0）:</span></span><br><span class="line">[root@server1 ~]# chage -E 0 test1</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">测试过程：</span></span><br><span class="line">[root@server1 ~]# su - test2</span><br><span class="line">[test2@server1 ~]$ pwd</span><br><span class="line">/home/test2</span><br><span class="line">[test2@server1 ~]$ su - test1</span><br><span class="line">密码：</span><br><span class="line">您的帐户已失效；请与系统管理员取得联系</span><br><span class="line">su: 用户帐户已失效</span><br></pre></td></tr></table></figure>
<h2 id="用户提权"><a href="#用户提权" class="headerlink" title="用户提权"></a>用户提权</h2><h3 id="sudoers文件"><a href="#sudoers文件" class="headerlink" title="sudoers文件"></a>sudoers文件</h3><p>&#x2F;etc&#x2F;sudoers是sudo的配置文件，可配置某个普通用户可以使用的sudo命令，这样普通用户不需要知道root的密码也可以使用部分root权限，提高了系统安全性。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看一下配置文件最后</span></span><br><span class="line">root ALL=(ALL:ALL) ALL</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">wheel ALL=(ALL) ALL</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">sudo ALL=(ALL:ALL) ALL</span></span><br><span class="line"></span><br><span class="line">编辑公式：</span><br><span class="line">授权用户/组 主机 =[(切换到哪些用户或组)] [是否需要输入密码验证] 命令1,命令2,...</span><br><span class="line">字段1 字段2 =[(字段3)] [字段4] 字段5</span><br><span class="line">字段3、字段4，是可以省略的。</span><br></pre></td></tr></table></figure>
<h4 id="字段详解"><a href="#字段详解" class="headerlink" title="字段详解"></a>字段详解</h4><ul>
<li>“字段1”不以%号开头的表示”将要授权的用户”, 比如例子中的root；以%号开头的表示”将要授权的组”, 比如例子中的%wheel组和 %sudo组。</li>
<li>“字段2”表示允许登录的主机, ALL表示所有; 如果该字段不为ALL,表示授权用户只能在某些机器上登录本服务器来执行sudo命令。如：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">user1 mycomputer=/usr/sbin/reboot,/usr/sbin/shutdown</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">表示: 普通用户user1在主机(或主机组)mycomputer上, 可以通过sudo执行reboot和shutdown两个命令。<span class="string">&quot;字段3&quot;</span>和<span class="string">&quot;字段4&quot;</span>省略。</span></span><br></pre></td></tr></table></figure></li>
<li>“字段3”如果省略, 相当于(root:root)，表示可以通过sudo提权到root; 如果为(ALL)或者(ALL:ALL), 表示能够提权到(任意用户:任意用户组)。请注意，”字段3”如果没省略,必须使用( )双括号包含起来。这样才能区分是省略了”字段3”还是省略了”字段4”。</li>
<li>“字段4”的可能取值是NOPASSWD:。请注意NOPASSWD后面带有冒号:。表示执行sudo时可以不需要输入密码。比如:<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">user1 ALL=(ALL) NOPASSWD: /bin/useradd</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">表示: 普通用户user1可以在任何主机上, 通过sudo执行/bin/useradd命令, 并且不需要输入密码</span></span><br><span class="line">---------------------------------------</span><br><span class="line">user1 ALL=(ALL) NOPASSWD: ALL</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">表示: 普通用户user1可以在任何主机上, 通过sudo执行任何命令, 并且不需要输入密码</span></span><br><span class="line">---------------------------------------</span><br><span class="line">touhid ALL = (root) NOPASSWD: /usr/bin/find</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用户可以从任何终端运行，以root用户身份运行命令find 而无需密码</span></span><br></pre></td></tr></table></figure></li>
<li>“字段5”是使用逗号分开一系列命令,这些命令就是授权给用户的操作; ALL表示允许所有操作。</li>
</ul>
<h4 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h4><p>命令都是要使用绝对路径, 这是为了避免目录下有用户自己创建的同名命令被执行。</p>
<h4 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h4><p>一般可以通过visudo命令来修改该文件，通过visudo修改，如果配置出错，会有提示，可以减少风险。一般不要直接修改源文件，而是将修改写在&#x2F;etc&#x2F;sudoers.d&#x2F;目录下的文件中。这样的话，要在最后一行加上#includedir &#x2F;etc&#x2F;sudoers.d。一般默认会有。<br>TIP：#在这一行里不是表示注释，不能删除。也不能在#号后有空格。</p>
<h3 id="sudo命令"><a href="#sudo命令" class="headerlink" title="sudo命令"></a>sudo命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-u username：以指定用户的身份执行命令，而不是默认的root用户。</span><br><span class="line">-i：以登录shell的方式执行命令，即为用户启动一个新的shell，并加载该用户的配置文件。</span><br><span class="line">-v：更新用户的sudo时间戳，而无需执行任何命令。这通常用于延长sudo会话的过期时间。</span><br><span class="line">-l：列出用户可以在sudo时执行的命令及其对应的权限。</span><br></pre></td></tr></table></figure>

<blockquote>
<ol>
<li>当用户执行sudo时，系统会主动寻找 &#x2F;etc&#x2F;sudoers 文件，判断该用户是否有执行sudo的权限</li>
<li>确认用户具有可执行sudo的权限后，让用户输入用户自己的密码确认</li>
<li>若密码输入成功，则开始执行sudo后续的命令</li>
</ol>
</blockquote>
<h4 id="赋予用户sudo权限"><a href="#赋予用户sudo权限" class="headerlink" title="赋予用户sudo权限"></a>赋予用户sudo权限</h4><p>用useradd添加的用户没有提权权限。以root用户身份执行如下命令, 将用户加入wheel&#x2F;admin&#x2F;sudo组。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">usermod -a -G wheel &lt;用户名&gt; </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">提示没有对应组就创建groupadd</span></span><br></pre></td></tr></table></figure>
<h4 id="举例-2"><a href="#举例-2" class="headerlink" title="举例"></a>举例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将用户追加到wheel组</span></span><br><span class="line">[root@server1 ~]# usermod -a -G wheel user</span><br><span class="line">[root@server1 ~]# su - user</span><br><span class="line">[user@server1 ~]$ cat /etc/shadow</span><br><span class="line">cat: /etc/shadow: 权限不够</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">提权</span></span><br><span class="line">[user@server1 ~]$ sudo -u root cat /etc/shadow</span><br><span class="line">[sudo] user 的密码：</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">可精简为</span></span><br><span class="line">[user@server1 ~]$ sudo cat /etc/shadow</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sudo -u root用的比较多，可以被精简为sudo</span></span><br></pre></td></tr></table></figure>

<h3 id="sudo时间戳"><a href="#sudo时间戳" class="headerlink" title="sudo时间戳"></a>sudo时间戳</h3><p>sudo命令在执行时会检查用户最近一次使用sudo的时间戳。如果时间戳过期（默认时间为5分钟），则需要用户重新输入密码。这个时间戳保存在<code>/var/db/sudo</code>目录下，文件名以用户名为基础。</p>
<p>可以通过修改sudo配置文件中的<code>timestamp_timeout</code>选项来调整时间戳的过期时间。例如，将<code>timestamp_timeout</code>设置为0可以禁用时间戳功能，每次执行sudo命令时都需要输入密码。</p>
<h3 id="sudo日志记录"><a href="#sudo日志记录" class="headerlink" title="sudo日志记录"></a>sudo日志记录</h3><p>sudo命令的执行记录会保存在系统日志中，通常可以通过查看<code>/var/log/secure</code>或<code>/var/log/auth.log</code>文件来检索这些记录。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>文件管理</title>
    <url>/2023/11/16/5.%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><h3 id="文件定位-路径"><a href="#文件定位-路径" class="headerlink" title="文件定位 路径"></a>文件定位 路径</h3><p><strong>绝对路径</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">从根目录开始，依次将各级子目录的名字组合起来，形成的路径就称为某个文件的绝对路径。例如，根目录（/）下有目录usr，usr目录下有子目录bin，bin目录下有文件chsh，则chsh文件的绝对路径就是：/usr/bin/chsh</span><br></pre></td></tr></table></figure>
<p><strong>相对路径</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">相对当前所在路径的位置，例如当前所在的位置为/usr，也就是在根目录的usr子目录下，则chsh文件相对当前位置的路径为：bin/chsh</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# pwd   //显示当前目录</span><br><span class="line">/root</span><br><span class="line">[root@server1 ~]# cd - # 返回上次目录</span><br><span class="line">/home/aaron</span><br><span class="line">[root@server1 aaron]# cd ~ # 直接回家</span><br><span class="line">[root@server1 aaron]# cd # 直接回家</span><br></pre></td></tr></table></figure>

<h3 id="文件管理：创建-复制-移动-删除"><a href="#文件管理：创建-复制-移动-删除" class="headerlink" title="文件管理：创建&#x2F;复制&#x2F;移动&#x2F;删除"></a>文件管理：创建&#x2F;复制&#x2F;移动&#x2F;删除</h3><h4 id="创建-touch-mkdir"><a href="#创建-touch-mkdir" class="headerlink" title="创建 touch| mkdir"></a>创建 touch| mkdir</h4><p><strong>文件创建：touch命令</strong><br>touch命令有两个作用：一个是修改文件的时间，一个是建立新的空文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">无选项状态下：若文件不存在，则创建新的空文件，access time，modify time和change time均为当前时间；若文件存在，则将三个时间戳均修改为当前时间。</span><br><span class="line">-a：只修改文件的access time</span><br><span class="line">注意：access time修改后，change time也被修改（因为状态发生了改变）</span><br><span class="line">-m：只修改文件的modify time</span><br><span class="line">注意：modify time修改后，change time也被修改（因为状态发生了改变）</span><br><span class="line">-c：不创建不存在的文件（当touch后操作多个文件时，不存在的文件将不会被创建）</span><br><span class="line">-d：使用指定的日期时间，而非现在的时间，可以使用各种不同的格式</span><br><span class="line">-t：将时间修改为参数指定的日期，如：07081556代表7月8号15点56分</span><br><span class="line">注意：change time发生了变化，变成了当前时间</span><br><span class="line">----------------------------------------------------------</span><br><span class="line">CC   表示世纪</span><br><span class="line">YY   表示年</span><br><span class="line">MM   表示月</span><br><span class="line">DD   表示日</span><br><span class="line">hh   表示小时</span><br><span class="line">mm   表示分钟</span><br><span class="line">ss   表示秒</span><br><span class="line">其中世纪，年，秒是可选的！</span><br><span class="line">比如：202111062307.30    表示2021年11月6日23点07分30秒</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">touch也可以批量创建文件</span><br><span class="line">[root@server1 ~]#touch file&#123;1..10&#125; //创建file1—file10共10个文件，..表示连续值</span><br><span class="line">[root@server1 ~]#touch dir/student_&#123;zhangsan,lisi&#125;  #z</span><br><span class="line">[root@server1 ~]#touch -r目标文件  源文件   //修改两个文件的时间相同</span><br><span class="line">[root@server1 ~]#touch -t 201810121230 hh.sh 【-t用十进制数】 //设置时间戳</span><br></pre></td></tr></table></figure>
<p><strong>目录创建：mkdir命令</strong><br>mkdir 命令用来创建指定的名称的目录，要求创建目录的用户在当前目录中具有写权限，并且指定的目录名不能是当前目录中已有的目录。（区分大小写）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-m, --mode=模式，设定权限&lt;模式&gt; (类似 chmod)，而不是 rwxrwxrwx 减 umask</span><br><span class="line">-p, --parents  可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后,系统将自动建立好那些尚不存在的目录,即一次可以建立多个目录; </span><br><span class="line">-v, --verbose  每次创建新目录都显示信息（显示操作消息）</span><br><span class="line">    --help   显示此帮助信息并退出</span><br><span class="line">    --version  输出版本信息并退出</span><br></pre></td></tr></table></figure>

<p>实例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# mkdir test1  //创建一个空目录</span><br><span class="line">[root@server1 ~]# ll</span><br><span class="line">drwxr-xr-x. 2 root root    6 11月  7 09:52 test1</span><br><span class="line">-----------------------------------------------------</span><br><span class="line">[root@server1 test1]# mkdir -p test2/test22   //递归创建两个文件夹</span><br><span class="line">[root@server1 test1]# ll  //在test1下查看test2</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 3 root root 20 11月  5 08:37 test2</span><br><span class="line">[root@server1 test1]# cd test2     //test22是在test2下面的，这就是递归</span><br><span class="line">[root@server1 test2]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 11月  5 08:37 test22</span><br><span class="line">-----------------------------------------------------</span><br><span class="line">[root@server1 ~]# mkdir -m 777 test3 //创建权限为777的目录</span><br><span class="line">说明：目录的权限为rwxrwxrwx</span><br><span class="line">-----------------------------------------------------</span><br><span class="line">[root@server1 test2]# mkdir test4 -v  //每次创建都显示操作信息</span><br><span class="line">mkdir: 已创建目录 &quot;test4&quot;</span><br><span class="line">-----------------------------------------------------</span><br><span class="line">[root@server1 test]#mkdir -vp    scf/&#123;lib/,bin/,doc/&#123;info,product&#125;,logs/&#123;info,product&#125;,service/deploy/&#123;info,product&#125;&#125;  //递归创建目录结构</span><br><span class="line">mkdir: 已创建目录 “scf”</span><br><span class="line">mkdir: 已创建目录 “scf/lib”</span><br><span class="line">mkdir: 已创建目录 “scf/bin”</span><br><span class="line">mkdir: 已创建目录 “scf/doc”</span><br><span class="line">mkdir: 已创建目录 “scf/doc/info”</span><br><span class="line">mkdir: 已创建目录 “scf/doc/product”</span><br><span class="line">mkdir: 已创建目录 “scf/logs”</span><br><span class="line">mkdir: 已创建目录 “scf/logs/info”</span><br><span class="line">mkdir: 已创建目录 “scf/logs/product”</span><br><span class="line">mkdir: 已创建目录 “scf/service”</span><br><span class="line">mkdir: 已创建目录 “scf/service/deploy”</span><br><span class="line">mkdir: 已创建目录 “scf/service/deploy/info”</span><br><span class="line">mkdir: 已创建目录 “scf/service/deploy/product”</span><br><span class="line">````</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">### 复制 cp</span></span></span><br><span class="line"></span><br><span class="line">cp命令用来将一个或多个源文件或者目录复制到指定的目的文件或目录。它可以将单个源文件复制成一个指定文件名的具体的文件或一个已经存在的目录下。cp命令还支持同时复制多个文件，当一次复制多个文件时，目标文件参数必须是一个已经存在的目录，否则将出现错误。</span><br><span class="line">```shell</span><br><span class="line">cp(选项)(参数)</span><br><span class="line">-a：此参数的效果和同时指定&quot;-dpR&quot;参数相同；</span><br><span class="line">-d：当复制符号连接时，把目标文件或目录也建立为符号连接，并指向与源文件或目录连接的原始文件或目录；</span><br><span class="line">-f：强行复制文件或目录，不论目标文件或目录是否已存在；</span><br><span class="line">-i：覆盖既有文件之前先询问用户；</span><br><span class="line">-l：对源文件建立硬连接，而非复制文件；</span><br><span class="line">-p：保留源文件或目录的属性；</span><br><span class="line">-R/r：递归处理，将指定目录下的所有文件与子目录一并处理；</span><br><span class="line">-s：对源文件建立符号连接，而非复制文件；</span><br><span class="line">-u：使用这项参数后只会在源文件的更改时间较目标文件更新时或是名称相互对应的目标文件并不存在时，才复制文件；</span><br><span class="line">-S：在备份文件时，用指定的后缀“SUFFIX”代替文件的默认后缀；</span><br><span class="line">-b：覆盖已存在的文件目标前将目标文件备份；</span><br><span class="line">-v：详细显示命令执行的操作。</span><br></pre></td></tr></table></figure>
<p><strong>参数要求：</strong></p>
<ul>
<li>源文件：制定源文件列表。默认情况下，cp命令不能复制目录，如果要复制目录，则必须使用-R选项；</li>
<li>目标文件：指定目标文件。当“源文件”为多个文件时，要求“目标文件”为指定的目录。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">实例：</span><br><span class="line">如果把一个文件复制到一个目标文件中，而目标文件已经存在，那么，该目标文件的内容将被破坏。此命令中所有参数既可以是绝对路径名，也可以是相对路径名。通常会用到点.或点点..的形式。</span><br><span class="line">[root@server1 ~]# cp ../mary/homework/assign .  #将指定文件复制到当前目录下</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">所有目标文件指定的目录必须是己经存在的，cp命令不能创建目录。如果没有文件复制的权限，则系统会显示出错信息。</span><br><span class="line">[root@server1 ~]# cp file /usr/men/tmp/file1  //将文件file复制到目录/usr/men/tmp下，并改名为file1</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">将**目录**/usr/men下的所有文件及其子目录复制到目录/usr/zh中，用-R/r选项：</span><br><span class="line">[root@server1 ~]# cp -r /usr/men /usr/zh</span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">递归强制复制目录到指定目录中覆盖已存在文件：</span><br><span class="line">[root@server1 ~]# cp -rfb ./* ../backup</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将当前目录下所有文件，复制到当前目录的兄弟目录 backup 文件夹中</span></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">拷贝目录下的隐藏文件如 .babelrc：</span><br><span class="line">[root@server1 ~]# cp -r aaa/.* ./bbb</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将 aaa 目录下的，所有`.`开头的文件，复制到 bbb 目录中</span></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">复制到当前目录:</span><br><span class="line">[root@server1 ~]# cp aaa.conf ./</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将 aaa.conf 复制到当前目录</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="移动-mv"><a href="#移动-mv" class="headerlink" title="移动   mv"></a>移动   mv</h4><p>命令格式：mv  [-选项]      源文件或目录      目标文件或目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">视mv命令中第二个参数类型的不同（是目标文件还是目标目录），mv命令将文件重命名或将其移至一个新的目录中。当第二个参数类型是文件时，mv命令完成文件重命名，此时，源文件只能有一个（也可以是源目录名），它将所给的源文件或目录重命名为给定的目标文件名。当第二个参数是已存在的目录名称时，源文件或目录参数可以有多个，mv命令将各参数指定的源文件均移至目标目录中。在跨文件系统移动文件时，mv先拷贝，再将原有文件删除，而链至该文件的链接也将丢失。</span><br><span class="line">-b ：若需覆盖文件，则覆盖前先行备份。 </span><br><span class="line">-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</span><br><span class="line">-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！</span><br><span class="line">-u ：若目标文件已经存在，且 source 比较新，才会更新(update)</span><br><span class="line">-t ：即指定mv的目标目录，该选项适用于移动多个源文件到一个目录的情况，此时目标目录在前，源文件在后。</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">实例：</span><br><span class="line">[root@server1 test]# ll</span><br><span class="line">-rw-r--r-- 1 root root   16 10-28 06:04 test.log</span><br><span class="line">[root@server1 test]#mv test.log test1.txt  //文件改名,将文件test.log重命名为test1.txt</span><br><span class="line">[root@server1 test]# ll</span><br><span class="line">-rw-r--r-- 1 root root   16 10-28 06:04 test1.txt</span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">[root@server1 test]# mv test1.txt test3</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将text1.txt移动到test3文件夹中</span></span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">[root@server1 test]# mv log1.txt log2.txt log3.txt test3</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将log1.txt ，log2.txt， log3.txt 三个文件移到 test3目录中</span></span><br><span class="line">[root@server1 test3]# mv -t /opt/soft/test/test4/ log1.txt log2.txt  log3.txt   //-t命令时文件夹和文件位置互换</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将三个文件移到test4目录中</span></span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">[root@server1 test4]# mv -i log1.txt log2.txt </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将文件file1改名为file2，如果file2已经存在，则询问是否覆盖。文件1内容与文件2不同的时候，覆盖以后，这个文件里的内容会变成文件里的。</span></span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">[root@server1 test4]# mv -f log3.txt log2.txt </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">log3.txt的内容直接覆盖了log2.txt内容，-f这是个危险的选项，使用的时候一定要保持头脑清晰，一般情况下最好不用加上它。</span></span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">[root@server1 test]# mv test4 test3</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果目录dir2不存在，将目录dir1改名为dir2；否则，将dir1移动到dir2中。</span></span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">[root@server1 test4]# mv * ../</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">移动当前文件夹下的所有文件到上一级目录</span></span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">[root@server1 test]# mv test3/*.txt test5</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">把当前目录的一个子目录里的文件移动到另一个子目录里</span></span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">[root@server1 test5]# mv log1.txt -b log2.txt</span><br><span class="line">mv：是否覆盖“log2.txt”? y</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文件被覆盖前做简单备份，前面加参数-b</span></span><br></pre></td></tr></table></figure>
<h4 id="删除-rm"><a href="#删除-rm" class="headerlink" title="删除  rm"></a>删除  rm</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm是常用的命令，该命令的功能为删除一个目录中的一个或多个文件或目录，它也可以将某个目录及其下的所有文件及子目录均删除。对于链接文件，只是删除了链接，原有文件均保持不变。</span><br><span class="line">rm是一个危险的命令，使用的时候要特别当心，尤其对于新手，否则整个系统就会毁在这个命令（比如在/下执行rm * -rf）。所以，我们在执行rm之前最好先确认一下在哪个目录，到底要删除什么东西，操作时保持高度清醒的头脑。</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">格式：rm [选项] 文件… </span><br></pre></td></tr></table></figure>
<p><strong>命令参数：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-f, --force    忽略不存在的文件，从不给出提示。</span><br><span class="line">-i, --interactive 进行交互式删除</span><br><span class="line">-r, -R, --recursive   指示rm将参数中列出的全部目录和子目录均递归地删除。</span><br><span class="line">-v, --verbose    详细显示进行的步骤</span><br><span class="line">    --help     显示此帮助信息并退出</span><br><span class="line">    --version  输出版本信息并退出</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">实例：</span><br><span class="line">[root@server1 test1]# rm log.log </span><br><span class="line">rm：是否删除 一般文件 “log.log”? y</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输入<span class="built_in">rm</span> log.log命令后，系统会询问是否删除，输入y后就会删除文件，不想删除则数据n。</span></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">[root@server1 test1]# rm -f log1.log </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">强行删除file，系统不再提示。</span> </span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">[root@server1 test1]# rm -i *.log</span><br><span class="line">rm：是否删除 一般文件 “log1.log”? y</span><br><span class="line">rm：是否删除 一般文件 “log2.log”? y</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除任何.<span class="built_in">log</span>文件；删除前逐一询问确认</span> </span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# rm -r test1</span><br><span class="line">rm：是否进入目录 “test1”? y</span><br><span class="line">rm：是否删除 一般文件 “test1/log3.log”? y</span><br><span class="line">rm：是否删除 目录 “test1”? y</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将test1子目录及子目录中所有档案删除</span></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# rm -rf test2</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将test2子目录及子目录中所有档案删除,并且不用一一确认</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>文件权限管理</title>
    <url>/2023/12/26/12.%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h3 id="基本权限-U-G-O"><a href="#基本权限-U-G-O" class="headerlink" title="基本权限 U G O"></a>基本权限 U G O</h3><p>文件权限设置：可以赋予某个用户或组，能够以何种方式，访问某个文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">u的权限：r w x</span><br><span class="line">g的权限：r w x</span><br><span class="line">o的权限：r w x</span><br></pre></td></tr></table></figure>
<h4 id="UGO设置基本权限"><a href="#UGO设置基本权限" class="headerlink" title="UGO设置基本权限"></a>UGO设置基本权限</h4><h5 id="权限对象"><a href="#权限对象" class="headerlink" title="权限对象"></a>权限对象</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">属主：u</span><br><span class="line">属组：g</span><br><span class="line">其他人：o</span><br></pre></td></tr></table></figure>
<h5 id="权限类型"><a href="#权限类型" class="headerlink" title="权限类型"></a>权限类型</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">读：r 4</span><br><span class="line">写：w 2</span><br><span class="line">执行：x 1</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">rwx 7     rw- 6      r-- 4</span></span><br></pre></td></tr></table></figure>
<h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><h4 id="更改文件的属主、属组-chown-chgrp"><a href="#更改文件的属主、属组-chown-chgrp" class="headerlink" title="更改文件的属主、属组 chown chgrp"></a>更改文件的属主、属组 chown chgrp</h4><p>chmod是更改文件的权限 chown是改改文件的属主与属组 chgrp只是更改文件的属组。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法：chown 【选项】【所属主】【所属组】文件</span><br><span class="line">[root@server1 ~]# chown centos:hr file1 # 改属主、属组</span><br><span class="line">[root@server1 ~]# chown centos file1 # 只改属主</span><br><span class="line">[root@server1 ~]# chown :hr file1 # 只改属组</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法：chgrp [OPTION]... GROUP FILE</span><br><span class="line">[root@server1 ~]# chgrp it file1 # 改文件属性组</span><br><span class="line">[root@server1 ~]# chgrp -R it dir1 # 改文件属性组，-R是递归</span><br></pre></td></tr></table></figure>
<h4 id="更改文件权限-chmod"><a href="#更改文件权限-chmod" class="headerlink" title="更改文件权限 chmod"></a>更改文件权限 chmod</h4><h5 id="使用符号更改"><a href="#使用符号更改" class="headerlink" title="使用符号更改"></a>使用符号更改</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法：chmod ［who］ ［+ | – | =］ ［mode］ 文件名</span><br><span class="line">命令中各选项的含义为：</span><br><span class="line">操作对象who可是下述字母中的任一个或者它们的组合：</span><br><span class="line">u 表示“用户（user）”，即文件或目录的所有者。</span><br><span class="line">g 表示“同组（group）用户”，即与文件属主有相同组ID的所有用户。</span><br><span class="line">o 表示“其他（others）用户”。</span><br><span class="line">a 表示“所有（all）用户”。它是系统默认值。</span><br><span class="line">---------------------------------------------</span><br><span class="line">操作符号可以是：</span><br><span class="line">+ 添加某个权限。</span><br><span class="line">– 取消某个权限。</span><br><span class="line">= 赋予给定权限并取消其他所有权限（如果有的话）。</span><br><span class="line">设置mode所表示的权限可用下述字母的任意组合：</span><br><span class="line">r 可读。</span><br><span class="line">w 可写。</span><br><span class="line">x 可执行。</span><br></pre></td></tr></table></figure>
<p>实例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# chmod u+x file1 # 属主增加执行</span><br><span class="line">[root@server1 ~]# chmod a=rwx file1 # 所有人等于读写执行</span><br><span class="line">[root@server1 ~]# chmod a=- file1 # 所有人没有权限</span><br><span class="line">[root@server1 ~]# chmod ug=rw,o=r file1 # 属主属组等于读写，其他人只读</span><br><span class="line">[root@server1 ~]# ll file1 # 显示结果</span><br></pre></td></tr></table></figure>
<h5 id="使用数字更改"><a href="#使用数字更改" class="headerlink" title="使用数字更改"></a>使用数字更改</h5><p>数字表示的属性的含义：0表示没有权限，1表示可执行权限，2表示可写权限，4表示可读权限，然后将其相加。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# chmod 644 file1</span><br><span class="line">[root@server1 ~]# ll file1</span><br></pre></td></tr></table></figure>
<h4 id="r、w、x权限对文件和目录的意义"><a href="#r、w、x权限对文件和目录的意义" class="headerlink" title="r、w、x权限对文件和目录的意义"></a>r、w、x权限对文件和目录的意义</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">权限               对文件的影响                      对目录的影响</span><br><span class="line">r(读取)          可以读取文件的内容        可以列出目录的内容(文件名)，可以使用ls命令</span><br><span class="line">w(写入)          可以更改文件的内容        可以创建或删除目录中的任一文件，可以使用touch、rm命令</span><br><span class="line">x(可执行)        可以作为命令执行文件      可以访问目录的内容(取决于目录中文件的权限)，可以使用cd命令</span><br></pre></td></tr></table></figure>
<p>对目录有w权限,可以在目录中创建新文件，可以删除文件夹中的文件(跟文件权限无关)，对文件x权限小心给予。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# chmod 777 /dir10/</span><br><span class="line">[root@server1 ~]# chmod 000 /dir10/file1</span><br><span class="line">[root@server1 ~]# ll -d /dir10/</span><br><span class="line">drwxrwxrwx. 2 root root 19 9月  4 11:44 /dir10/</span><br><span class="line">[root@server1 ~]# ll /dir10/file1</span><br><span class="line">----------. 1 root root 0 9月  4 11:44 /dir10/file1</span><br><span class="line">[root@server1 ~]# su centos</span><br><span class="line">[centos@server1 root]$ cat /dir10/file1</span><br><span class="line">cat: /dir10/file1: 权限不够</span><br><span class="line">[centos@server1 root]$ rm -rf /dir10/file1</span><br></pre></td></tr></table></figure>
<h3 id="ACL设置基本权限-r-w-x"><a href="#ACL设置基本权限-r-w-x" class="headerlink" title="ACL设置基本权限 (r,w,x)"></a>ACL设置基本权限 (r,w,x)</h3><p>ACL主要是针对单一用户、单一文件或目录来进行r、w、x的特殊权限，实现灵活的权限管理，除了文件的所有者，所有组和其他人，可以对更多用户设置权限。centos7默认创建的xfs和ext4文件系统具有ACL功能。</p>
<h4 id="ACL基本用法-setfacl"><a href="#ACL基本用法-setfacl" class="headerlink" title="ACL基本用法 setfacl"></a>ACL基本用法 setfacl</h4><p>setfacl命令可以用来细分linux下的文件权限。chmod命令可以把文件权限分为u,g,o三个组，而setfacl可以对每一个文件或目录设置更精确的文件权限。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">setfacl</span><br><span class="line">常用选项：</span><br><span class="line">-m ：添加acl设定参数</span><br><span class="line">-x ：删除acl设定参数</span><br><span class="line">-b ：移除所有的ACL设定参数</span><br><span class="line">-R ：递归添加acl设定参数</span><br><span class="line">-d ：添加默认acl设定参数（目录）</span><br><span class="line">删除用户权限：setacl -x u:username filename</span><br><span class="line">删除组权限：setacl -x g:groupname filename</span><br><span class="line">删除整个acl权限：setacl -b filename</span><br></pre></td></tr></table></figure>
<p>看一个实例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# getfacl test   #查看一个test文件的acl</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">file: <span class="built_in">test</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">owner: root</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">group: root</span></span><br><span class="line">user::r-x</span><br><span class="line">user:tank:rwx #effective:---</span><br><span class="line">group::r-x #effective:---</span><br><span class="line">mask::---</span><br><span class="line">other::---</span><br></pre></td></tr></table></figure>
<p>修改之后再查看：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# setfacl -m u:zhangy:rw- test #修改文件的acl权限，添加一个用户权限</span><br><span class="line">[root@server1 ~]# getfacl test</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">file: <span class="built_in">test</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">owner: root</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">group: root</span></span><br><span class="line">user::r-x</span><br><span class="line">user:zhangy:rw- #多出来一个用户</span><br><span class="line">user:tank:rwx</span><br><span class="line">group::r-x</span><br><span class="line">mask::rwx</span><br><span class="line">other::---</span><br><span class="line">[root@server1 ~]# setfacl -m g:zhangying:r-w test #添加一个组</span><br><span class="line">[root@server1 ~]# getfacl test</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">file: <span class="built_in">test</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">owner: root</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">group: root</span></span><br><span class="line">user::r-x</span><br><span class="line">user:zhangy:rw-</span><br><span class="line">user:tank:rwx</span><br><span class="line">group::r-x</span><br><span class="line">group:zhangying:rw-</span><br><span class="line">mask::rwx</span><br><span class="line">other::---</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# setfacl -m u:centos:rw file1 # 增加用户权限</span><br><span class="line">[root@server1 ~]# setfacl -m u:user05:- file1 # 增加用户权限</span><br><span class="line">[root@server1 ~]# setfacl -m o::rw file1 # 修改其他人权限</span><br><span class="line"></span><br><span class="line">[root@server1 ~]# setfacl -m g:hr:r file1 # 增加组权限</span><br><span class="line">[root@server1 ~]# setfacl -x g:hr file1 # 删除组权限</span><br><span class="line">[root@server1 ~]# setfacl -b file1 # 删除所有acl权限</span><br><span class="line"></span><br><span class="line">[root@server1 ~]# man setfacl</span><br><span class="line">[root@server1 ~]# getfacl file1 |setfacl --set-file=- file2 # 复制file1的acl给file2</span><br></pre></td></tr></table></figure>
<h4 id="mask权限"><a href="#mask权限" class="headerlink" title="mask权限"></a>mask权限</h4><p>ACL权限一般与<strong>最大有效权限</strong>mask结合使用，ACL权限与mask权限相与的值相与后的权限，为设定的真实权限。mask用于临时降低用户或组(除属主和其他人)的权限。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果设定ACL权限为 r-- ,mask的权限为r-x，那么真实权限为r--。</span><br><span class="line">如果设定ACL权限为 rwx ,mask的权限为r-x，那么真实权限为r-x。</span><br><span class="line">意思就是ACL与mask两者同时具有某一权限时，真实权限才具备该权限，若有一方不具备该权限，则真实权限不具备此权限。</span><br><span class="line">mask权限默认为rwx，相当于没有意义，因为相当于我们设定的acl权限为acl权限本身。我们可以通过调整mask权限来完成指定权限的更改。</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# setfacl -m o::- file1</span><br><span class="line">[root@server1 ~]# setfacl -m m::--- file1</span><br><span class="line">[root@server1 ~]# getfacl file1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">file: file1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">owner: centos</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">group: it</span></span><br><span class="line">user::rw-</span><br><span class="line">group::r-- #effective:---</span><br><span class="line">mask::---</span><br><span class="line">other::---</span><br></pre></td></tr></table></figure>
<h4 id="default"><a href="#default" class="headerlink" title="default"></a>default</h4><p>一般针对目录，默认权限独立于该目录本身的权限，规定了在该目录中创建的文件的默认ACL权限。<br>要求：希望centos能够对 &#x2F;home 以及以后在 &#x2F;home 下新建的文件有读、写、执行权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# setfacl -m u:centos:rwx /home</span><br><span class="line">[root@server1 ~]# setfacl -m d:u:centos:rwx /home</span><br><span class="line">[root@server1 ~]# getfacl /home</span><br><span class="line">getfacl: Removing leading &#x27;/&#x27; from absolute path names</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">file: home</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">owner: root</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">group: root</span></span><br><span class="line">user::rwx</span><br><span class="line">user:centos:rwx</span><br><span class="line">group::r-x</span><br><span class="line">mask::rwx</span><br><span class="line">other::r-x</span><br><span class="line">default:user::rwx</span><br><span class="line">default:user:centos:rwx</span><br><span class="line">default:group::r-x</span><br><span class="line">default:mask::rwx</span><br><span class="line">default:other::r-x</span><br></pre></td></tr></table></figure>
<p>设置后，该目录下的所有文件创建时都会拥有其规定的ACL权限</p>
<h4 id="删除权限"><a href="#删除权限" class="headerlink" title="删除权限"></a>删除权限</h4><p>删除特定用户，将选项-m改为-x，参数最后一段舍去即可，例如</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">setfacl -x u:test a</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除了赋予<span class="built_in">test</span>用户的ACL权限</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除所有ACL权限，选项改为-d ，参数不加</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除默认ACL权限，选项改为-k ，参数不加</span></span><br></pre></td></tr></table></figure>
<h3 id="特殊权限"><a href="#特殊权限" class="headerlink" title="特殊权限"></a>特殊权限</h3><p>文件的特殊权限包括：SUID 4、SGID 2、SBIT 1</p>
<h4 id="SUID-Set-UID"><a href="#SUID-Set-UID" class="headerlink" title="SUID(Set UID)"></a>SUID(Set UID)</h4><p>suid：借出程序所有者的权限<br>s：程序所属主有x权限<br>S：程序所属主没有x权限<br>SUID权限仅对二进制程序有效<br>仅在本程序中拥有改权限<br>属主拥有s权限，即可将自己的权限暂时借给其他人使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# ll /root/file2</span><br><span class="line">-rw-r--rw-. 1 root root 0 9月  4 13:48 /root/file2</span><br><span class="line">[root@server1 ~]# su - centos</span><br><span class="line">上一次登录：日 9月  8 18:31:49 CST 2019pts/1 上</span><br><span class="line">[centos@server1 ~]$ cat /root/file2</span><br><span class="line">cat: /root/file2: 权限不够</span><br><span class="line">[centos@server1 ~]$ ll /root/file2</span><br><span class="line">ls: 无法访问/root/file2: 权限不够</span><br></pre></td></tr></table></figure>
<p>系统会检查进程的所有者，根据所有者设置的权限来确定是否对文件有权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# ll /etc/shadow</span><br><span class="line">----------. 1 root root 1760 9月  5 11:12 /etc/shadow</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">普通用户依旧是可以修改密码</span></span><br><span class="line">[root@server1 ~]# ll /usr/bin/passwd</span><br><span class="line">-rwsr-xr-x. 1 root root 27832 6月  10 2014 /usr/bin/passwd</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">密码文件/etc/shadow只有root用户拥有修改权限，那其他用户是如何修改自身密码的呢，那就是由于命令passwd拥有SUID权限</span><br><span class="line">  a、vbird 对於 /usr/bin/passwd 这个程序来说是具有 x 权限的，表示 vbird 能运行 passwd；</span><br><span class="line">  b、passwd 的拥有者是 root 这个帐号；</span><br><span class="line">  c、vbird 运行 passwd 的过程中，会『暂时』获得 root 的权限；</span><br><span class="line">  d、/etc/shadow 就可以被 vbird 所运行的 passwd 所修改。</span><br><span class="line">但如果vbird使用cat去读取/etc/shadow时，他能够读取吗？因为cat不具有SUID的权限，所以vbird运行『cat/etc/shadow』时，是不能读取/etc/shadow的。</span><br></pre></td></tr></table></figure>
<h4 id="SGID权限"><a href="#SGID权限" class="headerlink" title="SGID权限"></a>SGID权限</h4><p>1.针对用户组权限位修改，用户创建的目录或文件所属组和该目录的所属组一致。（比如给一个文件路径设置了特殊权限为 ，假设这个路径数组为hr，那么user1在此目录下创建的文件数组将不是user1组，而是hr组）<br>二进制程序有效<br>执行者拥有x权限<br>执行过程中暂时拥有用户组权限<br>高级权限的类型<br>s：程序所属主有x权限<br>S：程序所属主没有x权限</p>
<h4 id="SBIT权限"><a href="#SBIT权限" class="headerlink" title="SBIT权限"></a>SBIT权限</h4><p><strong>用来做共享目录</strong><br><strong>当属主拥有x权限时，用小写的字母t表示，当属主没有x权限时，用大写字母T权限表示1</strong><br>只针对目录有效<br><strong>用户在此目录中创建文件时，只有root用户和自己可以删除该文件，其他用户是不可以修改此文件</strong><br>典型例子&#x2F;tmp这个目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[zhangsan@server1 tmp]$ ll -d /tmp/</span><br><span class="line">drwxrwxrwt. 9 root root 4096 9月 13 16:08 /tmp/</span><br><span class="line">suid 4 # 使用文件所有者身份执行文件&lt;针对文件&gt;</span><br><span class="line">sgid 2 # 新建文件继承目录属组&lt;针对目录&gt;</span><br><span class="line">sticky 1 # 文件只能由文件拥有者，root,文件夹拥有者删除&lt;针对目录&gt;</span><br></pre></td></tr></table></figure>
<h4 id="SUID，SGID，Sticky-Bit-权限设置"><a href="#SUID，SGID，Sticky-Bit-权限设置" class="headerlink" title="SUID，SGID，Sticky Bit 权限设置"></a>SUID，SGID，Sticky Bit 权限设置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1.以符号进行赋权</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SUID赋权</span></span><br><span class="line">chmod u+s filename</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SGID赋权</span></span><br><span class="line">chmod g+s filename/dirname</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBIT赋权</span></span><br><span class="line">chmod o+t filename</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2.以数字进行赋权</span></span><br><span class="line">SUID SGID SBIT</span><br><span class="line"> 4    2    1</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">举例</span></span><br><span class="line">chmod 1777 filename 等效与chmod o+t filename</span><br><span class="line">chmod 7777 filename 等效于同时为赋权SUID、SGID、SBIT权限</span><br></pre></td></tr></table></figure>
<p>&#x2F;tmp 文件夹是1777权限，否则会导致程序不能正常运行</p>
<h4 id="chattr权限"><a href="#chattr权限" class="headerlink" title="chattr权限"></a>chattr权限</h4><p>可以改变文件的属性，对root有限制</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法：chattr 【+-=】【选项】 +文件名或目录名</span><br><span class="line">+：增加权限</span><br><span class="line">-：删除权限</span><br><span class="line">=：等于某权限</span><br><span class="line">选项：</span><br><span class="line">i：对于文件，不允许对文件进行删除，改名，添加和修改数据，但可以看。</span><br><span class="line">对于目录，只能修改目录下的文件数据，但不允许建立和删除文件。（相当于把文件或目录锁起来）</span><br><span class="line">a：对于文件，只能在文件中增加数据，但是不能删除也不能修改数据。（不能用vim来添加或删除数据，只能用echo，如：echo 内</span><br><span class="line">容&gt;&gt;文件名）</span><br><span class="line">对于目录，只允许在目录中建立和修改文件，但是不允许删除。（相当于把已经有的数据锁起来）</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# lsattr file2</span><br><span class="line">---------------- file2</span><br><span class="line">[root@server1 ~]# chattr +a file2</span><br><span class="line">[root@server1 ~]# lsattr file2</span><br><span class="line">-----a---------- file2</span><br><span class="line">[root@server1 ~]# man chattr</span><br><span class="line">----------</span><br><span class="line">ATTRIBUTES(属性)</span><br><span class="line">当修改设置了&#x27;A&#x27;属性的文件时,它的atime记录不会改变.</span><br><span class="line">这可以在笔记本电脑系统中避免某些磁盘I/O处理.</span><br><span class="line">设置了`a&#x27;属性的文件只能在添加模式下打开用于写入. 只有超级用户可以设置或清除该属性.</span><br><span class="line">设置了`c&#x27;属性的文件在磁盘上由内核自动进行压缩处理.</span><br><span class="line">从该文件读取时返回的是未压缩的数据.</span><br><span class="line">对该文件的一次写入会在保存它们到磁盘之前进行数据压缩.</span><br><span class="line">设置了`d&#x27;属性的文件不能对其运行 dump(8) 程序进行备份.</span><br><span class="line">设置了`i&#x27;属性的文件不能进行修改:你既不能删除它,也不能给它重新命名,你不能对该文件创建链接, 而且也不能对该文件写入任何数据.</span><br><span class="line">只有超级用户可以设置或清除该属性.</span><br><span class="line">当删除设置了`s&#x27;属性的文件时,将对其数据块清零 并写回到磁盘上.</span><br><span class="line">当修改设置了`S&#x27;属性的文件时,修改会同步写入到磁盘上;</span><br><span class="line">这与应用到文件子系统上的`sync&#x27;挂载选项有相同的效果.</span><br><span class="line">当删除设置了`u&#x27;属性的文件时, 将会保存其内容. 这使得用户可以请求恢复被删除的文件.</span><br></pre></td></tr></table></figure>
<h4 id="umask-进程的文件权限掩码"><a href="#umask-进程的文件权限掩码" class="headerlink" title="umask 进程的文件权限掩码"></a>umask 进程的文件权限掩码</h4><p>umask概述：登录系统之后在当前登录shell进程l中，创建一个文件总是有一个默认权限的，默认权限的由来就是umask干的事情，umask设置了用户创建文件的默认权限，它与chmod的效果刚好相反，umask设置的是权限“补码”，而chmod设置的是文件权限码。umask表示要减掉得到权限。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">shell (vim,touch) 新文件或目录权限</span><br><span class="line">vsftpd 新文件或目录权限</span><br><span class="line">samba 新文件或目录权限</span><br><span class="line">useradd 用户HOME</span><br><span class="line"></span><br><span class="line">[root@server1 ~]# type -a umask</span><br><span class="line">umask 是 shell 内嵌</span><br><span class="line">umask 是 /usr/bin/umask</span><br><span class="line">[root@server1 ~]# help umask</span><br><span class="line">umask: umask [-p] [-S] [模式]</span><br><span class="line"> 显示或设定文件模式掩码。</span><br><span class="line"> </span><br><span class="line"> 设定用户文件创建掩码为 MODE 模式。如果省略了 MODE，则打印当前掩码的值。</span><br><span class="line"> </span><br><span class="line"> 如果MODE 模式以数字开头，则被当作八进制数解析；否则是一个chmod(1) 可接收的符号模式串。</span><br><span class="line"> 选项：</span><br><span class="line">   -p 如果省略 MDOE 模式，以可重用为输入的格式输入</span><br><span class="line">   -S 以符号形式输出，否则以八进制数格式输出</span><br><span class="line">   </span><br><span class="line"> 退出状态：</span><br><span class="line"> 返回成功，除非使用了无效的 MODE 模式或者选项。</span><br></pre></td></tr></table></figure>
<p>实例1：在shell进程中创建文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# umask # 查看当前用户的umask权限</span><br><span class="line">0022</span><br><span class="line">[root@server1 ~]# umask -S # 查看最终有的权限</span><br><span class="line">u=rwx,g=rx,o=rx</span><br><span class="line">[root@server1 ~]# touch file1</span><br><span class="line">[root@server1 ~]# mkdir dir1</span><br><span class="line">[root@server1 ~]# ll -d dir1/ file1</span><br><span class="line">drwxr-xr-x. 2 root root 6 9月  9 09:29 dir1/</span><br><span class="line">-rw-r--r--. 1 root root 0 9月  9 09:29 file1</span><br></pre></td></tr></table></figure>
<p>实例2：修改shell umask值(临时)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# umask 0000</span><br><span class="line">[root@server1 ~]# mkdir dir2</span><br><span class="line">[root@server1 ~]# touch file2</span><br><span class="line">[root@server1 ~]# ll -d file2 dir2</span><br><span class="line">drwxrwxrwx. 2 root root 6 9月  9 09:31 dir2</span><br><span class="line">-rw-rw-rw-. 1 root root 0 9月  9 09:31 file2</span><br></pre></td></tr></table></figure>
<p>示例3:修改shell umask值(永久 建议别改)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# vim /etc/profile</span><br><span class="line">--------------</span><br><span class="line">59 if [ $UID -gt 199 ] &amp;&amp; [ &quot;`/usr/bin/id -gn`&quot; = &quot;`/usr/bin/id -un`&quot; ];</span><br><span class="line">then</span><br><span class="line">60   umask 002</span><br><span class="line">61 else</span><br><span class="line">62   umask 022</span><br><span class="line">63 fi</span><br><span class="line">---------------</span><br><span class="line">[root@server1 ~]# source /etc/profile # 立即在当前shell中生效</span><br></pre></td></tr></table></figure>
<p>示例4:通过umask决定新建用户 HOME 目录的权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# vim /etc/login.defs</span><br><span class="line">-----------------</span><br><span class="line">61 # The permission mask is initialized to this value. If not specified,</span><br><span class="line">62 # the permission mask will be initialized to 022.</span><br><span class="line">63 UMASK      077</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>文件查看</title>
    <url>/2023/11/17/6.%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B/</url>
    <content><![CDATA[<h3 id="文件查看"><a href="#文件查看" class="headerlink" title="文件查看"></a>文件查看</h3><p><strong>各种系统文件：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/bin/date</span><br><span class="line">/etc/hostname</span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">/etc/passwd</span><br><span class="line">/etc/shadow</span><br><span class="line">/etc/group</span><br><span class="line">/etc/grub2.cfg</span><br><span class="line">/etc/resolv.conf</span><br><span class="line">/etc/profile # 设置系统环境变量</span><br><span class="line">/etc/bashrc # 影响bash shell环境</span><br><span class="line">/var/log/messages # 系统主日志文件</span><br><span class="line">/var/log/secure # 跟安全相关的日志如ssh登录，本地登录......</span><br></pre></td></tr></table></figure>
<h4 id="文本文件-cat与tac"><a href="#文本文件-cat与tac" class="headerlink" title="文本文件  cat与tac"></a>文本文件  cat与tac</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat命令的用途是连接文件或标准输入并打印。这个命令常用来显示文件内容，或者将几个文件连接起来显示，或者从标准输入读取内容并显示，它常与重定向符号配合使用。 </span><br><span class="line">1.命令格式：</span><br><span class="line">cat [选项] [文件]...</span><br><span class="line">2.命令功能：</span><br><span class="line">(1)一次显示整个文件:cat filename</span><br><span class="line">(2)从键盘创建一个文件:cat &gt; filename 只能创建新文件,不能编辑已有文件.</span><br><span class="line">(3)将几个文件合并为一个文件:cat file1 file2 &gt; file</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">命令参数：</span><br><span class="line">-A, --show-all           等价于 -vET</span><br><span class="line">-b, --number-nonblank    对非空输出行编号</span><br><span class="line">-e                       等价于 -vE</span><br><span class="line">-E, --show-ends          在每行结束处显示 $</span><br><span class="line">-n, --number             对输出的所有行编号,由1开始对所有输出的行数编号</span><br><span class="line">-s, --squeeze-blank      有连续两行以上的空白行，就代换为一行的空白行 </span><br><span class="line">-t                       与 -vT 等价</span><br><span class="line">-T, --show-tabs          将跳格字符显示为 ^I</span><br><span class="line">-u                       (被忽略)</span><br><span class="line">-v, --show-nonprinting   使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">实例：</span><br><span class="line">[root@server1 test]# cat -n log2012.log log2013.log </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">把log2012.log的文件内容加上行号后输入log2013.log这个文件里</span></span><br><span class="line">------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# cat -b log2012.log log2013.log log.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">把log2012.log和log2013.log的文件内容加上行号（空白行不加）之后将内容附加到log.log里。</span></span><br><span class="line">------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# cat -n log2012.log &gt; log.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">把log2012.log的文件内容加上行号后输入log.log这个文件里</span> </span><br><span class="line">------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# cat &gt;log.txt &lt;&lt;EOF</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用here doc来生成文件  EOF是终止符</span></span><br><span class="line">------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# tac log.txt </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">tac</span>是将<span class="built_in">cat</span>反写过来，所以他的功能就跟<span class="built_in">cat</span>相反，<span class="built_in">cat</span>是由第一行到最后一行连续显示在萤幕上，而<span class="built_in">tac</span>则是由最后一行到第一行反向在萤幕上显示出来！</span></span><br></pre></td></tr></table></figure>
<h4 id="less命令"><a href="#less命令" class="headerlink" title="less命令"></a>less命令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">less工具也是对文件或其它输出进行分页显示的工具，应该说是linux正统查看文件内容的工具， 功能极其强大。less的用法比起more更加的有弹性。在more的时候，我们并没有办法向前面翻， 只能往后面看，但若使用了 less 时，就可以使用 [pageup] [pagedown] 等按键的功能来往前往后翻看文件，更容易用来查看一个文件的内容！除此之外，在less里头可以拥有更多的搜索功能，不止可以向下搜，也可以向上搜。</span><br></pre></td></tr></table></figure>
<p><strong>命令参数：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">less [参数]  文件</span><br><span class="line">-b &lt;缓冲区大小&gt; 设置缓冲区的大小</span><br><span class="line">-e  当文件显示结束后，自动离开</span><br><span class="line">-f  强迫打开特殊文件，例如外围设备代号、目录和二进制文件</span><br><span class="line">-g  只标志最后搜索的关键词</span><br><span class="line">-i  忽略搜索时的大小写</span><br><span class="line">-m  显示类似more命令的百分比</span><br><span class="line">-N  显示每行的行号</span><br><span class="line">-o &lt;文件名&gt; 将less 输出的内容在指定文件中保存起来</span><br><span class="line">-Q  不使用警告音</span><br><span class="line">-s  显示连续空行为一行</span><br><span class="line">-S  行过长时间将超出部分舍弃</span><br><span class="line">-x &lt;数字&gt; 将“tab”键显示为规定的数字空格</span><br></pre></td></tr></table></figure>
<p><strong>快捷使用：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/字符串：向下搜索“字符串”的功能</span><br><span class="line">?字符串：向上搜索“字符串”的功能</span><br><span class="line">n：重复前一个搜索（与 / 或 ? 有关）</span><br><span class="line">N：反向重复前一个搜索（与 / 或 ? 有关）</span><br><span class="line">b  向后翻一页</span><br><span class="line">d  向后翻半页</span><br><span class="line">h  显示帮助界面</span><br><span class="line">Q  退出less 命令</span><br><span class="line">u  向前滚动半页</span><br><span class="line">y  向前滚动一行</span><br><span class="line">空格键 滚动一行</span><br><span class="line">回车键 滚动一页</span><br><span class="line">[pagedown]： 向下翻动一页</span><br><span class="line">[pageup]：   向上翻动一页</span><br></pre></td></tr></table></figure>
<p><strong>使用实例：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 test]#less log2013.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看文件</span></span><br><span class="line">-----------------------------------------------------</span><br><span class="line">[root@server1 test]#ps -ef |less</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ps查看进程信息并通过less分页显示</span> </span><br><span class="line">-----------------------------------------------------</span><br><span class="line">[root@server1 test]#Less log2013.log log2014.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输入：n后，切换到log2014.log     输入：p后，切换到log2013.log</span></span><br></pre></td></tr></table></figure>
<p><strong>附加备注：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.全屏导航</span><br><span class="line">ctrl + F - 向前移动一屏</span><br><span class="line">ctrl + B - 向后移动一屏</span><br><span class="line">ctrl + D - 向前移动半屏</span><br><span class="line">ctrl + U - 向后移动半屏</span><br><span class="line">2.单行导航</span><br><span class="line">j - 向前移动一行</span><br><span class="line">k - 向后移动一行</span><br><span class="line">3.其它导航</span><br><span class="line">G - 移动到最后一行</span><br><span class="line">g - 移动到第一行</span><br><span class="line">q / ZZ - 退出 less 命令</span><br></pre></td></tr></table></figure>
<h4 id="more命令"><a href="#more命令" class="headerlink" title="more命令"></a>more命令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">more命令，功能类似 cat，cat命令是整个文件的内容从上到下显示在屏幕上。more会以一页一页的显示方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按b键就会往回（back）一页显示，而且还有搜寻字串的功能 。more命令从前向后读取文件，因此在启动时就加载整个文件。</span><br></pre></td></tr></table></figure>
<p><strong>参数选项：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">more [-dlfpcsu ] [-num ] [+/ pattern] [+ linenum] [file ... ] </span><br><span class="line">+n        从笫n行开始显示</span><br><span class="line">-n        定义屏幕大小为n行</span><br><span class="line">+/pattern 在每个档案显示前搜寻该字串（pattern），然后从该字串前两行之后开始显示  </span><br><span class="line">-c        从顶部清屏，然后显示</span><br><span class="line">-d        提示“Press space to continue，’q’ to quit，禁用响铃功能</span><br><span class="line">-l        忽略Ctrl+l（换页）字符</span><br><span class="line">-p        通过清除窗口而不是滚屏来对文件进行换页，与-c选项相似</span><br><span class="line">-s        把连续的多个空行显示为一行</span><br><span class="line">-u        把文件内容中的下画线去掉</span><br></pre></td></tr></table></figure>
<p><strong>常见操作：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Enter    向下n行，需要定义。默认为1行</span><br><span class="line">Ctrl+F   向下滚动一屏</span><br><span class="line">空格键    向下滚动一屏</span><br><span class="line">Ctrl+B   返回上一屏</span><br><span class="line">=        输出当前行的行号</span><br><span class="line">：f      输出文件名和当前行的行号</span><br><span class="line">V       调用vi编辑器</span><br><span class="line">!命令    调用Shell，并执行命令 </span><br><span class="line">q       退出more</span><br></pre></td></tr></table></figure>
<p><strong>使用实例：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 test]# more +3 log2012.log </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示文件中从第3行起的内容</span></span><br><span class="line">----------------------------------------------------------</span><br><span class="line">[root@server1 test]# more +/day3 log2012.log </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">从文件中查找第一个出现<span class="string">&quot;day3&quot;</span>字符串的行，并从该处前两行开始显示输出</span> </span><br><span class="line">----------------------------------------------------------</span><br><span class="line">[root@server1 test]# more -5 log2012.log </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">设定每屏显示行数</span> </span><br><span class="line">----------------------------------------------------------</span><br><span class="line">[root@server1 test]#  ls -l  | more -5</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">列一个目录下的文件，由于内容太多，我们应该学会用more来分页显示。这得和管道 | 结合起来</span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">每页显示5个文件信息，按Ctrl+F或者空格键将会显示下5条文件信息。</span></span><br></pre></td></tr></table></figure>
<h4 id="head命令"><a href="#head命令" class="headerlink" title="head命令"></a>head命令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">head与tail就像它的名字一样的浅显易懂，它是用来显示开头或结尾某个数量的文字区块，head 用来显示档案的开头至标准输出中，而tail想当然尔就是看档案的结尾。 </span><br></pre></td></tr></table></figure>
<p><strong>参数选项：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">head [参数]... [文件]...  </span><br><span class="line">-q 隐藏文件名</span><br><span class="line">-v 显示文件名</span><br><span class="line">-c&lt;字节&gt; 显示字节数</span><br><span class="line">-n&lt;行数&gt; 显示的行数</span><br></pre></td></tr></table></figure>
<p><strong>使用实例：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 test]# head -n 5 log2014.log </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示文件的前n行</span></span><br><span class="line">-----------------------------------------------------</span><br><span class="line">[root@server1 test]# head -c 20 log2014.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示文件前n个字节</span></span><br><span class="line">-----------------------------------------------------</span><br><span class="line">[root@server1 test]# head -c -32 log2014.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文件的除了最后n个字节以外的内容</span> </span><br><span class="line">-----------------------------------------------------</span><br><span class="line">[root@server1 test]# head -n -6 log2014.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输出文件除了最后n行的全部内容</span></span><br></pre></td></tr></table></figure>
<h4 id="tail命令"><a href="#tail命令" class="headerlink" title="tail命令"></a>tail命令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail命令从指定点开始将文件写到标准输出.使用tail命令的-f选项可以方便的查阅正在改变的日志文件,tail -f filename会把filename里最尾部的内容显示在屏幕上,并且不但刷新,使你看到最新的文件内容。默认一次10h</span><br></pre></td></tr></table></figure>
<p><strong>参数选项：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tail[必要参数][选择参数][文件]</span><br><span class="line">-f 循环读取</span><br><span class="line">-q 不显示处理信息</span><br><span class="line">-v 显示详细的处理信息</span><br><span class="line">-c&lt;数目&gt; 显示的字节数</span><br><span class="line">-n&lt;行数&gt; 显示行数</span><br><span class="line">--pid=PID 与-f合用,表示在进程ID,PID死掉之后结束. </span><br><span class="line">-q, --quiet, --silent 从不输出给出文件名的首部 </span><br><span class="line">-s, --sleep-interval=S 与-f合用,表示在每次反复的间隔休眠S秒 </span><br></pre></td></tr></table></figure>
<p><strong>使用实例：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 test]# tail -n 5 log2014.log </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示文件末尾内容,显示文件最后5行内容</span></span><br><span class="line">-------------------------------------------------------------</span><br><span class="line">[root@server1 ~]# tail -f test.log </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">循环查询文件</span></span><br><span class="line">-------------------------------------------------------------</span><br><span class="line">[root@server1 test]# tail -n +5 log2014.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">从第5行开始显示文件</span></span><br></pre></td></tr></table></figure>
<h4 id="tailf命令"><a href="#tailf命令" class="headerlink" title="tailf命令"></a>tailf命令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tailf命令几乎等同于tail -f，严格说来应该与tail --follow=name更相似些。当文件改名之后它也能继续跟踪，特别适合于日志文件的跟踪（follow the growth of a log file）。与tail -f不同的是，如果文件不增长，它不会去访问磁盘文件。tailf特别适合那些便携机上跟踪日志文件，因为它能省电，因为减少了磁盘访问。</span><br><span class="line">tailf命令不是个脚本，而是一个用C代码编译后的二进制执行文件，某些Linux安装之后没有这个命令。</span><br></pre></td></tr></table></figure>
<p><strong>参数选项：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tailf [参数] [文件]</span><br><span class="line">-n	输出最后数行</span><br><span class="line">-NUMBER	与NUMBER相同</span><br><span class="line">-V	输出版本信息并退出</span><br><span class="line">-h	显示帮助并退出</span><br></pre></td></tr></table></figure>
<p><strong>使用实例：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# tailf -n 5 log2014.log</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示最后5行的信息</span></span><br><span class="line">[root@server1 ~]# tailf log/WEB.LOG </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示文件内容</span></span><br></pre></td></tr></table></figure>
<h4 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。</span><br><span class="line">grep的工作方式是这样的，它在一个或多个文件中搜索字符串模板。如果模板包括空格，则必须被引用，模板后的所有字符串被看作文件名。搜索的结果被送到标准输出，不影响原文件内容。</span><br><span class="line">grep可用于shell脚本，因为grep通过返回一个状态值来说明搜索的状态，如果模板搜索成功，则返回0，如果搜索不成功，则返回1，如果搜索的文件不存在，则返回2。我们利用这些返回值就可进行一些自动化的文本处理工作。</span><br></pre></td></tr></table></figure>
<p><strong>命令参数：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep [option] pattern file</span><br><span class="line">-a   --text</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">不要忽略二进制的数据。</span>   </span><br><span class="line">-A&lt;显示行数&gt;   --after-context=&lt;显示行数&gt;   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">除了显示符合范本样式的那一列之外，并显示该行之后的内容。</span>   </span><br><span class="line">-b   --byte-offset   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在显示符合样式的那一行之前，标示出该行第一个字符的编号。</span>   </span><br><span class="line">-B&lt;显示行数&gt;   --before-context=&lt;显示行数&gt;   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">除了显示符合样式的那一行之外，并显示该行之前的内容。</span>   </span><br><span class="line">-c    --count   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">计算符合样式的列数。</span>   </span><br><span class="line">-C&lt;显示行数&gt;    --context=&lt;显示行数&gt;或-&lt;显示行数&gt;   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">除了显示符合样式的那一行之外，并显示该行之前后的内容。</span>   </span><br><span class="line">-d &lt;动作&gt;      --directories=&lt;动作&gt;   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。</span> </span><br><span class="line">-e&lt;范本样式&gt;  --regexp=&lt;范本样式&gt;   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">指定字符串做为查找文件内容的样式。</span>   </span><br><span class="line">-E      --extended-regexp   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将样式为延伸的普通表示法来使用。</span>   </span><br><span class="line">-f&lt;规则文件&gt;  --file=&lt;规则文件&gt;   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。</span>   </span><br><span class="line">-F   --fixed-regexp   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将样式视为固定字符串的列表。</span>   </span><br><span class="line">-G   --basic-regexp   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将样式视为普通的表示法来使用。</span>   </span><br><span class="line">-h   --no-filename   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在显示符合样式的那一行之前，不标示该行所属的文件名称。</span>   </span><br><span class="line">-H   --with-filename   #在显示符合样式的那一行之前，表示该行所属的文件名称。   </span><br><span class="line">-i    --ignore-case   #忽略字符大小写的差别。   </span><br><span class="line">-l    --file-with-matches   #列出文件内容符合指定的样式的文件名称。   </span><br><span class="line">-L   --files-without-match   #列出文件内容不符合指定的样式的文件名称。   </span><br><span class="line">-n   --line-number   #在显示符合样式的那一行之前，标示出该行的列数编号。   </span><br><span class="line">-q   --quiet或--silent   #不显示任何信息。   </span><br><span class="line">-r   --recursive   #此参数的效果和指定“-d recurse”参数相同。   </span><br><span class="line">-s   --no-messages   #不显示错误信息。   </span><br><span class="line">-v   --revert-match   #显示不包含匹配文本的所有行。   </span><br><span class="line">-V   --version   #显示版本信息。   </span><br><span class="line">-w   --word-regexp   #只显示全字符合的列。   </span><br><span class="line">-x    --line-regexp   #只显示全列符合的列。   </span><br><span class="line">-y   #此参数的效果和指定“-i”参数相同。</span><br></pre></td></tr></table></figure>
<p><strong>规则表达式：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">^    #锚定行的开始 如：&#x27;^grep&#x27;匹配所有以grep开头的行。    </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">   <span class="comment">#锚定行的结束 如：&#x27;grep$&#x27;匹配所有以grep结尾的行。</span></span>    </span><br><span class="line">.    #匹配一个非换行符的字符 如：&#x27;gr.p&#x27;匹配gr后接一个任意字符，然后是p。    </span><br><span class="line">*    #匹配零个或多个先前字符 如：&#x27;*grep&#x27;匹配所有一个或多个空格后紧跟grep的行。    </span><br><span class="line">.*   #一起用代表任意字符。   </span><br><span class="line">[]   #匹配一个指定范围内的字符，如&#x27;[Gg]rep&#x27;匹配Grep和grep。</span><br><span class="line">[^]  #匹配一个不在指定范围内的字符，如：&#x27;[^A-FH-Z]rep&#x27;匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。</span><br><span class="line">\(..\)     #标记匹配字符，如&#x27;\(love\)&#x27;，love被标记为1。    </span><br><span class="line">\&lt;         #锚定单词的开始，如:&#x27;\&lt;grep&#x27;匹配包含以grep开头的单词的行。    </span><br><span class="line">\&gt;         #锚定单词的结束，如&#x27;grep\&gt;&#x27;匹配包含以grep结尾的单词的行。    </span><br><span class="line">x\&#123;m\&#125;     #重复字符x，m次，如：&#x27;0\&#123;5\&#125;&#x27;匹配包含5个o的行。    </span><br><span class="line">x\&#123;m,\&#125;    #重复字符x,至少m次，如：&#x27;o\&#123;5,\&#125;&#x27;匹配至少有5个o的行。    </span><br><span class="line">x\&#123;m,n\&#125;   #重复字符x，至少m次，不多于n次，如：&#x27;o\&#123;5,10\&#125;&#x27;匹配5--10个o的行。   </span><br><span class="line">\w         #匹配文字和数字字符，也就是[A-Za-z0-9]，如：&#x27;G\w*p&#x27;匹配以G后跟零个或多个文字或数字字符，然后是p。   </span><br><span class="line">\W         #\w的反置形式，匹配一个或多个非单词字符，如点号句号等。   </span><br><span class="line">\b         #单词锁定符，如: &#x27;\bgrep\b&#x27;只匹配grep。</span><br><span class="line">\d	       #匹配一个数字字符。等价于[0-9]。</span><br></pre></td></tr></table></figure>
<p><strong>常用的正则表达式：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">用户名	        /^[a-z0-9_-]&#123;3,16&#125;$/</span><br><span class="line">密码	        /^[a-z0-9_-]&#123;6,18&#125;$/</span><br><span class="line">十六进制值	  /^#?([a-f0-9]&#123;6&#125;|[a-f0-9]&#123;3&#125;)$/</span><br><span class="line">URL	    /^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]&#123;2,6&#125;)([\/\w \.-]*)*\/?$/</span><br></pre></td></tr></table></figure>
<p><strong>使用实例：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# ps -ef|grep svn</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第一条记录是查找出的进程；第二条结果是grep进程本身，并非真正要找的进程。</span></span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# cat test.txt | grep -f test2.txt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输出test.txt文件中含有从test2.txt文件中读取出的关键词的内容行</span></span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# cat test.txt | grep -nf test2.txt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输出test.txt文件中含有从test2.txt文件中读取出的关键词的内容行，并显示每一行的行号</span></span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# grep -n &#x27;linux&#x27; test.txt </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">从文件中查找关键词,并显示行号</span></span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# grep -n &#x27;linux&#x27; test.txt test2.txt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">从多个文件中查找关键词，多文件时，输出查询到的信息内容行时，会把文件的命名在行最前面输出并且加上<span class="string">&quot;:&quot;</span>作为标示符。</span></span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# cat test.txt |grep ^u</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">找出已u开头的行内容</span></span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# cat test.txt |grep ^[^u]</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输出非u开头的行内容</span></span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# cat test.txt |grep hat$</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输出以hat结尾的行内容</span></span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# cat test.txt |grep -E &quot;ed|at&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示包含ed或者at字符的内容行</span></span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">[root@server1 test]# grep &#x27;[a-z]\&#123;7\&#125;&#x27; *.txt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示当前目录下面以.txt 结尾的文件中的所有包含每个字符串至少有7个连续小写字符的字符串的行</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Vim编辑器</title>
    <url>/2023/11/20/7.vim%E7%BC%96%E8%BE%91%E5%99%A8/</url>
    <content><![CDATA[<h2 id="Vim编辑器"><a href="#Vim编辑器" class="headerlink" title="Vim编辑器"></a>Vim编辑器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi编辑器是所有Unix及Linux系统下标准的编辑器，他就相当于windows系统中的记事本一样，它的强大不逊色于任何最新的文本编辑器。他是我们使用Linux系统不能缺少的工具。由于对Unix及linux系统的任何版本，vi编辑器是完全相同的，学会它后，您将在Linux的世界里畅行无阻。</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- vim 具有程序编辑的能力，可以以字体颜色辨别语法的正确性，方便程序设计。</span><br><span class="line">- vim可以当作vi的升级版本，他可以用多种颜色的方式来显示一些特殊的信息。</span><br><span class="line">- vim会依据文件扩展名或者是文件内的开头信息， 判断该文件的内容而自动的执行该程序的语法判断式，再以颜色来显示程序代码与一般信息。</span><br><span class="line">- vim里面加入了很多额外的功能，例如支持正则表达式的搜索、多文件编辑、块复制等等。</span><br></pre></td></tr></table></figure>
<h5 id="Vim的工作模式"><a href="#Vim的工作模式" class="headerlink" title="Vim的工作模式"></a>Vim的工作模式</h5><p><img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/vim.png"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim 是模块化的编辑器</span><br><span class="line">vim 的基本模式包括：</span><br><span class="line">	1、编辑模式：Nromal，默认模式，移动光标，剪切/粘贴文本</span><br><span class="line">	2、输入模式：Insert，插入模式，用于修改文本</span><br><span class="line">	3、末行模式：内置的命令行接口（extended command），用于保存、退出等</span><br></pre></td></tr></table></figure>
<h5 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# yum install vim -y</span><br></pre></td></tr></table></figure>
<h5 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim [options] [file ..] +</span><br><span class="line">	+#：打开文件后，直接让光标处于第#行的行首</span><br><span class="line">	+/PATTERN：打开文件后，直接让光标处于第一个被PATTERN匹配到的行的行首</span><br></pre></td></tr></table></figure>
<h5 id="模式转换"><a href="#模式转换" class="headerlink" title="模式转换"></a>模式转换</h5><p>打开文件时，默认模式是处于编辑模式。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">编辑模式 --&gt; 输入模式：</span><br><span class="line">	i：insert, 在光标所在处输入</span><br><span class="line">	a: append，在光标在处后方输入</span><br><span class="line">	o：在光标所在处的下方打开一个新行</span><br><span class="line">	I：在光标所在行的行首输入</span><br><span class="line">	A：在光标所在行的行尾输入</span><br><span class="line">	O：在光标所在处的上方打开一个新行</span><br><span class="line">----------------------------------------------------</span><br><span class="line">输入模式 --&gt; 编辑模式</span><br><span class="line">	ESC</span><br><span class="line">----------------------------------------------------</span><br><span class="line">编辑模式 --&gt; 末行模式</span><br><span class="line">	:</span><br><span class="line">----------------------------------------------------</span><br><span class="line">末行模式 --&gt; 编辑模式</span><br><span class="line">	ESC，Enter </span><br></pre></td></tr></table></figure>
<h5 id="关闭文件"><a href="#关闭文件" class="headerlink" title="关闭文件"></a>关闭文件</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">- 编辑模式:</span><br><span class="line">ZZ                        # 保存并退出</span><br><span class="line">ZQ                        # 不保存退出</span><br><span class="line">- 末行模式：</span><br><span class="line">:q                        # 退出</span><br><span class="line">:q!                       # 强制退出，不保存此前的编辑操作</span><br><span class="line">:wq                       # 保存并退出</span><br><span class="line">:w, :q                    # 保存并退出</span><br><span class="line">:x                        # 保存并退出</span><br><span class="line">:w /PATH/TO/SOMEFILE      # 保存文件至指定的路径</span><br></pre></td></tr></table></figure>
<h3 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h3><h4 id="编辑模式：光标跳转"><a href="#编辑模式：光标跳转" class="headerlink" title="编辑模式：光标跳转"></a>编辑模式：光标跳转</h4><h5 id="字符间跳转"><a href="#字符间跳转" class="headerlink" title="字符间跳转"></a>字符间跳转</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">h                          # 左</span><br><span class="line">j                          # 下</span><br><span class="line">k                          # 上</span><br><span class="line">l                          # 右</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">COMMAND                   <span class="comment"># 跳转由#指定的个数的字符</span></span></span><br><span class="line">5k                         # 向上跳转5个字符</span><br><span class="line">3l                         # 向右跳转3个字符</span><br></pre></td></tr></table></figure>
<h5 id="单词间跳转"><a href="#单词间跳转" class="headerlink" title="单词间跳转"></a>单词间跳转</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">w                          # 下一个单词的词首</span><br><span class="line">e                          # 当前或后一个单词的词尾</span><br><span class="line">b                          # 当前或前一个单词的词首</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">COMMAND                   <span class="comment"># 跳转由#指定的个数的单词</span></span></span><br><span class="line">3w                         # 跳转到下三个单词的词首</span><br></pre></td></tr></table></figure>
<h5 id="行首行尾跳转"><a href="#行首行尾跳转" class="headerlink" title="行首行尾跳转"></a>行首行尾跳转</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">^                          # 跳转至行首的第一个非空白字符</span><br><span class="line">0                          # 跳转至行首，数字0，字母O和o是由编辑模式进入到输入模式</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">                         <span class="comment"># 跳转至行尾</span></span>		</span><br></pre></td></tr></table></figure>
<h5 id="当前页跳转"><a href="#当前页跳转" class="headerlink" title="当前页跳转"></a>当前页跳转</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">H                          # 页首</span><br><span class="line">M                          # 页中间行</span><br><span class="line">L                          # 页底</span><br><span class="line">zt                         # 将光标所在当前行移到屏幕顶端</span><br><span class="line">zz                         # 将光标所在当前行移到屏幕中间</span><br><span class="line">zb                         # 将光标所在当前行移到屏幕底端</span><br></pre></td></tr></table></figure>
<h5 id="行间跳转"><a href="#行间跳转" class="headerlink" title="行间跳转"></a>行间跳转</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">G                         <span class="comment"># 跳转至由#指定的行</span></span></span><br><span class="line">1G, gg                     # 第一行</span><br><span class="line">G                          # 最后一行</span><br><span class="line">5G                         # 跳转至第5行</span><br></pre></td></tr></table></figure>
<h5 id="句间跳转"><a href="#句间跳转" class="headerlink" title="句间跳转"></a>句间跳转</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">)                          # 下一句</span><br><span class="line">(                          # 上一句</span><br></pre></td></tr></table></figure>
<h5 id="段间跳转"><a href="#段间跳转" class="headerlink" title="段间跳转"></a>段间跳转</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#125;                          # 下一段</span><br><span class="line">&#123;                          # 上一段</span><br></pre></td></tr></table></figure>
<h4 id="编辑模式：翻屏"><a href="#编辑模式：翻屏" class="headerlink" title="编辑模式：翻屏"></a>编辑模式：翻屏</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Ctrl+f                     # 向文件尾翻一屏</span><br><span class="line">Ctrl+b                     # 向文件首部翻一屏</span><br><span class="line">Ctrl+d                     # 向文件尾部翻半屏</span><br><span class="line">Ctrl+u                     # 向文件首部翻半屏</span><br><span class="line">Enter                      # 按行向后翻</span><br></pre></td></tr></table></figure>
<h4 id="编辑模式：编辑命令"><a href="#编辑模式：编辑命令" class="headerlink" title="编辑模式：编辑命令"></a>编辑模式：编辑命令</h4><h5 id="字符编辑"><a href="#字符编辑" class="headerlink" title="字符编辑"></a>字符编辑</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">x                          # 删除光标所在处的字符</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">x                         <span class="comment"># 删除光标所在处起始的#个字符</span></span></span><br><span class="line">xp                         # 交换光标所在处的字符与其后面的字符的位置</span><br><span class="line">~                          # 转换大小写</span><br><span class="line">J                          # 删除当前行后的换行符</span><br></pre></td></tr></table></figure>
<h5 id="替换命令"><a href="#替换命令" class="headerlink" title="替换命令"></a>替换命令</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">r                          # 替换光标所在处的字符</span><br><span class="line">R                          # 切换成 REPLACE 模式，可以输入任意字符进行更换</span><br></pre></td></tr></table></figure>
<h5 id="删除命令"><a href="#删除命令" class="headerlink" title="删除命令"></a>删除命令</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">d                          # 删除命令，可结合光标跳转字符，实现范围删除</span><br><span class="line"><span class="meta prompt_">d$ </span><span class="language-bash">                        <span class="comment"># 删除到行尾</span></span></span><br><span class="line">d^                         # 删除到非空行首 </span><br><span class="line">d0                         # 删除到行首				</span><br><span class="line">dw                         # 删除光标所在处的单词或符号</span><br><span class="line">d3w                        # 删除光标所在处的三个单词</span><br><span class="line">de                         # 删除当前或下一个单词</span><br><span class="line">db                         # 删除当前或前一个单词</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">COMMAND                   <span class="comment"># 支持使用数字</span></span></span><br><span class="line">dd                         # 删除光标所在处的行</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">dd</span>                        <span class="comment"># 删除光标所处的行起始的共#行</span></span></span><br><span class="line">3dd                        # 删除光标所处的行起始的3行</span><br></pre></td></tr></table></figure>
<h5 id="粘贴命令"><a href="#粘贴命令" class="headerlink" title="粘贴命令"></a>粘贴命令</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">p                         # 缓冲区中的内容如果为整行，则粘贴在当前光标所在行的下方。否则，则粘贴至当前光标所在处的后方</span><br><span class="line">P                         # 缓冲区中的内容如果为整行，则粘贴在当前光标所在行的上方。否则，则粘贴至当前光标所在处的前方</span><br></pre></td></tr></table></figure>
<h5 id="复制命令"><a href="#复制命令" class="headerlink" title="复制命令"></a>复制命令</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">y                          # 复制，工作行为相似于d命令</span><br><span class="line"><span class="meta prompt_">y$ </span><span class="language-bash">                        <span class="comment"># 复制当前光标处到行尾</span></span></span><br><span class="line">y^                         # 复制当前光标处到非空行首</span><br><span class="line">y0                         # 复制当前光标处到行首					</span><br><span class="line">ye                         # 复制当前或下一个单词</span><br><span class="line">yw                         # 复制光标所在处的单词</span><br><span class="line">yb                         # 复制当前或前一个单词</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">COMMAND</span>							</span><br><span class="line">yy                         # 复制一整行</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">yy                        <span class="comment"># 复制#行</span></span></span><br></pre></td></tr></table></figure>
<h5 id="改变命令"><a href="#改变命令" class="headerlink" title="改变命令"></a>改变命令</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">c$ </span><span class="language-bash">                        <span class="comment"># 删除光标所在处至行尾，并切换到输入模式</span></span> </span><br><span class="line">c^                         # 非空行首</span><br><span class="line">c0                         # 行首					</span><br><span class="line">cb                         # 当前或前一个单词</span><br><span class="line">ce                         # 当前或下一个单词</span><br><span class="line">cw                         # 当前单词</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">COMMAND</span>						</span><br><span class="line">cc                         # 删除光标所在的行，并转换为输入模式</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">cc                        <span class="comment"># 删除光标所在行为起始行3行，并转换为输入模式</span></span></span><br></pre></td></tr></table></figure>
<h5 id="撤销命令"><a href="#撤销命令" class="headerlink" title="撤销命令"></a>撤销命令</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">u                          # 撤销此前的操作；</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">u                         <span class="comment"># 撤销此前的#个操作；</span></span></span><br><span class="line">Ctrl+r        	           # 撤销此前的撤销					</span><br><span class="line">.                          # 重复执行前一个编辑操作</span><br></pre></td></tr></table></figure>
<h5 id="可视化模式"><a href="#可视化模式" class="headerlink" title="可视化模式"></a>可视化模式</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">v                          # 按字符选定</span><br><span class="line">V                          # 按行选定</span><br><span class="line">                           # 结合编辑命令使用：d, c, y</span><br></pre></td></tr></table></figure>
<h3 id="末行模式"><a href="#末行模式" class="headerlink" title="末行模式"></a>末行模式</h3><h4 id="末行模式：地址定界"><a href="#末行模式：地址定界" class="headerlink" title="末行模式：地址定界"></a>末行模式：地址定界</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">命令格式：</span><br><span class="line">:start_pos[,end_pos]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">                          <span class="comment"># 特定的第#行，例如5即第5行</span></span></span><br><span class="line">.                           # 当前行</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">                          <span class="comment"># 最后一行</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">,<span class="comment">#                         # 指定行范围，左侧为起始行，右侧为结束行</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">,+<span class="comment">#                        # 指定行范围，左侧为超始行绝对编号，右侧为相对左侧行号的偏移量；例如：3,+7</span></span></span><br><span class="line">.,$-1</span><br><span class="line">1,$</span><br><span class="line"><span class="meta prompt_">% </span><span class="language-bash">                          <span class="comment"># 全文</span></span> </span><br><span class="line">/pattern/                   # 从光标所在处起始向文件尾部第一次被模式所匹配到的行</span><br><span class="line">/first/,$</span><br><span class="line">/pat1/,/pat2/               # 从光标所在处起始，第一次由pat1匹配到的行开始，至第一次由pat2匹配到的行结束之间的所有行</span><br><span class="line"></span><br><span class="line">可同编辑命令一同使用，实现编辑操作：</span><br><span class="line">d</span><br><span class="line">y</span><br><span class="line">c</span><br><span class="line">w/PATH/TO/SOMEFILE          # 将范围内的文本保存至指定的文件中；</span><br><span class="line">r  /PATH/FROM/SOMEFILE      # 将指定的文件中的文本读取并插入至指定位置；</span><br></pre></td></tr></table></figure>
<h4 id="末行模式：查找"><a href="#末行模式：查找" class="headerlink" title="末行模式：查找"></a>末行模式：查找</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/PATTERN：从当前光标所在处向文件尾部查找能够被当前模式匹配到的所有字符串；</span><br><span class="line">?PATTERN：从当前光标所在处向文件首部查找能够被当前模式匹配到的所有字符串；</span><br><span class="line">	n：下一个，与命令方向相同；</span><br><span class="line">	N：上一个，与命令方向相反；</span><br></pre></td></tr></table></figure>
<h4 id="末行模式：查找并替换"><a href="#末行模式：查找并替换" class="headerlink" title="末行模式：查找并替换"></a>末行模式：查找并替换</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">s：末行模式的命令；使用格式：</span><br><span class="line">	s/要查找的内容/替换为的内容/修饰符</span><br><span class="line">		要查找的内容：可使用正则表达式；</span><br><span class="line">		替换为的内容：不能使用下则表达式，但可以引用；</span><br><span class="line">		如果“要查找的内容”部分在模式中使用分组符号：在“替换为的内容”中使用后向引用；</span><br><span class="line">		直接引用查找模式匹配到的全部文本，要使用&amp;符号；</span><br><span class="line">		修饰符：</span><br><span class="line">			i：忽略大小写；</span><br><span class="line">			g：全局替换，意味着一行中如果匹配到多次，则均替换；</span><br><span class="line">	可把分隔符替换为其它非常用字符：</span><br><span class="line">		s@@@</span><br><span class="line"><span class="meta prompt_">		s#</span><span class="language-bash"><span class="comment">##</span></span></span><br></pre></td></tr></table></figure>
<h4 id="末行模式：示例"><a href="#末行模式：示例" class="headerlink" title="末行模式：示例"></a>末行模式：示例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">%</span><span class="language-bash">s@\&lt;t\([[:alpha:]]\+\)\&gt;@T\1@g</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">s@\&lt;t[[:alpha:]]\+\&gt;@&amp;er@g</span></span><br></pre></td></tr></table></figure>
<h3 id="vim的多文件功能"><a href="#vim的多文件功能" class="headerlink" title="vim的多文件功能"></a>vim的多文件功能</h3><h4 id="多文件"><a href="#多文件" class="headerlink" title="多文件"></a>多文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">多文件命令格式：</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim FILE1 FILE2 ...</span></span><br><span class="line">在文件间切换：</span><br><span class="line">:next  下一个</span><br><span class="line">:prev  上一个</span><br><span class="line">:first   第一个 </span><br><span class="line">:last   最后一个</span><br><span class="line">退出所有文件：</span><br><span class="line">:wqall 保存所有文件并退出；</span><br><span class="line">:wall</span><br><span class="line">:qall</span><br></pre></td></tr></table></figure>
<h4 id="多窗口"><a href="#多窗口" class="headerlink" title="多窗口"></a>多窗口</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-o：水平分割窗口</span><br><span class="line">-O：垂直分割窗口</span><br><span class="line">在窗口间切换：Ctrl+w, ARROW</span><br><span class="line">注意：单个文件也可以分割为多个窗口进行查看：</span><br><span class="line">Ctrl+w, s：水平分割窗口</span><br><span class="line">Ctrl+w, v：垂直分割窗口</span><br></pre></td></tr></table></figure>
<h3 id="定制的vim的工作特性"><a href="#定制的vim的工作特性" class="headerlink" title="定制的vim的工作特性"></a>定制的vim的工作特性</h3><p><strong>有效性说明：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1、临时有效：在末行模式下的设定，仅对当前vim进程有效</span><br><span class="line">2、永久有效：需要修改相应的配置文件，全局配置文件（/etc/vimrc）；用户个人配置文件（～/.vimrc，需要首先创建此文件）</span><br></pre></td></tr></table></figure>
<p><strong>常用的命令选项：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1、行号</span><br><span class="line">显示：set number, 简写为set nu</span><br><span class="line">取消显示：set nomber, set nonu</span><br><span class="line">2、括号匹配高亮</span><br><span class="line">匹配：set showmatch, set sm</span><br><span class="line">取消：set nosm</span><br><span class="line">3、自动缩进</span><br><span class="line">启用：set ai</span><br><span class="line">禁用：set noai</span><br><span class="line">4、高亮搜索</span><br><span class="line">启用：set  hlsearch</span><br><span class="line">禁用：set nohlsearch</span><br><span class="line">5、语法高亮</span><br><span class="line">启用：syntax on</span><br><span class="line">禁用：syntax off </span><br><span class="line">6、忽略字符大小写</span><br><span class="line">启用：set ic</span><br><span class="line">禁用：set noic	</span><br><span class="line">7、获取帮助</span><br><span class="line">:help</span><br><span class="line">:help subject</span><br><span class="line">8、按TAB产生4个空格</span><br><span class="line">set ts=4        # 注：ts是tabstop的缩写，设TAB宽4个空格</span><br><span class="line">set expandtab</span><br><span class="line">对于已保存的文件，可以使用下面的方法进行空格和TAB的替换：</span><br><span class="line">TAB替换为空格：</span><br><span class="line">:set ts=4</span><br><span class="line">:set expandtab</span><br><span class="line">:%retab!</span><br><span class="line"></span><br><span class="line">空格替换为TAB：</span><br><span class="line">:set ts=4</span><br><span class="line">:set noexpandtab</span><br><span class="line">:%retab!</span><br><span class="line">加!是用于处理非空白字符之后的TAB，即所有的TAB，若不加!，则只处理行首的TAB。</span><br></pre></td></tr></table></figure>
<h3 id="定制个人的-vimrc-文件"><a href="#定制个人的-vimrc-文件" class="headerlink" title="定制个人的 .vimrc 文件"></a>定制个人的 .vimrc 文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# pwd</span><br><span class="line">/root</span><br><span class="line">[root@server1 ~]# cat .vimrc </span><br><span class="line">set nu</span><br><span class="line">set nohlsearch</span><br><span class="line">syntax on</span><br><span class="line">set history=3000</span><br><span class="line">set ts=4</span><br><span class="line">set noexpandtab</span><br><span class="line">set autoindent</span><br><span class="line">filetype plugin indent on</span><br></pre></td></tr></table></figure>
<h3 id="vim小练习"><a href="#vim小练习" class="headerlink" title="vim小练习"></a>vim小练习</h3><p>1.请在&#x2F;tmp这个目录下建立一个名为vitest的目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# cd /tmp</span><br><span class="line">[root@server1 tmp]# mkdir vitest</span><br></pre></td></tr></table></figure>
<p>2.进入vitest这个目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 tmp]# cd vitest</span><br></pre></td></tr></table></figure>
<p>3.将&#x2F;etc&#x2F;man.config复制到本目录底下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 tmp]# cp /etc/man.config .</span><br></pre></td></tr></table></figure>
<p>4.使用vim开启本目录下的man.config</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 tmp]# vim man.config</span><br></pre></td></tr></table></figure>
<p>5.在vi中设定一下行号</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">末行模式下</span></span><br><span class="line">:set nu</span><br></pre></td></tr></table></figure>
<p>6.移动到第58行，向右移动40个字符,请问你看到的双引号内是什么目录?</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">58G  #先按下『58G』</span><br><span class="line">40l  #再按下『40l』会看到『/dir/bin/foo』这个字样在双引号内；;</span><br></pre></td></tr></table></figure>
<p>7.移动到第一行，并且向下搜寻一下某个字符串（以bzip2为例），问该字符串在第几行？</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1G       #先执行『1G』或『gg』后，</span><br><span class="line">/bzip2        #直接输入『/bzip2』即可;</span><br></pre></td></tr></table></figure>
<p>8.接着下来，我要将 50 到 100 行之间的『小写 man 字符串』改为『大写MAN字符串』，并且一个一个挑选是否需要修改，如何下达指令？如果在挑选过程中一直按[y],结果会在最后一行出现改为了几个man呢?</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:50,100s/man/MAN/gc     #直接下达『 :50,100s/man/MAN/gc 』即可！</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">最下行显示23行内置换25个字符串的说明</span></span><br></pre></td></tr></table></figure>
<p>9.修改完之后，突然反悔了，要全部复原，有哪些方法?</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">u      #(1)简单的方法可以一直按『 u 』回复到原始状态</span><br><span class="line">:q!    #(2)使用不储存离开『 :q! 』之后，再重新读取一次该档案；;</span><br></pre></td></tr></table></figure>
<p>10.我要复制65到73这9行内容(含有MANPATH_MAP),并且贴到最后一行之后</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">65G </span><br><span class="line">然后再 9yy #之后最后一行会出现『复制九行』之类的说明字样。 </span><br><span class="line">按下 G  #最后一行</span><br><span class="line"> p     #贴上九行！;</span><br></pre></td></tr></table></figure>
<p>11.21 到 42 行之间的开头为 # 符号的批注数据我不要了，要如何删除？</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">首先到21行 【21G】,然后删除22行 【22dd】</span><br><span class="line">此时你会发现游标所在21行的地方变成MANPATH开头了，注释#符号那几行都被删除了</span><br></pre></td></tr></table></figure>
<p>12.将这个档案另存成一个man.test.config的档名</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:w man.test.config #你会发现最后一行出现 &quot;man.test.config&quot; [New].. 的字样</span><br></pre></td></tr></table></figure>
<p>13.去到第 27 行，并且删除 15 个字符，结果出现的第一个单字是什么？</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">27G</span><br><span class="line">15x   #即可删除 15 个字符，出现『 you 』的字样</span><br></pre></td></tr></table></figure>
<p>14.在第一行新增一行，该行内容输入[I am a student…]</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1G	#先『 1G 』去到第一行</span><br><span class="line">O	#然后按下大写的『 O 』便新增一行且在插入模式，开始输入所要插入的内容</span><br><span class="line">Esc	#按下[Esc]回到一般模式等待后续工作；;</span><br></pre></td></tr></table></figure>
<p>15.存储后离开</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:wq!</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>find命令</title>
    <url>/2023/12/23/9.find%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="find详解"><a href="#find详解" class="headerlink" title="find详解"></a>find详解</h2><h3 id="命令基础格式"><a href="#命令基础格式" class="headerlink" title="命令基础格式"></a>命令基础格式</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /etc -name <span class="string">&quot;passwd&quot;</span></span><br><span class="line">第一段find命令。第二段，要搜索的路径，可以写多个。第三段，表达式。</span><br></pre></td></tr></table></figure>
<h3 id="查找条件"><a href="#查找条件" class="headerlink" title="查找条件"></a>查找条件</h3><h4 id="条件组合"><a href="#条件组合" class="headerlink" title="条件组合"></a>条件组合</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-a：多个条件and并列</span><br><span class="line">-o：多个条件or并列</span><br><span class="line">-not：条件取反</span><br></pre></td></tr></table></figure>
<h4 id="1-按照时间查找"><a href="#1-按照时间查找" class="headerlink" title="1.按照时间查找"></a>1.按照时间查找</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-mtime n：查找文件修改时间，单位是天，就是n*24小时</span></span><br><span class="line">[root@server1 ~]<span class="comment"># find / -mtime 7 -ls</span></span><br><span class="line"></span><br><span class="line">**总结：数字n的写法有三种**</span><br><span class="line">+n：表示大于n。</span><br><span class="line">-n：表示小于n。</span><br><span class="line">n：表示等于n。</span><br></pre></td></tr></table></figure>
<h4 id="2-根据文件名查找"><a href="#2-根据文件名查找" class="headerlink" title="2.根据文件名查找"></a>2.根据文件名查找</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># find / -name 1.txt</span></span><br><span class="line">/root/test/1.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#加i可以忽略大小写</span></span><br><span class="line">[root@server1 ~]<span class="comment"># find /etc -iname &quot;ifcfg-ens33&quot;</span></span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line"></span><br><span class="line"><span class="comment">#记不得名字也可以用通配符模糊匹配</span></span><br><span class="line">[root@server1 ~]<span class="comment"># find /etc -iname &quot;ifcfg-ens*&quot;</span></span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure>
<h4 id="3-按文件大小查找"><a href="#3-按文件大小查找" class="headerlink" title="3.按文件大小查找"></a>3.按文件大小查找</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查找大小大于5M的普通文件</span></span><br><span class="line">[root@server1 ~]# find /etc/ -type f -size +5M -ls</span><br><span class="line">17274742 7760 -r--r--r--   1 root     root      7942570 1月  1 19:42 /etc/udev/hwdb.bin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">等于5M</span></span><br><span class="line">[root@server1 ~]# find /etc/ -type f -size 5M -ls </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">小于5M</span></span><br><span class="line">[root@server1 ~]# find /etc/ -type f -size -5M -ls</span><br></pre></td></tr></table></figure>
<h4 id="4-按文件类型查找"><a href="#4-按文件类型查找" class="headerlink" title="4.按文件类型查找"></a>4.按文件类型查找</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# find /etc -type d</span><br><span class="line">/etc</span><br><span class="line">/etc/grub.d</span><br><span class="line">/etc/terminfo</span><br><span class="line">/etc/skel</span><br><span class="line">/etc/alternatives</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">更多类型上面已经总结p,b,c,s等</span></span><br></pre></td></tr></table></figure>
<h4 id="5-按文件权限查找"><a href="#5-按文件权限查找" class="headerlink" title="5.按文件权限查找"></a>5.按文件权限查找</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">r 读权限   4</span><br><span class="line">w 写权限   2</span><br><span class="line">x 执行权限 1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查找根目录下权限为444的文件（r--r--r--）</span></span><br><span class="line">[root@server1 ~]# find / -perm 444</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查找权限至少为444的文件</span></span><br><span class="line">[root@server1 ~]# find / -perm -444</span><br></pre></td></tr></table></figure>
<p><strong>重要TIP：-444表示至少为444（大于等于），不是小于</strong></p>
<h4 id="6-按查找的目录深度"><a href="#6-按查找的目录深度" class="headerlink" title="6.按查找的目录深度"></a>6.按查找的目录深度</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># find / -maxdepth 3 -a -name &quot;ifcfg-ens33&quot;  #最大深度为3</span></span><br><span class="line">[root@server1 ~]<span class="comment"># find / -mindepth 3 -a -name &quot;ifcfg-ens33&quot;  #最小深度为3</span></span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure>
<h4 id="7-按文件属主、属组"><a href="#7-按文件属主、属组" class="headerlink" title="7.按文件属主、属组"></a>7.按文件属主、属组</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find /home -user root -a -group root  #属主和属组都是root的</span><br><span class="line">find /home -user root -o -group root  #属主或属组是root的</span><br><span class="line">find /home -nouser -a -nogroup   #没有属主和属组</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="8-按正则表达式"><a href="#8-按正则表达式" class="headerlink" title="8.按正则表达式"></a>8.按正则表达式</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find /etc -regex &#x27;.*ifcfg-ens[0-9][0-9]&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">.*  任意多个字符</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">[0-9]  任意一个数字</span></span><br></pre></td></tr></table></figure>
<h3 id="查后处理动作"><a href="#查后处理动作" class="headerlink" title="查后处理动作"></a>查后处理动作</h3><p>‐ls：类型于对查找到的文件执行 ls -l 命令<br>‐delete：删除查找到的文件<br>‐fls &#x2F;path&#x2F;to&#x2F;somefile：查找到的所有文件的长格式信息保存至指定文件中<br><strong>下面两个重要的常用的：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">‐ok COMMAND &#123;&#125; \;：对查找到的每个文件执行由COMMAND指定的命令，需要确认</span><br><span class="line"></span><br><span class="line">‐exec COMMAND &#123;&#125; \;：对查找到的每个文件执行由COMMAND指定的命令，不需要确认</span><br><span class="line">find /etc -type f -name &quot;*.c&quot; -exec cat &#123;&#125; \; &gt; file.txt  #将所有c程序拼接起来写入单个文件file.txt中</span><br><span class="line"></span><br><span class="line">注：&#123;&#125;表示匹配到的文件。</span><br></pre></td></tr></table></figure>

<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><blockquote>
<p>1.查找&#x2F;var目录下属主为root，且属组为mail的所有文件或目录</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find /var -user root -a -group mail</span><br></pre></td></tr></table></figure>
<blockquote>
<p>2.查找&#x2F;usr目录下不属于root，bin或Hadoop的所有文件或目录</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find /user -not -user root -a -not -user bin -o -not user Hadoop</span><br></pre></td></tr></table></figure>
<blockquote>
<p>3.查找&#x2F;etc目录下最近一周内容曾被修改过的文件或目录</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find /etc -mtime -7</span><br></pre></td></tr></table></figure>
<blockquote>
<p>4.查找当前系统上没有属主或属组，且最近一周内曾被访问过的文件或目录</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find / -nouser -o -nogroup -a -atime -7</span><br></pre></td></tr></table></figure>
<blockquote>
<p>5.查找&#x2F;etc目录下大于1M且类型为普通文件的所有文件或目录</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find /etc -size +1M -a -type f</span><br></pre></td></tr></table></figure>
<blockquote>
<p>6.查找&#x2F;etc目录下所有用户都没有写权限的文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find /etc -not -perm /222  #严格匹配权限222</span><br></pre></td></tr></table></figure>
<blockquote>
<p>7.查找&#x2F;etc目录下至少一类用户没有执行权限的文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find /etc -not -perm -111</span><br></pre></td></tr></table></figure>
<blockquote>
<p>8.查找&#x2F;etc&#x2F;init.d目录下，所有用户都执行权限，且其它用户有写权限的文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">find /etc/init.d  -perm -111 -a -perm -003 -ls</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>文件类型/时间与locate查找</title>
    <url>/2023/12/22/8.%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E4%B8%8Elocate%E6%9F%A5%E6%89%BE/</url>
    <content><![CDATA[<h2 id="文件时间"><a href="#文件时间" class="headerlink" title="文件时间"></a>文件时间</h2><h3 id="stat命令与三个时间"><a href="#stat命令与三个时间" class="headerlink" title="stat命令与三个时间"></a>stat命令与三个时间</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 test]# stat 1.txt</span><br><span class="line">  File: ‘1.txt’</span><br><span class="line">  Size: 236       	Blocks: 8          IO Block: 4096   regular file</span><br><span class="line">Device: fd00h/64768d	Inode: 33590009    Links: 1</span><br><span class="line">Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)</span><br><span class="line">Context: unconfined_u:object_r:admin_home_t:s0</span><br><span class="line">Access: 2023-01-04 14:26:09.988384770 +0800</span><br><span class="line">Modify: 2023-01-04 14:26:09.988384770 +0800</span><br><span class="line">Change: 2023-01-04 14:26:09.989384782 +0800</span><br></pre></td></tr></table></figure>
<h4 id="atime访问时间"><a href="#atime访问时间" class="headerlink" title="atime访问时间"></a>atime访问时间</h4><blockquote>
<p>Access Time的简写，当文件的内容被访问时，就会更新这个时间，例如我们使用cat、more、less等<a href="https://www.linuxcool.com/">命令</a>查看文件的内容时，文件的访问时间就会被更新</p>
</blockquote>
<h4 id="mtime修改时间"><a href="#mtime修改时间" class="headerlink" title="mtime修改时间"></a>mtime修改时间</h4><blockquote>
<p>Modification Time的简写，它指的是当“内容数据”被修改时，系统会去更新这个时间，例如：我们用echo,vim等指令向文件写数据</p>
</blockquote>
<h4 id="ctime状态时间"><a href="#ctime状态时间" class="headerlink" title="ctime状态时间"></a>ctime状态时间</h4><blockquote>
<p>status time，即状态时间，当文件的状态即文件的属性被改变是就会更改这个时间，例如文件系统中的links(链接数)，size(文件的大小)、文件的权限、blocks(文件的block数)；当这些参数被改变时，Linux就会更改该文件所对应的这个时间参数。</p>
</blockquote>
<p><strong>Tips：文件的mtime被修改，该文件的ctime也会被改变。</strong></p>
<h2 id="文件类型查看"><a href="#文件类型查看" class="headerlink" title="文件类型查看"></a>文件类型查看</h2><h3 id="方法一-ls-l"><a href="#方法一-ls-l" class="headerlink" title="方法一 ls -l"></a>方法一 ls -l</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 test]# ll</span><br><span class="line">总用量 4</span><br><span class="line">-rw-r--r--. 1 root root 236 1月   4 14:26 1.txt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">根据最前面的字母判断是什么类型的文件</span></span><br></pre></td></tr></table></figure>
<h4 id="对应的文件类型"><a href="#对应的文件类型" class="headerlink" title="对应的文件类型"></a>对应的文件类型</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">根据-rw-r--r--最前面一位判断</span></span><br><span class="line">- 普通文件(文本文档，二进制文件，压缩文件，电影，图片。。。)</span><br><span class="line">d 目录文件(蓝色)</span><br><span class="line">b 块设备文件(块设备)存储设备硬盘，U盘 /dev/sda,/dev/sda1</span><br><span class="line">c 字符设备文件(字符设备)打印机，终端 /dev/tty1,/dev/zero</span><br><span class="line">s 套接字文件</span><br><span class="line">p 管道文件</span><br><span class="line">l 链接文件(淡蓝色)</span><br></pre></td></tr></table></figure>
<h3 id="方法二：file命令"><a href="#方法二：file命令" class="headerlink" title="方法二：file命令"></a>方法二：file命令</h3><p><strong>file命令</strong>用来探测给定文件的类型。</p>
<h4 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-b	只显示文件格式以及编码，不显示文件名称</span><br><span class="line">-i  输出文件的类型字符串</span><br><span class="line">-c	详细显示指令执行过程，便于排错或分析程序执行的情形</span><br><span class="line">-f  &lt;名称文件&gt;	指定名称文件，其内容有一个或多个文件名称时，让file依序辨识这些文件，格式为每列一个文件名称</span><br></pre></td></tr></table></figure>
<h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 test]# file 1.txt</span><br><span class="line">1.txt: ASCII text</span><br><span class="line">-----------------------------------------------</span><br><span class="line">[root@server1 test]# file -c 1.txt</span><br><span class="line">cont	offset	type	opcode	mask	value	desc</span><br><span class="line">-----------------------------------------------</span><br><span class="line">[root@server1 test]# file -b 1.txt</span><br><span class="line">ASCII text</span><br><span class="line">-----------------------------------------------</span><br><span class="line">[root@server1 test]# file -i 1.txt</span><br><span class="line">1.txt: text/plain; charset=us-ascii</span><br></pre></td></tr></table></figure>

<h2 id="文件查找"><a href="#文件查找" class="headerlink" title="文件查找"></a>文件查找</h2><h3 id="which命令"><a href="#which命令" class="headerlink" title="which命令"></a>which命令</h3><p>which命令是有局限性的，只会在环境变量$PATH设置的目录里查找符合条件的文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">which [文件名字]</span><br></pre></td></tr></table></figure>
<h4 id="举例-1"><a href="#举例-1" class="headerlink" title="举例"></a>举例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server1 test]# which bash</span><br><span class="line">/usr/bin/bash</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上面是在查找bash的所在目录</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">还可以查找<span class="built_in">ls</span>命令所在目录</span></span><br><span class="line">[root@server1 test]# which ls</span><br><span class="line">alias ls=&#x27;ls --color=auto&#x27;</span><br><span class="line">	/usr/bin/ls</span><br><span class="line">结果表示，ls是系统变量中默认设置的别名，本体是ls --color=auto</span><br></pre></td></tr></table></figure>
<h3 id="补充知识：环境变量"><a href="#补充知识：环境变量" class="headerlink" title="补充知识：环境变量"></a>补充知识：环境变量</h3><p><strong>总结：</strong>环境变量（environment variables）一般是指在操作系统中用来指定操作系统运行环境的一些参数，如：临时文件夹位置和系统文件夹位置等。环境变量里面有很多的系统默认设置，这个变量中也有很多的目录地址，当我们执行命令的时候，操作系统就会到这些目录中查找，是否存在你所输入的命令。这样我们可以在任何目录中使用这些命令，而没有必要每次都去查找命令所在的目录。与Windows的系统环境变量原理相同，可以自定义。</p>
<h3 id="locate查找"><a href="#locate查找" class="headerlink" title="locate查找"></a>locate查找</h3><h4 id="locate工作原理"><a href="#locate工作原理" class="headerlink" title="locate工作原理"></a>locate工作原理</h4><blockquote>
<p>locate<strong>不搜索具体目录</strong>，而是搜索一个<strong>数据库文件</strong>，这个数据库中含有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令<strong>查不到最新变动过的文件。</strong>为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库。配置文件在&#x2F;etc&#x2F;updatedb.conf</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装命令</span></span><br><span class="line">[root@localhost ~]# yum -y install mlocate</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">语法</span></span><br><span class="line">locate [选择参数] [样式]</span><br></pre></td></tr></table></figure>

<h4 id="常用参数-1"><a href="#常用参数-1" class="headerlink" title="常用参数"></a>常用参数</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-c, --count     # 只输出找到的数量      </span><br><span class="line">-n                    # 至多显示 n个输出。  </span><br><span class="line">-r, --regexp REGEXP   # 使用基本正则表达式  </span><br><span class="line">    --regex           # 使用扩展正则表达式  </span><br><span class="line">-i, --ignore-case     # 忽略大小写</span><br><span class="line">-d   #DBPATH：使用 DBPATH 指定的数据库，而不是默认数据库 /var/lib/mlocate/mlocate.db</span><br></pre></td></tr></table></figure>
<h4 id="举例-2"><a href="#举例-2" class="headerlink" title="举例"></a>举例</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">没有更新数据库之前：</span></span><br><span class="line">[root@server1 ~]# locate passwd</span><br><span class="line">locate: 无法执行 stat () `/var/lib/mlocate/mlocate.db&#x27;: 没有那个文件或目录</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">更新数据库</span></span><br><span class="line">[root@server1 ~]# updatedb</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">更新以后</span></span><br><span class="line">[root@server1 ~]# locate passwd</span><br><span class="line">/etc/passwd</span><br><span class="line">/etc/passwd-</span><br><span class="line">/etc/pam.d/passwd</span><br></pre></td></tr></table></figure>
<p>查找以&#x2F;etc&#x2F;sysconfig开头的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># locate /etc/sysconfig</span></span><br></pre></td></tr></table></figure>
<p>查找以ens33结尾的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># locate -r ens33$</span></span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx配置防盗链</title>
    <url>/2024/05/16/Nginx%E9%85%8D%E7%BD%AE%E5%9B%BE%E7%89%87%E9%98%B2%E7%9B%97%E9%93%BE/</url>
    <content><![CDATA[<h1 id="Nginx配置防盗链"><a href="#Nginx配置防盗链" class="headerlink" title="Nginx配置防盗链"></a>Nginx配置防盗链</h1><h2 id="一、配置盗链网站"><a href="#一、配置盗链网站" class="headerlink" title="一、配置盗链网站"></a>一、配置盗链网站</h2><ul>
<li>1.启动一台<code>nginx</code>虚拟机，配置两个网站</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/vhosts.conf</span><br></pre></td></tr></table></figure>

<p>添加以下内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name site1.test.com;</span><br><span class="line">    root /var/wwwroot/site1;</span><br><span class="line">    index index.html;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name site2.test.com;</span><br><span class="line">    root /var/wwwroot/site2;</span><br><span class="line">    index index.html;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.在宿主机(windowns)编辑<code>C:\Windows\System32\drivers\etc\hosts</code>文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">192.168.147.10      site1.test.com</span><br><span class="line">192.168.147.10      site2.test.com</span><br></pre></td></tr></table></figure>

<ul>
<li>3.创建网站根目录</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /var/wwwroot</span><br><span class="line"><span class="built_in">cd</span> /var/wwwroot</span><br><span class="line"><span class="built_in">mkdir</span> site1</span><br><span class="line"><span class="built_in">mkdir</span> site2</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;&lt;h1&gt;site1&lt;/h1&gt;&lt;img src=&#x27;1.jpg&#x27;&gt;&quot;</span> &gt;&gt; site1/index.html</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;&lt;h1&gt;site2&lt;/h1&gt;&lt;img src=&#x27;http://site1.test.com/1.jpg&#x27;&gt;&quot;</span> &gt;&gt; site2/index.html</span><br></pre></td></tr></table></figure>

<ul>
<li><p>4.将<code>1.jpg</code>上传到<code>/var/wwwroot/site1</code>目录</p>
</li>
<li><p>5.启动nginx服务</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br><span class="line">netstat -anpt | grep nginx</span><br></pre></td></tr></table></figure>
<ul>
<li>6.防火墙放通80端口（我默认关闭防火墙）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<ul>
<li>7.在宿主机访问</li>
</ul>
<p><code>http://site1.test.com</code></p>
<img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/PixPin_2024-05-31_14-26-36.png" alt="PixPin_2024-05-31_14-26-36" style="zoom:80%;" />

<p><code>http://site2.test.com</code></p>
<img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/image-20240531142947372.png" alt="image-20240531142947372" style="zoom:80%;" />


<h2 id="二、配置site1-test-com防盗链"><a href="#二、配置site1-test-com防盗链" class="headerlink" title="二、配置site1.test.com防盗链"></a>二、配置site1.test.com防盗链</h2><ul>
<li>1.编辑<code>nginx</code>配置文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name site1.test.com;</span><br><span class="line">    root /var/wwwroot/site1;</span><br><span class="line">    index index.html;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.(jpg|png|gif|jpeg)$ &#123;</span><br><span class="line">        valid_referers site1.test.com;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$invalid_referer</span>) &#123;</span><br><span class="line">            <span class="built_in">return</span> 403;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name site2.test.com;</span><br><span class="line">    root /var/wwwroot/site2;</span><br><span class="line">    index index.html;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#valid_referers site1.test.com;:这条指令检查请求来源，即用户从哪个页面跳转过来。这里只允许 site1.test.com 作为有效来源。</span></span><br><span class="line"><span class="comment">#if ($invalid_referer) &#123; return 403; &#125;: 如果来源不是 site1.test.com，则返回 403 禁止访问的错误。</span></span><br></pre></td></tr></table></figure>

<ul>
<li>2.重启<code>nginx</code>服务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure>
<ul>
<li>3.在宿主机访问</li>
</ul>
<p>清除浏览器缓存，访问<code>http://site2.test.com</code></p>
<p><img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/image-20240531143239151.png" alt="image-20240531143239151"></p>
<p><em>可见，防盗链配置起到了作用</em></p>
<h2 id="三、配置防盗链返回其他资源"><a href="#三、配置防盗链返回其他资源" class="headerlink" title="三、配置防盗链返回其他资源"></a>三、配置防盗链返回其他资源</h2><ul>
<li>1.编辑<code>nginx</code>配置文件</li>
</ul>
<p>增加一个虚拟主机，对防盗链保护的资源进行重写</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name site1.test.com;</span><br><span class="line">    root /var/wwwroot/site1;</span><br><span class="line">    index index.html;</span><br><span class="line">    location / &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ \.(jpg|png|gif|jpeg)$ &#123;</span><br><span class="line">        valid_referers site1.test.com;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$invalid_referer</span>) &#123;</span><br><span class="line">            rewrite ^/ http://site3.test.com/notfound.jpg;</span><br><span class="line">            <span class="comment">#return 403;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name site2.test.com;</span><br><span class="line">    root /var/wwwroot/site2;</span><br><span class="line">    index index.html;</span><br><span class="line">    location / &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name site3.test.com;</span><br><span class="line">    root /var/wwwroot/site3;</span><br><span class="line">    index index.html;</span><br><span class="line">    location / &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>解释</strong></p>
<p><code>location ~ \\.(jpg|png|gif|jpeg)$ &#123;&#125;</code>为设置防盗链的文件类型，使用竖线<code>|</code>分隔。<code>valid\_referers site1.test.com \*.nginx.org;</code>为白名单，使用空格分隔，可以使用<code>\*</code>进行泛域名设置。<code>if ($invalid\_referer) &#123;&#125;</code>为判断是否符合白名单，不符合白名单将执行{}内的内容。<code>rewrite ^/ http://site3.test.com/notfound.jpg;</code>为重写资源，如果不合符白名单，则重写为该地址。<code>return 403;</code>代表返回的状态码为403。</p>
<ul>
<li>2.建立<code>site3</code>根目录</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/wwwroot</span><br><span class="line"><span class="built_in">mkdir</span> site3</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;&lt;h1&gt;site3&lt;/h1&gt;&lt;img src=&#x27;notfound.jpg&#x27;&gt;&quot;</span> &gt;&gt; site3/index.html</span><br></pre></td></tr></table></figure>

<ul>
<li><p>3.上传<code>notfound.jpg</code>文件至<code>/var/wwwroot/site3</code>目录</p>
</li>
<li><p>4.重启<code>nginx</code>服务</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure>

<ul>
<li>5.在宿主机编辑<code>C:\Windows\System32\drivers\etc\hosts</code>文件</li>
</ul>
<p>增加对<code>site3.test.com</code>的映射</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">192.168.147.10      site1.test.com</span><br><span class="line">192.168.147.10      site2.test.com</span><br><span class="line">192.168.147.10      site3.test.com</span><br></pre></td></tr></table></figure>

<ul>
<li>6.在宿主机访问<code>http://site2.test.com</code></li>
</ul>
<p><img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/image-20240531145409607.png" alt="image-20240531145409607"></p>
<p>可以看到，在<code>site2</code>中盗用的<code>site1</code>的<code>1.jpg</code>文件，被重定向到了<code>site3</code>上的<code>notfound.jpg</code>文件</p>
]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux批量创建用户脚本</title>
    <url>/2024/03/03/Linux%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h2 id="Linux批量创建用户脚本"><a href="#Linux批量创建用户脚本" class="headerlink" title="Linux批量创建用户脚本"></a>Linux批量创建用户脚本</h2><ul>
<li><code>userlist.txt</code>文件遵循<code>用户名:密码:是否创建家目录(Y/N):是否允许登录(Y/N):组名</code>的格式</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">johndoe:password123:Y:Y:IT,marketing</span><br></pre></td></tr></table></figure>

<blockquote>
<p>tips:是否允许登录(Y&#x2F;N)这一条不写东西，默认就是允许用户登录</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户名单文件位置</span></span><br><span class="line">USERLIST=/root/userlist.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查并确保用户列表文件存在</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">&quot;<span class="variable">$USERLIST</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;用户列表文件不存在: <span class="variable">$USERLIST</span>&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建组的函数，如果组不存在则创建它</span></span><br><span class="line"><span class="function"><span class="title">ensure_group_exists</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> group_name=<span class="variable">$1</span></span><br><span class="line">    <span class="keyword">if</span> ! getent group <span class="string">&quot;<span class="variable">$group_name</span>&quot;</span> &gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;组 <span class="variable">$group_name</span> 不存在，正在创建...&quot;</span></span><br><span class="line">        groupadd <span class="string">&quot;<span class="variable">$group_name</span>&quot;</span></span><br><span class="line">        <span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;无法创建组: <span class="variable">$group_name</span>&quot;</span> &gt;&amp;2</span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 逐行读取 userlist.txt 文件内容并创建用户</span></span><br><span class="line"><span class="keyword">while</span> IFS=: <span class="built_in">read</span> -r username password create_home allow_login <span class="built_in">groups</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="comment"># 检查是否创建家目录</span></span><br><span class="line">    home_option=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$create_home</span>&quot;</span> = <span class="string">&quot;Y&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        home_option=<span class="string">&quot;-m&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根据是否允许登录设置shell</span></span><br><span class="line">    shell_option=<span class="string">&quot;/bin/bash&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$allow_login</span>&quot;</span> = <span class="string">&quot;N&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        shell_option=<span class="string">&quot;/usr/sbin/nologin&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 分割组名，确保每个组都存在</span></span><br><span class="line">    IFS=<span class="string">&#x27;,&#x27;</span> <span class="built_in">read</span> -ra GROUP_ARRAY &lt;&lt;&lt; <span class="string">&quot;<span class="variable">$groups</span>&quot;</span></span><br><span class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;GROUP_ARRAY[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">        ensure_group_exists <span class="string">&quot;<span class="variable">$group</span>&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将分割后的组名数组转换为逗号分隔的字符串</span></span><br><span class="line">    groups_option=$(IFS=,; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;GROUP_ARRAY[*]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建用户，并且将用户添加到指定的多个组</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在添加用户 <span class="variable">$username</span>...&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$groups_option</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        useradd <span class="variable">$home_option</span> -s <span class="variable">$shell_option</span> <span class="string">&quot;<span class="variable">$username</span>&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        useradd <span class="variable">$home_option</span> -s <span class="variable">$shell_option</span> -G <span class="string">&quot;<span class="variable">$groups_option</span>&quot;</span> <span class="string">&quot;<span class="variable">$username</span>&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;添加用户 <span class="variable">$username</span> 失败&quot;</span> &gt;&amp;2</span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置用户密码</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$username</span>:<span class="variable">$password</span>&quot;</span> | chpasswd</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;为用户 <span class="variable">$username</span> 设置密码失败&quot;</span> &gt;&amp;2</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;用户 <span class="variable">$username</span> 添加成功。&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> &lt; <span class="string">&quot;<span class="variable">$USERLIST</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;用户创建过程完成。&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>赋予权限并执行</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /path/to/your/script.sh</span><br><span class="line">bash /path/to/your/script.sh</span><br></pre></td></tr></table></figure>
<h3 id="指定主组"><a href="#指定主组" class="headerlink" title="指定主组"></a>指定主组</h3><ul>
<li>确保将第一组名作为主组，并确保其余组名作为附加组。这样就可以准确地控制用户属于的主组和附加组。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">USERLIST=/root/userlist.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">&quot;<span class="variable">$USERLIST</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;用户列表文件不存在: <span class="variable">$USERLIST</span>&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">ensure_group_exists</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> group_name=<span class="variable">$1</span></span><br><span class="line">    <span class="keyword">if</span> ! getent group <span class="string">&quot;<span class="variable">$group_name</span>&quot;</span> &gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;组 <span class="variable">$group_name</span> 不存在，正在创建...&quot;</span></span><br><span class="line">        groupadd <span class="string">&quot;<span class="variable">$group_name</span>&quot;</span></span><br><span class="line">        <span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;无法创建组: <span class="variable">$group_name</span>&quot;</span> &gt;&amp;2</span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> IFS=: <span class="built_in">read</span> -r username password create_home allow_login <span class="built_in">groups</span>; <span class="keyword">do</span></span><br><span class="line">    home_option=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$create_home</span>&quot;</span> = <span class="string">&quot;Y&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        home_option=<span class="string">&quot;-m&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    shell_option=<span class="string">&quot;/bin/bash&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$allow_login</span>&quot;</span> = <span class="string">&quot;N&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        shell_option=<span class="string">&quot;/usr/sbin/nologin&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    IFS=<span class="string">&#x27;,&#x27;</span> <span class="built_in">read</span> -ra GROUP_ARRAY &lt;&lt;&lt; <span class="string">&quot;<span class="variable">$groups</span>&quot;</span></span><br><span class="line">    main_group=<span class="variable">$&#123;GROUP_ARRAY[0]&#125;</span></span><br><span class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;GROUP_ARRAY[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">        ensure_group_exists <span class="string">&quot;<span class="variable">$group</span>&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    groups_option=$(IFS=,; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;GROUP_ARRAY[*]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在添加用户 <span class="variable">$username</span>...&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$groups_option</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        useradd <span class="variable">$home_option</span> -s <span class="variable">$shell_option</span> <span class="string">&quot;<span class="variable">$username</span>&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        useradd <span class="variable">$home_option</span> -s <span class="variable">$shell_option</span> -g <span class="string">&quot;<span class="variable">$main_group</span>&quot;</span> -G <span class="string">&quot;<span class="variable">$groups_option</span>&quot;</span> <span class="string">&quot;<span class="variable">$username</span>&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;添加用户 <span class="variable">$username</span> 失败&quot;</span> &gt;&amp;2</span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$username</span>:<span class="variable">$password</span>&quot;</span> | chpasswd</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;为用户 <span class="variable">$username</span> 设置密码失败&quot;</span> &gt;&amp;2</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;用户 <span class="variable">$username</span> 添加成功。&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> &lt; <span class="string">&quot;<span class="variable">$USERLIST</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;用户创建过程完成。&quot;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Shell脚本</category>
      </categories>
      <tags>
        <tag>Shell脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 7升级内核方案</title>
    <url>/2024/01/23/centos-7%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<h2 id="CentOS7升级内核方案"><a href="#CentOS7升级内核方案" class="headerlink" title="CentOS7升级内核方案"></a>CentOS7升级内核方案</h2><p>CentOS 7自带的内核版本还停留在<code>3.x</code>，如果某些软件对Linux内核版本有要求，就不得不升级内核来支持。</p>
<h4 id="内核版本选择"><a href="#内核版本选择" class="headerlink" title="内核版本选择"></a>内核版本选择</h4><p>我们可以从<a href="https://cloud.tencent.com/developer/tools/blog-entry?target=https://www.xgss.net/wp-content/themes/xgssv1/go.php?url=aHR0cHM6Ly93d3cua2VybmVsLm9yZy8=&source=article&objectId=2072001">https://www.kernel.org/</a>官网下载指定内核源码并进行编译升级，但是此步骤较为繁琐，不在此次讨论范围。</p>
<p>如果我们采用<code>rpm</code>包进行升级，可以使用别人编译好的包，其中<code>elrepo</code>提供的内核升级包是比较值得信赖的，内核地址如下：<a href="https://cloud.tencent.com/developer/tools/blog-entry?target=https://www.xgss.net/wp-content/themes/xgssv1/go.php?url=aHR0cHM6Ly9lbHJlcG8ub3JnL2xpbnV4L2tlcm5lbC9lbDcveDg2XzY0L1JQTVMv&source=article&objectId=2072001">https://elrepo.org/linux/kernel/el7/x86_64&#x2F;RPMS&#x2F;</a></p>
<p>但是打开elrepo的网站我们只能看到<code>5.15.x</code>和<code>5.4.x</code>（随着时间的推移可能会有变化）两个版本，标识了<code>ml</code>和<code>lt</code></p>
<img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/be969f09d089a98dbf368791f368f7db.png" style="zoom:80%;" />

<ul>
<li><code>ml</code>代表主线版本，总是保持主线最新的内核</li>
<li><code>lt</code>代表长期支持版本，支持周期更长</li>
</ul>
<p>再通过<a href="https://cloud.tencent.com/developer/tools/blog-entry?target=https://www.xgss.net/wp-content/themes/xgssv1/go.php?url=aHR0cHM6Ly93d3cua2VybmVsLm9yZy9jYXRlZ29yeS9yZWxlYXNlcy5odG1s&source=article&objectId=2072001">https://www.kernel.org</a>官网对照下上面两个版本的生命周期，可以看到<code>5.15</code>支持到2023年，而<code>5.4</code>支持到2025年。</p>
<p><img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/60f7e4a2ad8b6ae79118f8284fa2181f.png"></p>
<p>如果你要追求最新的版本，直接选择带<code>ml</code>的rpm包即可，如果你要追求稳定且更长的支持周期，直接选择<code>lt</code>版本即可。</p>
<h4 id="在线升级"><a href="#在线升级" class="headerlink" title="在线升级"></a>在线升级</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#导入ELRepo 公钥</span></span><br><span class="line">wget https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">rpm --import RPM-GPG-KEY-elrepo.org</span><br><span class="line"><span class="comment">#安装ELRepo</span></span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</span><br><span class="line"><span class="comment">#升级最新内核</span></span><br><span class="line">yum --enablerepo=elrepo-kernel install kernel-ml -y</span><br><span class="line"><span class="comment">#升级长期支持的lt内核（二选一即可）</span></span><br><span class="line">yum --enablerepo=elrepo-kernel install kernel-lt -y</span><br></pre></td></tr></table></figure>

<h4 id="离线升级"><a href="#离线升级" class="headerlink" title="离线升级"></a>离线升级</h4><p>也可以手动下载<code>rpm</code>的内核进行离线升级，以升级<code>lt</code>内核为例，方法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下载内核(随着时间推移，链接可能失效)</span></span><br><span class="line">wget https://elrepo.org/linux/kernel/el7/x86_64/RPMS/kernel-lt-5.4.267-1.el7.elrepo.x86_64.rpm</span><br><span class="line"><span class="comment">#升级内核</span></span><br><span class="line">rpm -ivh kernel-lt-5.4.267-1.el7.elrepo.x86_64.rpm</span><br></pre></td></tr></table></figure>

<h4 id="切换内核"><a href="#切换内核" class="headerlink" title="切换内核"></a>切换内核</h4><p>输入命令<code>awk -F\&#39; &#39;$1==&quot;menuentry &quot; &#123;print i++ &quot; : &quot; $2&#125;&#39; /boot/grub2/grub.cfg</code>查看grub2引导序号。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@<span class="built_in">test</span> ~]<span class="comment"># awk -F\&#x27; &#x27;$1==&quot;menuentry &quot; &#123;print i++ &quot; : &quot; $2&#125;&#x27; /boot/grub2/grub.cfg</span></span><br><span class="line">0 : CentOS Linux (5.4.267-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">1 : CentOS Linux (3.10.0-1160.105.1.el7.x86_64) 7 (Core)</span><br><span class="line">2 : CentOS Linux (3.10.0-1160.el7.x86_64) 7 (Core)</span><br><span class="line">3 : CentOS Linux (0-rescue-6f0ded4d6b374b868728677046097a9c) 7 (Core)</span><br></pre></td></tr></table></figure>

<p>可以看到序号<code>0</code>是我们刚刚安装的内核，我们将其设置为默认启动内核：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置默认启动内核</span></span><br><span class="line">grub2-set-default 0</span><br><span class="line"><span class="comment">#重启服务器生效</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<p>某些服务商可能会遇到设置不生效的问题，我们可采取删除旧内核，保留新内核的做法。需要重启<a href="https://cloud.tencent.com/act/pro/promotion-cvm?from_column=20065&from=20065">服务器</a>并通过VNC连接（请咨询服务商）并在开机的启动界面选择新内核（5.4）进入，通过以下方法删除旧内核：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看当前内核，确保是以新内核启动</span></span><br><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line"><span class="comment">#查看系统中全部内核</span></span><br><span class="line">rpm -qa | grep kernel</span><br><span class="line"><span class="comment">#移出不需要的内核</span></span><br><span class="line">yum remove kernel-3.10.0-229.4.2.el7.x86_64</span><br></pre></td></tr></table></figure>

<p>如果系统中只有一个内核，在下次启动的时候就会默认选择该内核启动。</p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p><a href="https://cloud.tencent.com/developer/tools/blog-entry?target=https://www.xgss.net/tag/%25e5%258d%2587%25e7%25ba%25a7%25e5%2586%2585%25e6%25a0%25b8&source=article&objectId=2072001">升级内核</a>有分险，以上方法不保障升级内核一定成功，生产环境请谨慎操作，如果升级后内核无法启动，可通过VNC连接服务器（咨询服务商），然后选择正常的内核启动，并删除异常的内核进行恢复。</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul>
<li><code>ml</code>代表主线版本，总是保持主线最新的内核</li>
<li><code>lt</code>代表长期支持版本，支持周期更长</li>
<li>内核升级失败，可通过VNC连接选择正常的内核进入系统</li>
<li>elrepo会经常删除旧的内核，建议定期从elrepo网站将内核下载进行保存，以便后续使用</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Clash配置负载</title>
    <url>/2024/01/16/clash%E9%85%8D%E7%BD%AE%E8%B4%9F%E8%BD%BD/</url>
    <content><![CDATA[<h1 id="Clash配置负载"><a href="#Clash配置负载" class="headerlink" title="Clash配置负载"></a>Clash配置负载</h1><h2 id="实现负载，下载拉满带宽"><a href="#实现负载，下载拉满带宽" class="headerlink" title="实现负载，下载拉满带宽"></a>实现负载，下载拉满带宽</h2><ul>
<li>找到settings—–&gt;Profiles——-&gt;Parsers——&gt;Edit，然后添加下面代码</li>
</ul>
<p><img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/clash.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">parsers:</span><br><span class="line">  - reg: &#x27;slbable$&#x27;</span><br><span class="line">    yaml:</span><br><span class="line">      append-proxy-groups:</span><br><span class="line">        - name:  负载均衡-散列</span><br><span class="line">          type: load-balance</span><br><span class="line">          url: &#x27;http://www.google.com/generate_204&#x27;</span><br><span class="line">          interval: 300</span><br><span class="line">          strategy: consistent-hashing</span><br><span class="line">        - name:  负载均衡-轮询</span><br><span class="line">          type: load-balance</span><br><span class="line">          url: &#x27;http://www.google.com/generate_204&#x27;</span><br><span class="line">          interval: 300</span><br><span class="line">          strategy: round-robin</span><br><span class="line">      commands:</span><br><span class="line">        - proxy-groups. 负载均衡-散列.proxies=[]proxyNames</span><br><span class="line">        - proxy-groups.0.proxies.0+ 负载均衡-散列</span><br><span class="line">        - proxy-groups. 负载均衡-轮询.proxies=[]proxyNames</span><br><span class="line">        - proxy-groups.0.proxies.0+ 负载均衡-轮询</span><br></pre></td></tr></table></figure>

<ul>
<li>然后在订阅链接后面添加触发条件，点击更新</li>
<li>会出现一个轮询，一个散列，下载建议用轮询，正常用就用散列</li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Clash</tag>
        <tag>小教程</tag>
      </tags>
  </entry>
  <entry>
    <title>FTP安装并配置虚拟用户</title>
    <url>/2024/01/19/ftp%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E7%94%A8%E6%88%B7/</url>
    <content><![CDATA[<h2 id="FTP安装并配置虚拟用户"><a href="#FTP安装并配置虚拟用户" class="headerlink" title="FTP安装并配置虚拟用户"></a>FTP安装并配置虚拟用户</h2><h3 id="1-安装软件"><a href="#1-安装软件" class="headerlink" title="1.安装软件"></a>1.安装软件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install vsftpd</span><br></pre></td></tr></table></figure>

<h3 id="2-创建相应的ftp数据目录"><a href="#2-创建相应的ftp数据目录" class="headerlink" title="2.创建相应的ftp数据目录"></a>2.创建相应的ftp数据目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /data/ftp/zhang</span><br></pre></td></tr></table></figure>

<h3 id="3-创建一个用户提供给虚拟用户使用"><a href="#3-创建一个用户提供给虚拟用户使用" class="headerlink" title="3.创建一个用户提供给虚拟用户使用"></a>3.创建一个用户提供给虚拟用户使用</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd -s /sbin/nologin virtual</span><br></pre></td></tr></table></figure>

<h3 id="4-将ftp数据目录设置成virtual用户"><a href="#4-将ftp数据目录设置成virtual用户" class="headerlink" title="4.将ftp数据目录设置成virtual用户"></a>4.将ftp数据目录设置成virtual用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> virtual. /data/ftp/zhang -R</span><br><span class="line">ll /data/ftp/</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>创建虚拟帐号与密码的文本文件(一行账号，一行密码, 注意不要有多余的空格)</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/vsftpd/logins.txt</span><br><span class="line">testzhang</span><br><span class="line">zhang@123</span><br></pre></td></tr></table></figure>

<h3 id="5-将创建好的密码文件txt格式转换db格式"><a href="#5-将创建好的密码文件txt格式转换db格式" class="headerlink" title="5.将创建好的密码文件txt格式转换db格式"></a>5.<strong>将创建好的密码文件txt格式转换db格式</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db_load -T -t <span class="built_in">hash</span> -f /etc/vsftpd/logins.txt /etc/vsftpd/login.db</span><br></pre></td></tr></table></figure>

<h3 id="6-定义db文件的权限"><a href="#6-定义db文件的权限" class="headerlink" title="6.定义db文件的权限"></a>6.<strong>定义db文件的权限</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 /etc/vsftpd/login.db</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>定义pam认证文件（注意：db&#x3D;&#x2F;etc&#x2F;vsftpd&#x2F;login 文件就是上面生成的login.db文件；省略后缀.db）</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/pam.d/ftp</span><br><span class="line">auth  required  /lib64/security/pam_userdb.so  db=/etc/vsftpd/login</span><br><span class="line">account  required  /lib64/security/pam_userdb.so  db=/etc/vsftpd/login</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>配置vsftpd主配置文件 （guest_username&#x3D;virtual 对应上面创建的用户）</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak</span><br><span class="line">vim /etc/vsftpd/vsftpd.conf</span><br><span class="line"><span class="comment">#禁止匿名登录FTP服务器</span></span><br><span class="line">anonymous_enable=NO</span><br><span class="line"><span class="comment">#允许本地用户登录FTP服务器</span></span><br><span class="line">local_enable=YES</span><br><span class="line"><span class="comment">#可以上传(全局控制) </span></span><br><span class="line">write_enable=NO</span><br><span class="line"><span class="comment">#匿名用户可以上传</span></span><br><span class="line">anon_upload_enable=NO</span><br><span class="line"><span class="comment">#匿名用户可以建目录</span></span><br><span class="line">anon_mkdir_write_enable=NO</span><br><span class="line"><span class="comment">#匿名用户修改删除</span></span><br><span class="line">anon_other_write_enable=NO</span><br><span class="line"><span class="comment">#全部用户被限制在主目录</span></span><br><span class="line">chroot_local_user=YES</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.3.5版本之后，如果用户被限定在了其主目录下，则该用户的主目录不能再具有写权限了，需新增加下面这条配置</span></span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line"></span><br><span class="line"><span class="comment">#将所有用户看成虚拟用户guest</span></span><br><span class="line">guest_enable=YES</span><br><span class="line"><span class="comment">#指定虚拟用户，也就是将guest用户映射到virtual用户</span></span><br><span class="line">guest_username=virtual</span><br><span class="line"><span class="comment">#指定为独立服务</span></span><br><span class="line">listen=YES</span><br><span class="line"><span class="comment">#指定监听的端口</span></span><br><span class="line">listen_port=21</span><br><span class="line"><span class="comment">#开启被动模式</span></span><br><span class="line">pasv_enable=YES</span><br><span class="line"></span><br><span class="line"><span class="comment">#FTP服务器公网IP</span></span><br><span class="line"><span class="comment">#pasv_address=&lt;FTP服务器公网IP&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置被动模式下，建立数据传输可使用port范围的最小值</span></span><br><span class="line">pasv_min_port=10000</span><br><span class="line"><span class="comment">#设置被动模式下，建立数据传输可使用port范围的最大值</span></span><br><span class="line">pasv_max_port=10088</span><br><span class="line"><span class="comment">#是否允许匿名用户下载全局可读的文件</span></span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line"><span class="comment">#指定虚拟用户配置文件的路径</span></span><br><span class="line">user_config_dir=/etc/vsftpd/user_conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">anonymous_enable=NO</span></span><br><span class="line"><span class="string">local_enable=YES</span></span><br><span class="line"><span class="string">write_enable=NO</span></span><br><span class="line"><span class="string">anon_upload_enable=NO</span></span><br><span class="line"><span class="string">anon_mkdir_write_enable=NO</span></span><br><span class="line"><span class="string">anon_other_write_enable=NO</span></span><br><span class="line"><span class="string">chroot_local_user=YES</span></span><br><span class="line"><span class="string">allow_writeable_chroot=YES</span></span><br><span class="line"><span class="string">guest_enable=YES</span></span><br><span class="line"><span class="string">guest_username=virtual</span></span><br><span class="line"><span class="string">listen=YES</span></span><br><span class="line"><span class="string">listen_port=21</span></span><br><span class="line"><span class="string">pasv_enable=YES</span></span><br><span class="line"><span class="string">pasv_min_port=10000</span></span><br><span class="line"><span class="string">pasv_max_port=10088</span></span><br><span class="line"><span class="string">anon_world_readable_only=NO</span></span><br><span class="line"><span class="string">user_config_dir=/etc/vsftpd/user_conf</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>创建上面配置文件中指定的子配置文件目录 user_conf</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /etc/vsftpd/user_conf</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>定义testzhang用户的配置文件(注意：这里创建配置用户配置文件的文件名必须与上面创建的用户名一致)</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/vsftpd/user_conf/testzhang</span><br><span class="line">write_enable=YES</span><br><span class="line">anon_world_readable_only=no</span><br><span class="line">anon_upload_enable=YES</span><br><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line">anon_other_write_enable=YESanon_umask=022</span><br><span class="line">local_root=/data/ftp/zhang</span><br></pre></td></tr></table></figure>

<h4 id="启动vsftpd"><a href="#启动vsftpd" class="headerlink" title="启动vsftpd"></a><strong>启动vsftpd</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart vsftpd</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>FTP</tag>
      </tags>
  </entry>
  <entry>
    <title>iops查看</title>
    <url>/2024/01/11/iops%E6%9F%A5%E7%9C%8B/</url>
    <content><![CDATA[<h1 id="IOPS查看"><a href="#IOPS查看" class="headerlink" title="IOPS查看"></a>IOPS查看</h1><h3 id="iostat命令"><a href="#iostat命令" class="headerlink" title="iostat命令"></a>iostat命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#每隔5秒执行一次iostat，连续执行3次</span></span><br><span class="line">iostat -xmtc 5 3</span><br><span class="line">Linux 3.10.0-1160.92.1.el7.x86_64 (zhang)       10/17/2023      _x86_64_        (2 CPU)</span><br><span class="line"></span><br><span class="line">10/17/2023 08:19:03 PM</span><br><span class="line">avg-cpu:  %user   %<span class="built_in">nice</span> %system %iowait  %steal   %idle</span><br><span class="line">           0.62    0.00    0.24    0.05    0.00   99.09</span><br><span class="line"></span><br><span class="line">Device:         rrqm/s   wrqm/s     r/s     w/s    rMB/s    wMB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %util</span><br><span class="line">vda               0.00     1.65    0.10    4.11     0.00     0.04    19.24     0.00    0.61    2.36    0.57   0.63   0.27</span><br><span class="line"></span><br><span class="line">– 设备（设备的名称）</span><br><span class="line">– rrqm/s（每秒钟进行的读操作的合并请求数）</span><br><span class="line">– wrqm/s（每秒钟进行的写操作的合并请求数）</span><br><span class="line">– r/s（每秒钟的读请求次数）</span><br><span class="line">– w/s（每秒钟的写请求次数）</span><br><span class="line">– rkB/s（每秒钟的读取数据量，单位KB）</span><br><span class="line">– wkB/s（每秒钟的写入数据量，单位KB）</span><br><span class="line">– avgrq-sz（每个请求的平均扇区数）</span><br><span class="line">– avgqu-sz（平均I / O请求数量）</span><br><span class="line">– awt（平均处理时间）</span><br><span class="line">– svctm（平均服务时间）</span><br><span class="line">– %util（每秒已使用磁盘时间的百分比）</span><br></pre></td></tr></table></figure>

<h3 id="dstat命令"><a href="#dstat命令" class="headerlink" title="dstat命令"></a>dstat命令</h3><p>dstat是一个系统资源统计工具，它能轻松监视系统的IOPS。它还可以报告CPU使用率、内存和磁盘使用率等更多指标。想要使用dstat，请使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@zhang ~]<span class="comment"># dstat -cdD total --disk-util --disk-tps --top-io-adv</span></span><br><span class="line">Module dstat_disk_util failed to load. (No counter objects to monitor)</span><br><span class="line">----total-cpu-usage---- -dsk/total- -dsk/total- -------most-expensive-i/o-process-------</span><br><span class="line">usr sys idl wai hiq siq| <span class="built_in">read</span>  writ|reads writs|process              pid  <span class="built_in">read</span> write cpu</span><br><span class="line">  1   0  99   0   0   0|2341B   38k|   0     4 |php-fpm: master proce31398  69k 199B0.0%</span><br><span class="line">  1   1  99   0   0   0|   0  8192B|   0     2 |postgres: zabbix zabb18738   0 8192B  0%</span><br><span class="line">  1   0  99   0   0   0|   0    12k|   0     3 |postgres: zabbix zabb18747   0 8192B  0%</span><br><span class="line">  1   1  99   0   0   0|   0    32k|   0     4 |postgres: zabbix zabb18736   0 8192B  0%</span><br><span class="line">  1   0  99   0   0   0|   0    12k|   0     3 |postgres: zabbix zabb18738   0 8192B  0%</span><br><span class="line">  1   1  99   0   0   0|   0    24k|   0     4 |postgres: zabbix zabb18735   0   16k  0%</span><br><span class="line">  1   1  99   0   0   0|   0  8192B|   0     2 |postgres: zabbix zabb18736   0 8192B  0%</span><br><span class="line">  1   1  99   0   0   0|   0    16k|   0     3 |postgres: zabbix zabb18747   0 8192B  0%</span><br><span class="line">  1   0  98   0   0   0|   0    56k|   0     4 |postgres: zabbix zabb18738   0 8192B  0%</span><br><span class="line">  1   1  98   0   0   0|   0  8192B|   0     2 |postgres: zabbix zabb18735   0 8192B  0%</span><br><span class="line">  1   0  99   0   0   0|   0  8192B|   0     2 |postgres: zabbix zabb18671   0 8192B  0%</span><br><span class="line">  2   1  98   0   0   0|   0   396k|   0     7 |postmaster           1314  550k   0   0%</span><br><span class="line">  1   1  99   0   0   0|   0    76k|   0    15 |node                 4925   11k  24k1.0%</span><br><span class="line">  2   0  98   0   0   0|   0    84k|   0     2 |zabbix_agentd: collec130521258B   0   0%</span><br><span class="line"> 15   2  82   2   0   0|7280k  144k| 223     8 |containerd-shim-runc-4875  105k  47k  0%^C</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
        <category>iops</category>
      </categories>
      <tags>
        <tag>磁盘读写</tag>
        <tag>iops</tag>
      </tags>
  </entry>
  <entry>
    <title>IP质量检测脚本</title>
    <url>/2024/05/03/ip%E8%B4%A8%E9%87%8F%E6%A3%80%E6%B5%8B%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h2 id="IP质量检测脚本"><a href="#IP质量检测脚本" class="headerlink" title="IP质量检测脚本"></a>IP质量检测脚本</h2><p>源项目：<a href="https://github.com/xykt/IPQuality">IPQuality</a></p>
<p><strong>支持OS&#x2F;Platform：Ubuntu | Debian | Linux Mint | Fedora | Red Hat Enterprise Linux (RHEL) | CentOS | Arch Linux | Manjaro | Alpine Linux | AlmaLinux | Rocky Linux</strong></p>
<ul>
<li>中英文双语言支持</li>
<li>支持IPv4&#x2F;IPv6双栈查询</li>
<li>精美排版，直观显示，多终端单屏优化展示，便于截图分享</li>
<li>基础信息、IP类型、风险评分、风险因子、流媒体解锁、邮局检测六大模块</li>
<li>基础数据源自<em>Maxmind</em>数据库</li>
<li>风险信息 <em>IPinfo &#x2F; ipregistry &#x2F; ipapi &#x2F; AbuseIPDB &#x2F; IP2LOCATION &#x2F; IPQS &#x2F; DB-IP &#x2F; SCAMALYTICS &#x2F; IPWHOIS</em> 多数据库整合</li>
<li>流媒体及AI多个服务商 <em>TikTok &#x2F; Disney+ &#x2F; Netflix &#x2F; Youtube &#x2F; AmazonPrimeVideo &#x2F; Spotify &#x2F; ChatGPT</em> 解锁及解锁类型检测</li>
<li>多邮局服务商 <em>Gmail &#x2F; Outlook &#x2F; Yahoo &#x2F; Apple &#x2F; QQ &#x2F; Mail.ru &#x2F; AOL &#x2F; GMX &#x2F; Mail.com &#x2F; 163 &#x2F; Sohu &#x2F; Sina</em> 连通性检测</li>
<li>IP地址黑名单400+数据库检测</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">script_version=<span class="string">&quot;v2024-05-17&quot;</span></span><br><span class="line">Font_B=<span class="string">&quot;\033[1m&quot;</span></span><br><span class="line">Font_D=<span class="string">&quot;\033[2m&quot;</span></span><br><span class="line">Font_I=<span class="string">&quot;\033[3m&quot;</span></span><br><span class="line">Font_U=<span class="string">&quot;\033[4m&quot;</span></span><br><span class="line">Font_Black=<span class="string">&quot;\033[30m&quot;</span></span><br><span class="line">Font_Red=<span class="string">&quot;\033[31m&quot;</span></span><br><span class="line">Font_Green=<span class="string">&quot;\033[32m&quot;</span></span><br><span class="line">Font_Yellow=<span class="string">&quot;\033[33m&quot;</span></span><br><span class="line">Font_Blue=<span class="string">&quot;\033[34m&quot;</span></span><br><span class="line">Font_Purple=<span class="string">&quot;\033[35m&quot;</span></span><br><span class="line">Font_Cyan=<span class="string">&quot;\033[36m&quot;</span></span><br><span class="line">Font_White=<span class="string">&quot;\033[37m&quot;</span></span><br><span class="line">Back_Black=<span class="string">&quot;\033[40m&quot;</span></span><br><span class="line">Back_Red=<span class="string">&quot;\033[41m&quot;</span></span><br><span class="line">Back_Green=<span class="string">&quot;\033[42m&quot;</span></span><br><span class="line">Back_Yellow=<span class="string">&quot;\033[43m&quot;</span></span><br><span class="line">Back_Blue=<span class="string">&quot;\033[44m&quot;</span></span><br><span class="line">Back_Purple=<span class="string">&quot;\033[45m&quot;</span></span><br><span class="line">Back_Cyan=<span class="string">&quot;\033[46m&quot;</span></span><br><span class="line">Back_White=<span class="string">&quot;\033[47m&quot;</span></span><br><span class="line">Font_Suffix=<span class="string">&quot;\033[0m&quot;</span></span><br><span class="line">Font_LineClear=<span class="string">&quot;\033[2K&quot;</span></span><br><span class="line"><span class="built_in">declare</span> IP=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">declare</span> IPhide</span><br><span class="line"><span class="built_in">declare</span> LANG=<span class="string">&quot;cn&quot;</span></span><br><span class="line"><span class="built_in">declare</span> -A maxmind</span><br><span class="line"><span class="built_in">declare</span> -A ipinfo</span><br><span class="line"><span class="built_in">declare</span> -A scamalytics</span><br><span class="line"><span class="built_in">declare</span> -A ipregistry</span><br><span class="line"><span class="built_in">declare</span> -A ipapi</span><br><span class="line"><span class="built_in">declare</span> -A abuseipdb</span><br><span class="line"><span class="built_in">declare</span> -A ip2location</span><br><span class="line"><span class="built_in">declare</span> -A dbip</span><br><span class="line"><span class="built_in">declare</span> -A ipwhois</span><br><span class="line"><span class="built_in">declare</span> -A ipdata</span><br><span class="line"><span class="built_in">declare</span> -A ipqs</span><br><span class="line"><span class="built_in">declare</span> -A tiktok</span><br><span class="line"><span class="built_in">declare</span> -A disney</span><br><span class="line"><span class="built_in">declare</span> -A netflix</span><br><span class="line"><span class="built_in">declare</span> -A youtube</span><br><span class="line"><span class="built_in">declare</span> -A amazon</span><br><span class="line"><span class="built_in">declare</span> -A spotify</span><br><span class="line"><span class="built_in">declare</span> -A chatgpt</span><br><span class="line"><span class="built_in">declare</span> IPV4</span><br><span class="line"><span class="built_in">declare</span> IPV6</span><br><span class="line"><span class="built_in">declare</span> IPV4work=0</span><br><span class="line"><span class="built_in">declare</span> IPV6work=0</span><br><span class="line"><span class="built_in">declare</span> IPV4test=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">declare</span> IPV6test=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">declare</span> ERRORcode=0</span><br><span class="line"><span class="built_in">declare</span> shelp</span><br><span class="line"><span class="built_in">declare</span> -A swarn</span><br><span class="line"><span class="built_in">declare</span> -A sinfo</span><br><span class="line"><span class="built_in">declare</span> -A shead</span><br><span class="line"><span class="built_in">declare</span> -A sbasic</span><br><span class="line"><span class="built_in">declare</span> -A stype</span><br><span class="line"><span class="built_in">declare</span> -A sscore</span><br><span class="line"><span class="built_in">declare</span> -A sfactor</span><br><span class="line"><span class="built_in">declare</span> -A smedia</span><br><span class="line"><span class="built_in">declare</span> -A smail</span><br><span class="line"><span class="built_in">declare</span> -A stail</span><br><span class="line"><span class="built_in">declare</span> ibar=0</span><br><span class="line"><span class="built_in">declare</span> bar_pid</span><br><span class="line"><span class="built_in">declare</span> ibar_step=0</span><br><span class="line"><span class="built_in">declare</span> main_pid=$$</span><br><span class="line"><span class="built_in">declare</span> PADDING=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">declare</span> useNIC=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">declare</span> usePROXY=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">declare</span> CurlARG=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">declare</span> UA_Browser</span><br><span class="line"><span class="built_in">declare</span> Media_Cookie=$(curl <span class="variable">$CurlARG</span> -s --retry 3 --max-time 10 <span class="string">&quot;https://raw.githubusercontent.com/xykt/IPQuality/main/ref/cookies.txt&quot;</span>)</span><br><span class="line"><span class="built_in">declare</span> IATA_Database=<span class="string">&quot;https://raw.githubusercontent.com/xykt/IPQuality/main/ref/iata-icao.csv&quot;</span></span><br><span class="line">shelp_lines=(</span><br><span class="line"><span class="string">&quot;IP QUALITY CHECK SCRIPT&quot;</span></span><br><span class="line"><span class="string">&quot;Usage: bash &lt;(curl -sL IP.Check.Place) [-4] [-6] [-l cn|en|jp|es|de|fr|ru|pt]&quot;</span></span><br><span class="line"><span class="string">&quot;            -4                            Test IPv4&quot;</span></span><br><span class="line"><span class="string">&quot;            -6                            Test IPv6&quot;</span></span><br><span class="line"><span class="string">&quot;            -l cn|en|jp|es|de|fr|ru|pt    Specify script language&quot;</span>)</span><br><span class="line">shelp=$(<span class="built_in">printf</span> <span class="string">&quot;%s\n&quot;</span> <span class="string">&quot;<span class="variable">$&#123;shelp_lines[@]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="function"><span class="title">set_language</span></span>()&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$LANG</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;en&quot;</span>|<span class="string">&quot;jp&quot;</span>|<span class="string">&quot;es&quot;</span>|<span class="string">&quot;de&quot;</span>|<span class="string">&quot;fr&quot;</span>|<span class="string">&quot;ru&quot;</span>|<span class="string">&quot;pt&quot;</span>)swarn[1]=<span class="string">&quot;ERROR: Unsupported parameters!&quot;</span></span><br><span class="line">swarn[2]=<span class="string">&quot;ERROR: IP address format error!&quot;</span></span><br><span class="line">swarn[3]=<span class="string">&quot;ERROR: Dependent programs are missing. Please run as root or install sudo!&quot;</span></span><br><span class="line">swarn[4]=<span class="string">&quot;ERROR: Parameter -4 conflicts with -i or -6!&quot;</span></span><br><span class="line">swarn[6]=<span class="string">&quot;ERROR: Parameter -6 conflicts with -i or -4!&quot;</span></span><br><span class="line">swarn[7]=<span class="string">&quot;ERROR: The specified network interface is invalid or does not exist!&quot;</span></span><br><span class="line">swarn[8]=<span class="string">&quot;ERROR: The specified proxy parameter is invalid or not working!&quot;</span></span><br><span class="line">swarn[40]=<span class="string">&quot;ERROR: IPv4 is not available!&quot;</span></span><br><span class="line">swarn[60]=<span class="string">&quot;ERROR: IPv6 is not available!&quot;</span></span><br><span class="line">sinfo[database]=<span class="string">&quot;Checking IP database &quot;</span></span><br><span class="line">sinfo[media]=<span class="string">&quot;Checking stream media &quot;</span></span><br><span class="line">sinfo[ai]=<span class="string">&quot;Checking AI provider &quot;</span></span><br><span class="line">sinfo[mail]=<span class="string">&quot;Connecting Email server &quot;</span></span><br><span class="line">sinfo[dnsbl]=<span class="string">&quot;Checking Blacklist database &quot;</span></span><br><span class="line">sinfo[ldatabase]=21</span><br><span class="line">sinfo[lmedia]=22</span><br><span class="line">sinfo[lai]=21</span><br><span class="line">sinfo[lmail]=24</span><br><span class="line">sinfo[ldnsbl]=28</span><br><span class="line">shead[title]=<span class="string">&quot;IP QUALITY CHECK REPORT: &quot;</span></span><br><span class="line">shead[ver]=<span class="string">&quot;Version: <span class="variable">$script_version</span>&quot;</span></span><br><span class="line">shead[bash]=<span class="string">&quot;bash &lt;(curl -sL IP.Check.Place)&quot;</span></span><br><span class="line">shead[git]=<span class="string">&quot;https://github.com/xykt/IPQuality&quot;</span></span><br><span class="line">shead[time]=$(<span class="built_in">date</span> -u +<span class="string">&quot;Report Time: %Y-%m-%d %H:%M:%S UTC&quot;</span>)</span><br><span class="line">shead[ltitle]=25</span><br><span class="line">shead[ptime]=$(<span class="built_in">printf</span> <span class="string">&#x27;%7s&#x27;</span> <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">sbasic[title]=<span class="string">&quot;1. Basic Information (<span class="variable">$&#123;Font_I&#125;</span>Maxmind Database<span class="variable">$Font_Suffix</span>)&quot;</span></span><br><span class="line">sbasic[asn]=<span class="string">&quot;ASN:                    &quot;</span></span><br><span class="line">sbasic[noasn]=<span class="string">&quot;Not Assigned&quot;</span></span><br><span class="line">sbasic[org]=<span class="string">&quot;Organization:           &quot;</span></span><br><span class="line">sbasic[location]=<span class="string">&quot;Location:               &quot;</span></span><br><span class="line">sbasic[map]=<span class="string">&quot;Map:                    &quot;</span></span><br><span class="line">sbasic[city]=<span class="string">&quot;City:                   &quot;</span></span><br><span class="line">sbasic[country]=<span class="string">&quot;Actual Region:          &quot;</span></span><br><span class="line">sbasic[regcountry]=<span class="string">&quot;Registered Region:      &quot;</span></span><br><span class="line">sbasic[continent]=<span class="string">&quot;Continent:              &quot;</span></span><br><span class="line">sbasic[timezone]=<span class="string">&quot;Time Zone:              &quot;</span></span><br><span class="line">sbasic[<span class="built_in">type</span>]=<span class="string">&quot;IP Type:                &quot;</span></span><br><span class="line">sbasic[type0]=<span class="string">&quot; Geo-consistent &quot;</span></span><br><span class="line">sbasic[type1]=<span class="string">&quot; Geo-discrepant &quot;</span></span><br><span class="line">stype[business]=<span class="string">&quot; $Back_Yellow$Font_White<span class="variable">$Font_B</span> Business <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">stype[isp]=<span class="string">&quot;   $Back_Green$Font_White<span class="variable">$Font_B</span> ISP <span class="variable">$Font_Suffix</span>    &quot;</span></span><br><span class="line">stype[hosting]=<span class="string">&quot; $Back_Red$Font_White<span class="variable">$Font_B</span> Hosting <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">stype[education]=<span class="string">&quot;$Back_Yellow$Font_White<span class="variable">$Font_B</span> Education <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">stype[government]=<span class="string">&quot;$Back_Yellow$Font_White<span class="variable">$Font_B</span> Government <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">stype[banking]=<span class="string">&quot; $Back_Yellow$Font_White<span class="variable">$Font_B</span> Banking <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">stype[organization]=<span class="string">&quot;$Back_Yellow$Font_White<span class="variable">$&#123;Font_B&#125;</span>Organization<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">stype[military]=<span class="string">&quot; $Back_Yellow$Font_White<span class="variable">$Font_B</span> Military <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">stype[library]=<span class="string">&quot; $Back_Yellow$Font_White<span class="variable">$Font_B</span> Library <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">stype[cdn]=<span class="string">&quot;   $Back_Red$Font_White<span class="variable">$Font_B</span> CDN <span class="variable">$Font_Suffix</span>    &quot;</span></span><br><span class="line">stype[lineisp]=<span class="string">&quot; $Back_Green$Font_White<span class="variable">$Font_B</span> Line ISP <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">stype[mobile]=<span class="string">&quot;$Back_Green$Font_White<span class="variable">$Font_B</span> Mobile ISP <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">stype[spider]=<span class="string">&quot;$Back_Red$Font_White<span class="variable">$Font_B</span> Web Spider <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">stype[reserved]=<span class="string">&quot; $Back_Yellow$Font_White<span class="variable">$Font_B</span> Reserved <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">stype[other]=<span class="string">&quot;  $Back_Yellow$Font_White<span class="variable">$Font_B</span> Other <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[title]=<span class="string">&quot;2. IP Type&quot;</span></span><br><span class="line">stype[db]=<span class="string">&quot;Database:  &quot;</span></span><br><span class="line">stype[usetype]=<span class="string">&quot;Usage:     &quot;</span></span><br><span class="line">stype[comtype]=<span class="string">&quot;Company:   &quot;</span></span><br><span class="line">sscore[verylow]=<span class="string">&quot;$Font_Green<span class="variable">$&#123;Font_B&#125;</span>VeryLow<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[low]=<span class="string">&quot;$Font_Green<span class="variable">$&#123;Font_B&#125;</span>Low<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[medium]=<span class="string">&quot;$Font_Yellow<span class="variable">$&#123;Font_B&#125;</span>Medium<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[high]=<span class="string">&quot;$Font_Red<span class="variable">$&#123;Font_B&#125;</span>High<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[veryhigh]=<span class="string">&quot;$Font_Red<span class="variable">$&#123;Font_B&#125;</span>VeryHigh<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[elevated]=<span class="string">&quot;$Font_Yellow<span class="variable">$&#123;Font_B&#125;</span>Elevated<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[suspicious]=<span class="string">&quot;$Font_Yellow<span class="variable">$&#123;Font_B&#125;</span>Suspicious<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[risky]=<span class="string">&quot;$Font_Red<span class="variable">$&#123;Font_B&#125;</span>Risky<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[highrisk]=<span class="string">&quot;$Font_Red<span class="variable">$&#123;Font_B&#125;</span>HighRisk<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[dos]=<span class="string">&quot;$Font_Red<span class="variable">$&#123;Font_B&#125;</span>DoS<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[colon]=<span class="string">&quot;: &quot;</span></span><br><span class="line">sscore[title]=<span class="string">&quot;3. Risk Score&quot;</span></span><br><span class="line">sscore[range]=<span class="string">&quot;<span class="variable">$&#123;Font_Cyan&#125;</span>Levels:         $Font_I$Font_White<span class="variable">$&#123;Back_Green&#125;</span>VeryLow     Low <span class="variable">$Back_Yellow</span>     Medium     <span class="variable">$Back_Red</span> High   VeryHigh<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sfactor[title]=<span class="string">&quot;4. Risk Factors&quot;</span></span><br><span class="line">sfactor[<span class="built_in">factor</span>]=<span class="string">&quot;DB:  &quot;</span></span><br><span class="line">sfactor[countrycode]=<span class="string">&quot;Region: &quot;</span></span><br><span class="line">sfactor[proxy]=<span class="string">&quot;Proxy:  &quot;</span></span><br><span class="line">sfactor[tor]=<span class="string">&quot;Tor:    &quot;</span></span><br><span class="line">sfactor[vpn]=<span class="string">&quot;VPN:    &quot;</span></span><br><span class="line">sfactor[server]=<span class="string">&quot;Server: &quot;</span></span><br><span class="line">sfactor[abuser]=<span class="string">&quot;Abuser: &quot;</span></span><br><span class="line">sfactor[robot]=<span class="string">&quot;Robot:  &quot;</span></span><br><span class="line">sfactor[<span class="built_in">yes</span>]=<span class="string">&quot;$Font_Red<span class="variable">$Font_B</span> Yes<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sfactor[no]=<span class="string">&quot;$Font_Green<span class="variable">$Font_B</span> No <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sfactor[na]=<span class="string">&quot;$Font_Green<span class="variable">$Font_B</span> N/A<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">smedia[<span class="built_in">yes</span>]=<span class="string">&quot;  $Back_Green<span class="variable">$Font_White</span> Yes <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">smedia[no]=<span class="string">&quot; $Back_Red<span class="variable">$Font_White</span> Block <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">smedia[bad]=<span class="string">&quot;$Back_Red<span class="variable">$Font_White</span> Failed <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">smedia[pending]=<span class="string">&quot;$Back_Yellow<span class="variable">$Font_White</span> Pending <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">smedia[cn]=<span class="string">&quot; $Back_Red<span class="variable">$Font_White</span> China <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">smedia[noprem]=<span class="string">&quot;$Back_Red<span class="variable">$Font_White</span> NoPrem. <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">smedia[org]=<span class="string">&quot;$Back_Yellow<span class="variable">$Font_White</span> NF.Only <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">smedia[web]=<span class="string">&quot;$Back_Yellow<span class="variable">$Font_White</span> WebOnly <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">smedia[app]=<span class="string">&quot;$Back_Yellow<span class="variable">$Font_White</span> APPOnly <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">smedia[idc]=<span class="string">&quot;  $Back_Yellow<span class="variable">$Font_White</span> IDC <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">smedia[native]=<span class="string">&quot;$Back_Green<span class="variable">$Font_White</span> Native <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">smedia[dns]=<span class="string">&quot;$Back_Yellow<span class="variable">$Font_White</span> ViaDNS <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">smedia[nodata]=<span class="string">&quot;         &quot;</span></span><br><span class="line">smedia[title]=<span class="string">&quot;5. Accessibility check for media and AI services&quot;</span></span><br><span class="line">smedia[meida]=<span class="string">&quot;Service: &quot;</span></span><br><span class="line">smedia[status]=<span class="string">&quot;Status:  &quot;</span></span><br><span class="line">smedia[region]=<span class="string">&quot;Region:  &quot;</span></span><br><span class="line">smedia[<span class="built_in">type</span>]=<span class="string">&quot;Type:    &quot;</span></span><br><span class="line">smail[title]=<span class="string">&quot;6. Email service availability and blacklist detection&quot;</span></span><br><span class="line">smail[port]=<span class="string">&quot;Local Port 25: &quot;</span></span><br><span class="line">smail[<span class="built_in">yes</span>]=<span class="string">&quot;<span class="variable">$&#123;Font_Green&#125;</span>Available<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">smail[no]=<span class="string">&quot;<span class="variable">$&#123;Font_Red&#125;</span>Blocked<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">smail[provider]=<span class="string">&quot;Conn: &quot;</span></span><br><span class="line">smail[dnsbl]=<span class="string">&quot;DNSBL database: &quot;</span></span><br><span class="line">smail[available]=<span class="string">&quot;$Font_Suffix<span class="variable">$&#123;Font_Cyan&#125;</span>Active <span class="variable">$Font_B</span>&quot;</span></span><br><span class="line">smail[clean]=<span class="string">&quot;$Font_Suffix<span class="variable">$&#123;Font_Green&#125;</span>Clean <span class="variable">$Font_B</span>&quot;</span></span><br><span class="line">smail[marked]=<span class="string">&quot;$Font_Suffix<span class="variable">$&#123;Font_Yellow&#125;</span>Marked <span class="variable">$Font_B</span>&quot;</span></span><br><span class="line">smail[blacklisted]=<span class="string">&quot;$Font_Suffix<span class="variable">$&#123;Font_Red&#125;</span>Blacklisted <span class="variable">$Font_B</span>&quot;</span></span><br><span class="line">stail[stoday]=<span class="string">&quot;Script runs today: &quot;</span></span><br><span class="line">stail[stotal]=<span class="string">&quot;; Total: &quot;</span></span><br><span class="line">stail[thanks]=<span class="string">&quot;. Thanks for running xy scripts!&quot;</span></span><br><span class="line">stail[<span class="built_in">link</span>]=<span class="string">&quot;<span class="variable">$&#123;Font_I&#125;</span>Report Link: <span class="variable">$Font_U</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;cn&quot;</span>)swarn[1]=<span class="string">&quot;错误：不支持的参数！&quot;</span></span><br><span class="line">swarn[2]=<span class="string">&quot;错误：IP地址格式错误！&quot;</span></span><br><span class="line">swarn[3]=<span class="string">&quot;错误：未安装依赖程序，请以root执行此脚本，或者安装sudo命令！&quot;</span></span><br><span class="line">swarn[4]=<span class="string">&quot;错误：参数-4与-i/-6冲突！&quot;</span></span><br><span class="line">swarn[6]=<span class="string">&quot;错误：参数-6与-i/-4冲突！&quot;</span></span><br><span class="line">swarn[7]=<span class="string">&quot;错误：指定的网卡不存在！&quot;</span></span><br><span class="line">swarn[8]=<span class="string">&quot;错误: 指定的代理服务器不可用！&quot;</span></span><br><span class="line">swarn[40]=<span class="string">&quot;错误：IPV4不可用！&quot;</span></span><br><span class="line">swarn[60]=<span class="string">&quot;错误：IPV6不可用！&quot;</span></span><br><span class="line">sinfo[database]=<span class="string">&quot;正在检测IP数据库 &quot;</span></span><br><span class="line">sinfo[media]=<span class="string">&quot;正在检测流媒体服务商 &quot;</span></span><br><span class="line">sinfo[ai]=<span class="string">&quot;正在检测AI服务商 &quot;</span></span><br><span class="line">sinfo[mail]=<span class="string">&quot;正在连接邮件服务商 &quot;</span></span><br><span class="line">sinfo[dnsbl]=<span class="string">&quot;正在检测黑名单数据库 &quot;</span></span><br><span class="line">sinfo[ldatabase]=17</span><br><span class="line">sinfo[lmedia]=21</span><br><span class="line">sinfo[lai]=17</span><br><span class="line">sinfo[lmail]=19</span><br><span class="line">sinfo[ldnsbl]=21</span><br><span class="line">shead[title]=<span class="string">&quot;IP质量体检报告：&quot;</span></span><br><span class="line">shead[ver]=<span class="string">&quot;脚本版本：<span class="variable">$script_version</span>&quot;</span></span><br><span class="line">shead[bash]=<span class="string">&quot;bash &lt;(curl -sL IP.Check.Place)&quot;</span></span><br><span class="line">shead[git]=<span class="string">&quot;https://github.com/xykt/IPQuality&quot;</span></span><br><span class="line">shead[time]=$(TZ=<span class="string">&quot;Asia/Shanghai&quot;</span> <span class="built_in">date</span> +<span class="string">&quot;报告时间：%Y-%m-%d %H:%M:%S CST&quot;</span>)</span><br><span class="line">shead[ltitle]=16</span><br><span class="line">shead[ptime]=$(<span class="built_in">printf</span> <span class="string">&#x27;%8s&#x27;</span> <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">sbasic[title]=<span class="string">&quot;一、基础信息（<span class="variable">$&#123;Font_I&#125;</span>Maxmind 数据库<span class="variable">$Font_Suffix</span>）&quot;</span></span><br><span class="line">sbasic[asn]=<span class="string">&quot;自治系统号：            &quot;</span></span><br><span class="line">sbasic[noasn]=<span class="string">&quot;未分配&quot;</span></span><br><span class="line">sbasic[org]=<span class="string">&quot;组织：                  &quot;</span></span><br><span class="line">sbasic[location]=<span class="string">&quot;坐标：                  &quot;</span></span><br><span class="line">sbasic[map]=<span class="string">&quot;地图：                  &quot;</span></span><br><span class="line">sbasic[city]=<span class="string">&quot;城市：                  &quot;</span></span><br><span class="line">sbasic[country]=<span class="string">&quot;使用地：                &quot;</span></span><br><span class="line">sbasic[regcountry]=<span class="string">&quot;注册地：                &quot;</span></span><br><span class="line">sbasic[continent]=<span class="string">&quot;洲际：                  &quot;</span></span><br><span class="line">sbasic[timezone]=<span class="string">&quot;时区：                  &quot;</span></span><br><span class="line">sbasic[<span class="built_in">type</span>]=<span class="string">&quot;IP类型：                &quot;</span></span><br><span class="line">sbasic[type0]=<span class="string">&quot; 原生IP &quot;</span></span><br><span class="line">sbasic[type1]=<span class="string">&quot; 广播IP &quot;</span></span><br><span class="line">stype[business]=<span class="string">&quot;   $Back_Yellow$Font_White<span class="variable">$Font_B</span> 商业 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[isp]=<span class="string">&quot;   $Back_Green$Font_White<span class="variable">$Font_B</span> 家宽 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[hosting]=<span class="string">&quot;   $Back_Red$Font_White<span class="variable">$Font_B</span> 机房 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[education]=<span class="string">&quot;   $Back_Yellow$Font_White<span class="variable">$Font_B</span> 教育 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[government]=<span class="string">&quot;   $Back_Yellow$Font_White<span class="variable">$Font_B</span> 政府 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[banking]=<span class="string">&quot;   $Back_Yellow$Font_White<span class="variable">$Font_B</span> 银行 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[organization]=<span class="string">&quot;   $Back_Yellow$Font_White<span class="variable">$Font_B</span> 组织 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[military]=<span class="string">&quot;   $Back_Yellow$Font_White<span class="variable">$Font_B</span> 军队 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[library]=<span class="string">&quot;  $Back_Yellow$Font_White<span class="variable">$Font_B</span> 图书馆 <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">stype[cdn]=<span class="string">&quot;   $Back_Red$Font_White<span class="variable">$Font_B</span> CDN <span class="variable">$Font_Suffix</span>    &quot;</span></span><br><span class="line">stype[lineisp]=<span class="string">&quot;   $Back_Green$Font_White<span class="variable">$Font_B</span> 家宽 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[mobile]=<span class="string">&quot;   $Back_Green$Font_White<span class="variable">$Font_B</span> 手机 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[spider]=<span class="string">&quot;   $Back_Red$Font_White<span class="variable">$Font_B</span> 蜘蛛 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[reserved]=<span class="string">&quot;   $Back_Yellow$Font_White<span class="variable">$Font_B</span> 保留 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[other]=<span class="string">&quot;   $Back_Yellow$Font_White<span class="variable">$Font_B</span> 其他 <span class="variable">$Font_Suffix</span>   &quot;</span></span><br><span class="line">stype[title]=<span class="string">&quot;二、IP类型属性&quot;</span></span><br><span class="line">stype[db]=<span class="string">&quot;数据库：   &quot;</span></span><br><span class="line">stype[usetype]=<span class="string">&quot;使用类型： &quot;</span></span><br><span class="line">stype[comtype]=<span class="string">&quot;公司类型： &quot;</span></span><br><span class="line">sscore[verylow]=<span class="string">&quot;$Font_Green<span class="variable">$Font_B</span>极低风险<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[low]=<span class="string">&quot;$Font_Green<span class="variable">$Font_B</span>低风险<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[medium]=<span class="string">&quot;$Font_Yellow<span class="variable">$Font_B</span>中风险<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[high]=<span class="string">&quot;$Font_Red<span class="variable">$Font_B</span>高风险<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[veryhigh]=<span class="string">&quot;$Font_Red<span class="variable">$Font_B</span>极高风险<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[elevated]=<span class="string">&quot;$Font_Yellow<span class="variable">$Font_B</span>较高风险<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[suspicious]=<span class="string">&quot;$Font_Yellow<span class="variable">$Font_B</span>可疑IP<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[risky]=<span class="string">&quot;$Font_Red<span class="variable">$Font_B</span>存在风险<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[highrisk]=<span class="string">&quot;$Font_Red<span class="variable">$Font_B</span>高风险<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[dos]=<span class="string">&quot;$Font_Red<span class="variable">$Font_B</span>建议封禁<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sscore[colon]=<span class="string">&quot;：&quot;</span></span><br><span class="line">sscore[title]=<span class="string">&quot;三、风险评分&quot;</span></span><br><span class="line">sscore[range]=<span class="string">&quot;<span class="variable">$Font_Cyan</span>风险等级：      $Font_I$Font_White<span class="variable">$Back_Green</span>极低         低 <span class="variable">$Back_Yellow</span>      中等      <span class="variable">$Back_Red</span> 高         极高<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sfactor[title]=<span class="string">&quot;四、风险因子&quot;</span></span><br><span class="line">sfactor[<span class="built_in">factor</span>]=<span class="string">&quot;库： &quot;</span></span><br><span class="line">sfactor[countrycode]=<span class="string">&quot;地区：  &quot;</span></span><br><span class="line">sfactor[proxy]=<span class="string">&quot;代理：  &quot;</span></span><br><span class="line">sfactor[tor]=<span class="string">&quot;Tor：   &quot;</span></span><br><span class="line">sfactor[vpn]=<span class="string">&quot;VPN：   &quot;</span></span><br><span class="line">sfactor[server]=<span class="string">&quot;服务器：&quot;</span></span><br><span class="line">sfactor[abuser]=<span class="string">&quot;滥用：  &quot;</span></span><br><span class="line">sfactor[robot]=<span class="string">&quot;机器人：&quot;</span></span><br><span class="line">sfactor[<span class="built_in">yes</span>]=<span class="string">&quot;$Font_Red<span class="variable">$Font_B</span> 是 <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sfactor[no]=<span class="string">&quot;$Font_Green<span class="variable">$Font_B</span> 否 <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">sfactor[na]=<span class="string">&quot;$Font_Green<span class="variable">$Font_B</span> 无 <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">smedia[<span class="built_in">yes</span>]=<span class="string">&quot; $Back_Green<span class="variable">$Font_White</span> 解锁 <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">smedia[no]=<span class="string">&quot; $Back_Red<span class="variable">$Font_White</span> 屏蔽 <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">smedia[bad]=<span class="string">&quot; $Back_Red<span class="variable">$Font_White</span> 失败 <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">smedia[pending]=<span class="string">&quot;$Back_Yellow<span class="variable">$Font_White</span> 待支持 <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">smedia[cn]=<span class="string">&quot; $Back_Red<span class="variable">$Font_White</span> 中国 <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">smedia[noprem]=<span class="string">&quot;$Back_Red<span class="variable">$Font_White</span> 禁会员 <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">smedia[org]=<span class="string">&quot;$Back_Yellow<span class="variable">$Font_White</span> 仅自制 <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">smedia[web]=<span class="string">&quot;$Back_Yellow<span class="variable">$Font_White</span> 仅网页 <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">smedia[app]=<span class="string">&quot; $Back_Yellow<span class="variable">$Font_White</span> 仅APP <span class="variable">$Font_Suffix</span> &quot;</span></span><br><span class="line">smedia[idc]=<span class="string">&quot; $Back_Yellow<span class="variable">$Font_White</span> 机房 <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">smedia[native]=<span class="string">&quot; $Back_Green<span class="variable">$Font_White</span> 原生 <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">smedia[dns]=<span class="string">&quot;  $Back_Yellow<span class="variable">$Font_White</span> DNS <span class="variable">$Font_Suffix</span>  &quot;</span></span><br><span class="line">smedia[nodata]=<span class="string">&quot;         &quot;</span></span><br><span class="line">smedia[title]=<span class="string">&quot;五、流媒体及AI服务解锁检测&quot;</span></span><br><span class="line">smedia[meida]=<span class="string">&quot;服务商： &quot;</span></span><br><span class="line">smedia[status]=<span class="string">&quot;状态：   &quot;</span></span><br><span class="line">smedia[region]=<span class="string">&quot;地区：   &quot;</span></span><br><span class="line">smedia[<span class="built_in">type</span>]=<span class="string">&quot;方式：   &quot;</span></span><br><span class="line">smail[title]=<span class="string">&quot;六、邮局连通性及黑名单检测&quot;</span></span><br><span class="line">smail[port]=<span class="string">&quot;本地25端口：&quot;</span></span><br><span class="line">smail[<span class="built_in">yes</span>]=<span class="string">&quot;<span class="variable">$Font_Green</span>可用<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">smail[no]=<span class="string">&quot;<span class="variable">$Font_Red</span>阻断<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">smail[provider]=<span class="string">&quot;通信：&quot;</span></span><br><span class="line">smail[dnsbl]=<span class="string">&quot;IP地址黑名单数据库：&quot;</span></span><br><span class="line">smail[available]=<span class="string">&quot;$Font_Suffix<span class="variable">$Font_Cyan</span>有效 <span class="variable">$Font_B</span>&quot;</span></span><br><span class="line">smail[clean]=<span class="string">&quot;$Font_Suffix<span class="variable">$Font_Green</span>正常 <span class="variable">$Font_B</span>&quot;</span></span><br><span class="line">smail[marked]=<span class="string">&quot;$Font_Suffix<span class="variable">$Font_Yellow</span>已标记 <span class="variable">$Font_B</span>&quot;</span></span><br><span class="line">smail[blacklisted]=<span class="string">&quot;$Font_Suffix<span class="variable">$Font_Red</span>黑名单 <span class="variable">$Font_B</span>&quot;</span></span><br><span class="line"><span class="comment">#stail[stoday]=&quot;脚本今日运行次数：&quot;</span></span><br><span class="line"><span class="comment">#stail[stotal]=&quot;；总运行次数：&quot;</span></span><br><span class="line"><span class="comment">#stail[thanks]=&quot;。感谢使用xy系列脚本！&quot;</span></span><br><span class="line">stail[<span class="built_in">link</span>]=<span class="string">&quot;<span class="variable">$Font_I</span>报告链接：<span class="variable">$Font_U</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)<span class="built_in">echo</span> -ne <span class="string">&quot;ERROR: Language not supported!&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">countRunTimes</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">mktemp</span> -u --suffix=RRC &amp;&gt;/dev/null;<span class="keyword">then</span></span><br><span class="line">count_file=$(<span class="built_in">mktemp</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">count_file=$(<span class="built_in">mktemp</span> --suffix=RRC)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">RunTimes=$(curl <span class="variable">$CurlARG</span> -s --max-time 10 <span class="string">&quot;https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fip.check.place&amp;count_bg=%2379C83D&amp;title_bg=%23555555&amp;icon=&amp;icon_color=%23E7E7E7&amp;title=hits&amp;edge_flat=false&quot;</span> &gt;<span class="string">&quot;<span class="variable">$count_file</span>&quot;</span>)</span><br><span class="line">stail[today]=$(<span class="built_in">cat</span> <span class="string">&quot;<span class="variable">$count_file</span>&quot;</span>|<span class="built_in">tail</span> -3|<span class="built_in">head</span> -n 1|awk <span class="string">&#x27;&#123;print $5&#125;&#x27;</span>)</span><br><span class="line">stail[total]=$(<span class="built_in">cat</span> <span class="string">&quot;<span class="variable">$count_file</span>&quot;</span>|<span class="built_in">tail</span> -3|<span class="built_in">head</span> -n 1|awk <span class="string">&#x27;&#123;print $7&#125;&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">show_progress_bar</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> bar=<span class="string">&quot;⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏&quot;</span></span><br><span class="line"><span class="built_in">local</span> n=<span class="string">&quot;<span class="variable">$&#123;#bar&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">sleep</span> 0.1;<span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">kill</span> -0 <span class="variable">$main_pid</span> 2&gt;/dev/null;<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$Font_B</span>[<span class="variable">$IP</span>]# $1$Font_Cyan$Font_B<span class="subst">$(printf &#x27;%*s&#x27; <span class="string">&quot;<span class="variable">$2</span>&quot;</span> &#x27;&#x27;|tr &#x27; &#x27; &#x27;.&#x27;)</span> <span class="variable">$&#123;bar:ibar++%n:1&#125;</span> <span class="subst">$(printf &#x27;%02d%%&#x27; $ibar_step)</span> <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">kill_progress_bar</span></span>()&#123;</span><br><span class="line"><span class="built_in">kill</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span> 2&gt;/dev/null&amp;&amp;<span class="built_in">echo</span> -ne <span class="string">&quot;\r&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">install_dependencies</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> ! jq --version &gt;/dev/null 2&gt;&amp;1||! curl --version &gt;/dev/null 2&gt;&amp;1||! bc --version &gt;/dev/null 2&gt;&amp;1||! nc -h &gt;/dev/null 2&gt;&amp;1||! dig -v &gt;/dev/null 2&gt;&amp;1||! ip -Version &gt;/dev/null 2&gt;&amp;1;<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Detecting Linux distribution...&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/os-release ];<span class="keyword">then</span></span><br><span class="line">. /etc/os-release</span><br><span class="line"><span class="keyword">if</span> [ $(<span class="built_in">id</span> -u) -ne 0 ]&amp;&amp;! <span class="built_in">command</span> -v sudo &gt;/dev/null 2&gt;&amp;1;<span class="keyword">then</span></span><br><span class="line">ERRORcode=3</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$ID</span> <span class="keyword">in</span></span><br><span class="line">ubuntu|debian|linuxmint)install_packages <span class="string">&quot;apt&quot;</span> <span class="string">&quot;apt-get install -y&quot;</span></span><br><span class="line">;;</span><br><span class="line">fedora|rhel|centos|almalinux|rocky)<span class="keyword">if</span></span><br><span class="line">[ <span class="string">&quot;<span class="subst">$(echo $VERSION_ID|cut -d &#x27;.&#x27; -f1)</span>&quot;</span> -ge 8 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">install_packages <span class="string">&quot;dnf&quot;</span> <span class="string">&quot;dnf install -y&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">install_packages <span class="string">&quot;yum&quot;</span> <span class="string">&quot;yum install -y&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="built_in">arch</span>|manjaro)install_packages <span class="string">&quot;pacman&quot;</span> <span class="string">&quot;pacman -S --noconfirm&quot;</span></span><br><span class="line">;;</span><br><span class="line">alpine)install_packages <span class="string">&quot;apk&quot;</span> <span class="string">&quot;apk add&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)<span class="built_in">echo</span> <span class="string">&quot;Unsupported distribution: <span class="variable">$ID</span>&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">elif</span> [ -n <span class="string">&quot;<span class="variable">$PREFIX</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">install_packages <span class="string">&quot;pkg&quot;</span> <span class="string">&quot;pkg install&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Cannot detect distribution because /etc/os-release is missing.&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">install_packages</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> package_manager=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">local</span> install_command=<span class="variable">$2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Using package manager: <span class="variable">$package_manager</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ $(<span class="built_in">id</span> -u) -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">local</span> usesudo=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">local</span> usesudo=<span class="string">&quot;sudo&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$package_manager</span> <span class="keyword">in</span></span><br><span class="line">apt)<span class="variable">$usesudo</span> apt update</span><br><span class="line"><span class="variable">$usesudo</span> <span class="variable">$install_command</span> jq curl bc netcat-openbsd dnsutils iproute2</span><br><span class="line">;;</span><br><span class="line">dnf)<span class="variable">$usesudo</span> dnf install epel-release -y</span><br><span class="line"><span class="variable">$usesudo</span> <span class="variable">$package_manager</span> makecache</span><br><span class="line"><span class="variable">$usesudo</span> <span class="variable">$install_command</span> jq curl bc nmap-ncat bind-utils iproute</span><br><span class="line">;;</span><br><span class="line">yum)<span class="variable">$usesudo</span> yum install epel-release -y</span><br><span class="line"><span class="variable">$usesudo</span> <span class="variable">$package_manager</span> makecache</span><br><span class="line"><span class="variable">$usesudo</span> <span class="variable">$install_command</span> jq curl bc nmap-ncat bind-utils iproute</span><br><span class="line">;;</span><br><span class="line">pacman)<span class="variable">$usesudo</span> pacman -Sy</span><br><span class="line"><span class="variable">$usesudo</span> <span class="variable">$install_command</span> jq curl bc gnu-netcat bind-tools iproute2</span><br><span class="line">;;</span><br><span class="line">apk)<span class="variable">$usesudo</span> apk update</span><br><span class="line"><span class="variable">$usesudo</span> <span class="variable">$install_command</span> jq curl bc netcat-openbsd grep bind-tools iproute2</span><br><span class="line">;;</span><br><span class="line">pkg)<span class="variable">$usesudo</span> <span class="variable">$package_manager</span> update</span><br><span class="line"><span class="variable">$usesudo</span> <span class="variable">$package_manager</span> <span class="variable">$install_command</span> jq curl bc netcat dnsutils iproute</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">declare</span> -A browsers=(</span><br><span class="line">[Chrome]=<span class="string">&quot;87.0.4280.66 88.0.4324.150 89.0.4389.82&quot;</span></span><br><span class="line">[Firefox]=<span class="string">&quot;83.0 84.0 85.0&quot;</span></span><br><span class="line">[Edge]=<span class="string">&quot;88.0.705.50 89.0.774.57&quot;</span>)</span><br><span class="line"><span class="function"><span class="title">generate_random_user_agent</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> browsers_keys=(<span class="variable">$&#123;!browsers[@]&#125;</span>)</span><br><span class="line"><span class="built_in">local</span> random_browser_index=$((RANDOM%<span class="variable">$&#123;#browsers_keys[@]&#125;</span>))</span><br><span class="line"><span class="built_in">local</span> browser=<span class="variable">$&#123;browsers_keys[random_browser_index]&#125;</span></span><br><span class="line"><span class="built_in">local</span> versions=(<span class="variable">$&#123;browsers[$browser]&#125;</span>)</span><br><span class="line"><span class="built_in">local</span> random_version_index=$((RANDOM%<span class="variable">$&#123;#versions[@]&#125;</span>))</span><br><span class="line"><span class="built_in">local</span> version=<span class="variable">$&#123;versions[random_version_index]&#125;</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$browser</span> <span class="keyword">in</span></span><br><span class="line">Chrome)UA_Browser=<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/<span class="variable">$version</span> Safari/537.36&quot;</span></span><br><span class="line">;;</span><br><span class="line">Firefox)UA_Browser=<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:<span class="variable">$&#123;version%%.*&#125;</span>) Gecko/20100101 Firefox/<span class="variable">$version</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">Edge)UA_Browser=<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/<span class="variable">$&#123;version%.*&#125;</span>.0.0 Safari/537.36 Edg/<span class="variable">$version</span>&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">is_valid_ipv4</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$1</span> =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]];<span class="keyword">then</span></span><br><span class="line">IPV4work=1</span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">IPV4work=0</span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">is_private_ipv4</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> ip_address=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$ip_address</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$ip_address</span> =~ ^10\. ]]||[[ <span class="variable">$ip_address</span> =~ ^172\.(1[6-9]|2[0-9]|3[0-1])\. ]]||[[ <span class="variable">$ip_address</span> =~ ^192\.168\. ]]||[[ <span class="variable">$ip_address</span> =~ ^127\. ]]||[[ <span class="variable">$ip_address</span> =~ ^0\. ]]||[[ <span class="variable">$ip_address</span> =~ ^22[4-9]\. ]]||[[ <span class="variable">$ip_address</span> =~ ^23[0-9]\. ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">get_ipv4</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> response</span><br><span class="line">IPV4=$(ip -4 addr show|grep global|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>|<span class="built_in">cut</span> -d <span class="string">&#x27;/&#x27;</span> -f1|<span class="built_in">head</span> -n 1)</span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$IPV4</span> ]];<span class="keyword">then</span></span><br><span class="line">IPV4=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">local</span> API_NET=(<span class="string">&quot;myip.check.place&quot;</span> <span class="string">&quot;ipv4.ip.sb&quot;</span> <span class="string">&quot;ipget.net&quot;</span> <span class="string">&quot;ip.ping0.cc&quot;</span> <span class="string">&quot;https://ip4.seeip.org&quot;</span> <span class="string">&quot;https://api.my-ip.io/ip&quot;</span> <span class="string">&quot;https://ipv4.icanhazip.com&quot;</span> <span class="string">&quot;api.ipify.org&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;API_NET[@]&#125;</span>&quot;</span>;<span class="keyword">do</span></span><br><span class="line">response=$(curl <span class="variable">$CurlARG</span> -s4 --max-time 8 <span class="string">&quot;<span class="variable">$p</span>&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> [[ $? -eq 0 &amp;&amp; ! <span class="variable">$response</span> =~ error ]];<span class="keyword">then</span></span><br><span class="line">IPV4=<span class="string">&quot;<span class="variable">$response</span>&quot;</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">hide_ipv4</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$1</span> ]];<span class="keyword">then</span></span><br><span class="line">IFS=<span class="string">&#x27;.&#x27;</span> <span class="built_in">read</span> -r -a ip_parts &lt;&lt;&lt;<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">IPhide=<span class="string">&quot;<span class="variable">$&#123;ip_parts[0]&#125;</span>.<span class="variable">$&#123;ip_parts[1]&#125;</span>.*.*&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">IPhide=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">is_valid_ipv6</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$1</span> =~ ^(([<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">7</span>,<span class="number">7</span>&#125;[<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;|([<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">1</span>,<span class="number">7</span>&#125;:|([<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">1</span>,<span class="number">6</span>&#125;:[<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;|([<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">1</span>,<span class="number">5</span>&#125;(:[<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">2</span>&#125;|([<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">1</span>,<span class="number">4</span>&#125;(:[<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">3</span>&#125;|([<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">1</span>,<span class="number">3</span>&#125;(:[<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">4</span>&#125;|([<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">1</span>,<span class="number">2</span>&#125;(:[<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">5</span>&#125;|[<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:((:[<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">6</span>&#125;)|:((:[<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">1</span>,<span class="number">7</span>&#125;|:)|fe80:(:[<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">0</span>,<span class="number">4</span>&#125;)&#123;<span class="number">0</span>,<span class="number">4</span>&#125;%[<span class="number">0</span>-<span class="number">9</span>a-zA-Z]&#123;<span class="number">1</span>,&#125;|::(ffff(:<span class="number">0</span>&#123;<span class="number">1</span>,<span class="number">4</span>&#125;)&#123;<span class="number">0</span>,<span class="number">1</span>&#125;:)&#123;<span class="number">0</span>,<span class="number">1</span>&#125;((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|(<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]|<span class="number">1</span>&#123;<span class="number">0</span>,<span class="number">1</span>&#125;[<span class="number">0</span>-<span class="number">9</span>])&#123;<span class="number">0</span>,<span class="number">1</span>&#125;[<span class="number">0</span>-<span class="number">9</span>])\.)&#123;<span class="number">3</span>,<span class="number">3</span>&#125;(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|(<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]|<span class="number">1</span>&#123;<span class="number">0</span>,<span class="number">1</span>&#125;[<span class="number">0</span>-<span class="number">9</span>])&#123;<span class="number">0</span>,<span class="number">1</span>&#125;[<span class="number">0</span>-<span class="number">9</span>])|([<span class="number">0</span>-<span class="number">9</span>a-fA-F]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:)&#123;<span class="number">1</span>,<span class="number">4</span>&#125;:((<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|(<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]|<span class="number">1</span>&#123;<span class="number">0</span>,<span class="number">1</span>&#125;[<span class="number">0</span>-<span class="number">9</span>])&#123;<span class="number">0</span>,<span class="number">1</span>&#125;[<span class="number">0</span>-<span class="number">9</span>])\.)&#123;<span class="number">3</span>,<span class="number">3</span>&#125;(<span class="number">25</span>[<span class="number">0</span>-<span class="number">5</span>]|(<span class="number">2</span>[<span class="number">0</span>-<span class="number">4</span>]|<span class="number">1</span>&#123;<span class="number">0</span>,<span class="number">1</span>&#125;[<span class="number">0</span>-<span class="number">9</span>])&#123;<span class="number">0</span>,<span class="number">1</span>&#125;[<span class="number">0</span>-<span class="number">9</span>]))$ ]];<span class="keyword">then</span></span><br><span class="line">IPV6work=1</span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">IPV6work=0</span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">is_private_ipv6</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> address=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$address</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$address</span> =~ ^fe80: ]]||[[ <span class="variable">$address</span> =~ ^fc00: ]]||[[ <span class="variable">$address</span> =~ ^fd00: ]]||[[ <span class="variable">$address</span> =~ ^2001:db8: ]]||[[ <span class="variable">$address</span> == ::1 ]]||[[ <span class="variable">$address</span> =~ ^::ffff: ]]||[[ <span class="variable">$address</span> =~ ^2002: ]]||[[ <span class="variable">$address</span> =~ ^2001: ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">get_ipv6</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> response</span><br><span class="line">IPV6=$(ip -6 addr show|grep global|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>|<span class="built_in">cut</span> -d <span class="string">&#x27;/&#x27;</span> -f1|<span class="built_in">head</span> -n 1)</span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$IPV6</span> ]];<span class="keyword">then</span></span><br><span class="line">IPV6=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">local</span> API_NET=(<span class="string">&quot;myip.check.place&quot;</span> <span class="string">&quot;ipv6.ip.sb&quot;</span> <span class="string">&quot;https://ipget.net&quot;</span> <span class="string">&quot;ipv6.ping0.cc&quot;</span> <span class="string">&quot;https://api.my-ip.io/ip&quot;</span> <span class="string">&quot;https://ipv6.icanhazip.com&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;API_NET[@]&#125;</span>&quot;</span>;<span class="keyword">do</span></span><br><span class="line">response=$(curl <span class="variable">$CurlARG</span> -s6k --max-time 8 <span class="string">&quot;<span class="variable">$p</span>&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> [[ $? -eq 0 &amp;&amp; ! <span class="variable">$response</span> =~ error ]];<span class="keyword">then</span></span><br><span class="line">IPV6=<span class="string">&quot;<span class="variable">$response</span>&quot;</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">hide_ipv6</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$1</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">local</span> expanded_ip=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span>|sed <span class="string">&#x27;s/::/:0000:0000:0000:0000:0000:0000:0000:0000:/g&#x27;</span>|<span class="built_in">cut</span> -d <span class="string">&#x27;:&#x27;</span> -f1-8)</span><br><span class="line">IFS=<span class="string">&#x27;:&#x27;</span> <span class="built_in">read</span> -r -a ip_parts &lt;&lt;&lt;<span class="string">&quot;<span class="variable">$expanded_ip</span>&quot;</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$&#123;#ip_parts[@]&#125;</span> -lt 8 ];<span class="keyword">do</span></span><br><span class="line">ip_parts+=(0000)</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">IPhide=<span class="string">&quot;<span class="variable">$&#123;ip_parts[0]:-0&#125;</span>:<span class="variable">$&#123;ip_parts[1]:-0&#125;</span>:<span class="variable">$&#123;ip_parts[2]:-0&#125;</span>:*:*:*:*:*&quot;</span></span><br><span class="line">IPhide=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$IPhide</span>&quot;</span>|sed <span class="string">&#x27;s/:0\&#123;1,\&#125;/:/g&#x27;</span>|sed <span class="string">&#x27;s/::\+/:/g&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">IPhide=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">calculate_display_width</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> string=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">local</span> length=0</span><br><span class="line"><span class="built_in">local</span> char</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">0</span>; i&lt;<span class="variable">$&#123;#string&#125;</span>; i++));<span class="keyword">do</span></span><br><span class="line">char=<span class="variable">$&#123;string:i:1&#125;</span></span><br><span class="line"><span class="keyword">if</span> LC_CTYPE=C <span class="built_in">printf</span> <span class="string">&#x27;%s&#x27;</span> <span class="string">&quot;<span class="variable">$char</span>&quot;</span>|grep -qP <span class="string">&#x27;[\x80-\xFF]&#x27;</span>;<span class="keyword">then</span></span><br><span class="line">length=$((length+<span class="number">2</span>))</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">length=$((length+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$length</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">calc_padding</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> input_text=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">local</span> total_width=<span class="variable">$2</span></span><br><span class="line"><span class="built_in">local</span> title_length=$(calculate_display_width <span class="string">&quot;<span class="variable">$input_text</span>&quot;</span>)</span><br><span class="line"><span class="built_in">local</span> left_padding=$(((total_width-title_length)/<span class="number">2</span>))</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$left_padding</span> -gt 0 ]];<span class="keyword">then</span></span><br><span class="line">PADDING=$(<span class="built_in">printf</span> <span class="string">&#x27;%*s&#x27;</span> <span class="variable">$left_padding</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">PADDING=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">generate_dms</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> lat=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">local</span> lon=<span class="variable">$2</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$lat</span> || <span class="variable">$lat</span> == <span class="string">&quot;null&quot;</span> || -z <span class="variable">$lon</span> || <span class="variable">$lon</span> == <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="function"><span class="title">convert_single</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> coord=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">local</span> direction=<span class="variable">$2</span></span><br><span class="line"><span class="built_in">local</span> fixed_coord=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$coord</span>&quot;</span>|sed <span class="string">&#x27;s/\.$/.0/&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> degrees=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$fixed_coord</span>&quot;</span>|<span class="built_in">cut</span> -d<span class="string">&#x27;.&#x27;</span> -f1)</span><br><span class="line"><span class="built_in">local</span> fractional=<span class="string">&quot;0.<span class="subst">$(echo <span class="string">&quot;<span class="variable">$fixed_coord</span>&quot;</span>|cut -d&#x27;.&#x27; -f2)</span>&quot;</span></span><br><span class="line"><span class="built_in">local</span> minutes=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$fractional</span> * 60&quot;</span>|bc -l|<span class="built_in">cut</span> -d<span class="string">&#x27;.&#x27;</span> -f1)</span><br><span class="line"><span class="built_in">local</span> seconds_fractional=<span class="string">&quot;0.<span class="subst">$(echo <span class="string">&quot;<span class="variable">$fractional</span> * 60&quot;</span>|bc -l|cut -d&#x27;.&#x27; -f2)</span>&quot;</span></span><br><span class="line"><span class="built_in">local</span> seconds=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$seconds_fractional</span> * 60&quot;</span>|bc -l|awk <span class="string">&#x27;&#123;printf &quot;%.0f&quot;, $1&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$degrees</span>°<span class="variable">$minutes</span>′<span class="variable">$seconds</span>″<span class="variable">$direction</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">local</span> lat_dir=<span class="string">&#x27;N&#x27;</span></span><br><span class="line"><span class="keyword">if</span> [[ $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$lat</span> &lt; 0&quot;</span>|bc -l) -eq 1 ]];<span class="keyword">then</span></span><br><span class="line">lat_dir=<span class="string">&#x27;S&#x27;</span></span><br><span class="line">lat=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$lat</span> * -1&quot;</span>|bc -l)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> lon_dir=<span class="string">&#x27;E&#x27;</span></span><br><span class="line"><span class="keyword">if</span> [[ $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$lon</span> &lt; 0&quot;</span>|bc -l) -eq 1 ]];<span class="keyword">then</span></span><br><span class="line">lon_dir=<span class="string">&#x27;W&#x27;</span></span><br><span class="line">lon=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$lon</span> * -1&quot;</span>|bc -l)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> lat_dms=$(convert_single <span class="variable">$lat</span> <span class="variable">$lat_dir</span>)</span><br><span class="line"><span class="built_in">local</span> lon_dms=$(convert_single <span class="variable">$lon</span> <span class="variable">$lon_dir</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$lon_dms</span>, <span class="variable">$lat_dms</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">generate_googlemap_url</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> lat=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">local</span> lon=<span class="variable">$2</span></span><br><span class="line"><span class="built_in">local</span> radius=<span class="variable">$3</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$lat</span> || <span class="variable">$lat</span> == <span class="string">&quot;null&quot;</span> || -z <span class="variable">$lon</span> || <span class="variable">$lon</span> == <span class="string">&quot;null&quot;</span> || -z <span class="variable">$radius</span> || <span class="variable">$radius</span> == <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> zoom_level=15</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$radius</span> -gt 1000 ]];<span class="keyword">then</span></span><br><span class="line">zoom_level=12</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$radius</span> -gt 500 ]];<span class="keyword">then</span></span><br><span class="line">zoom_level=13</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$radius</span> -gt 250 ]];<span class="keyword">then</span></span><br><span class="line">zoom_level=14</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;https://check.place/<span class="variable">$lat</span>,<span class="variable">$lon</span>,<span class="variable">$zoom_level</span>,<span class="variable">$LANG</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">db_maxmind</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[database]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>Maxmind <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">8</span>-<span class="variable">$&#123;sinfo[ldatabase]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">maxmind=()</span><br><span class="line"><span class="built_in">local</span> RESPONSE=$(curl <span class="variable">$CurlARG</span> -Ls -m 10 <span class="string">&quot;https://ipinfo.check.place/<span class="variable">$IP</span>?lang=<span class="variable">$LANG</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1||RESPONSE=<span class="string">&quot;&quot;</span></span><br><span class="line">maxmind[asn]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.ASN.AutonomousSystemNumber&#x27;</span>)</span><br><span class="line">maxmind[org]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.ASN.AutonomousSystemOrganization&#x27;</span>)</span><br><span class="line">maxmind[city]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Name&#x27;</span>)</span><br><span class="line">maxmind[post]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.City.PostalCode&#x27;</span>)</span><br><span class="line">maxmind[lat]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Latitude&#x27;</span>)</span><br><span class="line">maxmind[lon]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Longitude&#x27;</span>)</span><br><span class="line">maxmind[rad]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.City.AccuracyRadius&#x27;</span>)</span><br><span class="line">maxmind[dms]=$(generate_dms <span class="string">&quot;<span class="variable">$&#123;maxmind[lat]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;maxmind[lon]&#125;</span>&quot;</span>)</span><br><span class="line">maxmind[map]=$(generate_googlemap_url <span class="string">&quot;<span class="variable">$&#123;maxmind[lat]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;maxmind[lon]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;maxmind[rad]&#125;</span>&quot;</span>)</span><br><span class="line">maxmind[continentcode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Continent.Code&#x27;</span>)</span><br><span class="line">maxmind[continent]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Continent.Name&#x27;</span>)</span><br><span class="line">maxmind[citycountrycoad]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Country.IsoCode&#x27;</span>)</span><br><span class="line">maxmind[citycountry]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Country.Name&#x27;</span>)</span><br><span class="line">maxmind[timezone]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Location.TimeZone&#x27;</span>)</span><br><span class="line">maxmind[subcode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;if .City.Subdivisions | length &gt; 0 then .City.Subdivisions[0].IsoCode else &quot;N/A&quot; end&#x27;</span>)</span><br><span class="line">maxmind[sub]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;if .City.Subdivisions | length &gt; 0 then .City.Subdivisions[0].Name else &quot;N/A&quot; end&#x27;</span>)</span><br><span class="line">maxmind[countrycode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.Country.IsoCode&#x27;</span>)</span><br><span class="line">maxmind[country]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.Country.Name&#x27;</span>)</span><br><span class="line">maxmind[regcountrycode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.Country.RegisteredCountry.IsoCode&#x27;</span>)</span><br><span class="line">maxmind[regcountry]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.Country.RegisteredCountry.Name&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$LANG</span> != <span class="string">&quot;en&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">local</span> backup_response=$(curl <span class="variable">$CurlARG</span> -s -m 10 <span class="string">&quot;http://ipinfo.check.place/<span class="variable">$IP</span>?lang=en&quot;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[asn]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[asn]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.ASN.AutonomousSystemNumber&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[org]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[org]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.ASN.AutonomousSystemOrganization&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[city]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[city]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Name&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[post]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[post]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.City.PostalCode&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[lat]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[lat]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Latitude&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[lon]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[lon]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Longitude&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[rad]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[rad]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.City.AccuracyRadius&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[continentcode]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[continentcode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Continent.Code&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[continent]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[continent]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Continent.Name&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[citycountrycoad]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[citycountrycoad]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Country.IsoCode&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[citycountry]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[citycountry]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Country.Name&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[timezone]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[timezone]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.City.Location.TimeZone&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[subcode]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[subcode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;if .City.Subdivisions | length &gt; 0 then .City.Subdivisions[0].IsoCode else &quot;N/A&quot; end&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[sub]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[sub]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;if .City.Subdivisions | length &gt; 0 then .City.Subdivisions[0].Name else &quot;N/A&quot; end&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[countrycode]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[countrycode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.Country.IsoCode&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[country]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[country]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.Country.Name&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[regcountrycode]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[regcountrycode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.Country.RegisteredCountry.IsoCode&#x27;</span>)</span><br><span class="line">[[ <span class="variable">$&#123;maxmind[regcountry]&#125;</span> == <span class="string">&quot;null&quot;</span> ]]&amp;&amp;maxmind[regcountry]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$backup_response</span>&quot;</span>|jq -r <span class="string">&#x27;.Country.RegisteredCountry.Name&#x27;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;maxmind[lat]&#125;</span> != <span class="string">&quot;null&quot;</span> &amp;&amp; <span class="variable">$&#123;maxmind[lon]&#125;</span> != <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">maxmind[dms]=$(generate_dms <span class="string">&quot;<span class="variable">$&#123;maxmind[lat]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;maxmind[lon]&#125;</span>&quot;</span>)</span><br><span class="line">maxmind[map]=$(generate_googlemap_url <span class="string">&quot;<span class="variable">$&#123;maxmind[lat]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;maxmind[lon]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;maxmind[rad]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">maxmind[dms]=<span class="string">&quot;null&quot;</span></span><br><span class="line">maxmind[map]=<span class="string">&quot;null&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">db_ipinfo</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[database]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>IPinfo <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">7</span>-<span class="variable">$&#123;sinfo[ldatabase]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">ipinfo=()</span><br><span class="line"><span class="built_in">local</span> RESPONSE=$(curl <span class="variable">$CurlARG</span> -Ls -m 10 <span class="string">&quot;https://ipinfo.io/widget/demo/<span class="variable">$IP</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1||RESPONSE=<span class="string">&quot;&quot;</span></span><br><span class="line">ipinfo[usetype]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.data.asn.type&#x27;</span>)</span><br><span class="line">ipinfo[comtype]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.data.company.type&#x27;</span>)</span><br><span class="line"><span class="built_in">shopt</span> -s nocasematch</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;ipinfo[usetype]&#125;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;business&quot;</span>)ipinfo[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[business]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;isp&quot;</span>)ipinfo[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[isp]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;hosting&quot;</span>)ipinfo[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[hosting]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;education&quot;</span>)ipinfo[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[education]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)ipinfo[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[other]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;ipinfo[comtype]&#125;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;business&quot;</span>)ipinfo[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[business]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;isp&quot;</span>)ipinfo[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[isp]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;hosting&quot;</span>)ipinfo[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[hosting]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;education&quot;</span>)ipinfo[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[education]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)ipinfo[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[other]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">shopt</span> -u nocasematch</span><br><span class="line">ipinfo[countrycode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.data.country&#x27;</span>)</span><br><span class="line">ipinfo[proxy]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.data.privacy.proxy&#x27;</span>)</span><br><span class="line">ipinfo[tor]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.data.privacy.tor&#x27;</span>)</span><br><span class="line">ipinfo[vpn]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.data.privacy.vpn&#x27;</span>)</span><br><span class="line">ipinfo[server]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.data.privacy.hosting&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">db_scamalytics</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[database]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>SCAMALYTICS <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">12</span>-<span class="variable">$&#123;sinfo[ldatabase]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">scamalytics=()</span><br><span class="line"><span class="built_in">local</span> RESPONSE=$(curl <span class="variable">$CurlARG</span> -sL -H <span class="string">&quot;Referer: https://scamalytics.com&quot;</span> -m 10 <span class="string">&quot;https://scamalytics.com/ip/<span class="variable">$IP</span>&quot;</span>)</span><br><span class="line">[[ -z <span class="variable">$RESPONSE</span> ]]&amp;&amp;<span class="built_in">return</span> 1</span><br><span class="line"><span class="built_in">local</span> tmpscore=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|grep -oP <span class="string">&#x27;(?&lt;=&gt;Fraud Score: )[^&lt;]+&#x27;</span>)</span><br><span class="line">scamalytics[score]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$tmpscore</span>&quot;</span>|bc)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;scamalytics[score]&#125;</span> -lt 25 ]];<span class="keyword">then</span></span><br><span class="line">scamalytics[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[low]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$&#123;scamalytics[score]&#125;</span> -lt 50 ]];<span class="keyword">then</span></span><br><span class="line">scamalytics[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[medium]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$&#123;scamalytics[score]&#125;</span> -lt 75 ]];<span class="keyword">then</span></span><br><span class="line">scamalytics[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[high]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$&#123;scamalytics[score]&#125;</span> -ge 75 ]];<span class="keyword">then</span></span><br><span class="line">scamalytics[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[veryhigh]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">scamalytics[countrycode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|grep -A1 <span class="string">&quot;&lt;th&gt;Country Code&lt;/th&gt;&quot;</span>|awk -F<span class="string">&#x27;&lt;/?td&gt;&#x27;</span> <span class="string">&#x27;/&lt;td&gt;/ &#123;print $2&#125;&#x27;</span>)</span><br><span class="line">scamalytics[vpn]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|grep -A1 <span class="string">&#x27;Anonymizing VPN&#x27;</span>|<span class="built_in">tail</span> -n1|grep -oP <span class="string">&#x27;&gt;(Yes|No)&lt;&#x27;</span>|sed <span class="string">&#x27;s/&gt;Yes&lt;/true/;s/&gt;No&lt;/false/&#x27;</span>)</span><br><span class="line">scamalytics[tor]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|grep -A1 <span class="string">&#x27;Tor Exit Node&#x27;</span>|<span class="built_in">tail</span> -n1|grep -oP <span class="string">&#x27;&gt;(Yes|No)&lt;&#x27;</span>|sed <span class="string">&#x27;s/&gt;Yes&lt;/true/;s/&gt;No&lt;/false/&#x27;</span>)</span><br><span class="line">scamalytics[server]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|grep -A1 <span class="string">&#x27;Server&#x27;</span>|<span class="built_in">tail</span> -n1|grep -oP <span class="string">&#x27;&gt;(Yes|No)&lt;&#x27;</span>|sed <span class="string">&#x27;s/&gt;Yes&lt;/true/;s/&gt;No&lt;/false/&#x27;</span>)</span><br><span class="line">scamalytics[proxy1]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|grep -A1 <span class="string">&#x27;Public Proxy&#x27;</span>|<span class="built_in">tail</span> -n1|grep -oP <span class="string">&#x27;&gt;(Yes|No)&lt;&#x27;</span>|sed <span class="string">&#x27;s/&gt;Yes&lt;/true/;s/&gt;No&lt;/false/&#x27;</span>)</span><br><span class="line">scamalytics[proxy2]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|grep -A1 <span class="string">&#x27;Web Proxy&#x27;</span>|<span class="built_in">tail</span> -n1|grep -oP <span class="string">&#x27;&gt;(Yes|No)&lt;&#x27;</span>|sed <span class="string">&#x27;s/&gt;Yes&lt;/true/;s/&gt;No&lt;/false/&#x27;</span>)</span><br><span class="line">scamalytics[proxy]=<span class="string">&quot;true&quot;</span></span><br><span class="line">[[ <span class="variable">$&#123;scamalytics[proxy1]&#125;</span> == <span class="string">&quot;false&quot;</span> &amp;&amp; <span class="variable">$&#123;scamalytics[proxy2]&#125;</span> == <span class="string">&quot;false&quot;</span> ]]&amp;&amp;scamalytics[proxy]=<span class="string">&quot;false&quot;</span></span><br><span class="line">scamalytics[robot]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|grep -A1 <span class="string">&#x27;Search Engine Robot&#x27;</span>|<span class="built_in">tail</span> -n1|grep -oP <span class="string">&#x27;&gt;(Yes|No)&lt;&#x27;</span>|sed <span class="string">&#x27;s/&gt;Yes&lt;/true/;s/&gt;No&lt;/false/&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">db_ipregistry</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[database]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>ipregistry <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">11</span>-<span class="variable">$&#123;sinfo[ldatabase]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">ipregistry=()</span><br><span class="line"><span class="built_in">local</span> RESPONSE=$(curl <span class="variable">$CurlARG</span> -sL -m 10 <span class="string">&quot;https://ipinfo.check.place/<span class="variable">$IP</span>?db=ipregistry&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1||RESPONSE=<span class="string">&quot;&quot;</span></span><br><span class="line">ipregistry[usetype]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.connection.type&#x27;</span>)</span><br><span class="line">ipregistry[comtype]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.company.type&#x27;</span>)</span><br><span class="line"><span class="built_in">shopt</span> -s nocasematch</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;ipregistry[usetype]&#125;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;business&quot;</span>)ipregistry[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[business]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;isp&quot;</span>)ipregistry[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[isp]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;hosting&quot;</span>)ipregistry[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[hosting]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;education&quot;</span>)ipregistry[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[education]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;government&quot;</span>)ipregistry[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[government]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)ipregistry[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[other]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;ipregistry[comtype]&#125;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;business&quot;</span>)ipregistry[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[business]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;isp&quot;</span>)ipregistry[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[isp]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;hosting&quot;</span>)ipregistry[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[hosting]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;education&quot;</span>)ipregistry[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[education]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;government&quot;</span>)ipregistry[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[government]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)ipregistry[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[other]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">shopt</span> -u nocasematch</span><br><span class="line">ipregistry[countrycode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.location.country.code&#x27;</span>)</span><br><span class="line">ipregistry[proxy]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.security.is_proxy&#x27;</span>)</span><br><span class="line">ipregistry[tor1]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.security.is_tor&#x27;</span>)</span><br><span class="line">ipregistry[tor2]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.security.is_tor_exit&#x27;</span>)</span><br><span class="line">ipregistry[tor]=<span class="string">&quot;true&quot;</span></span><br><span class="line">[[ <span class="variable">$&#123;ipregistry[tor1]&#125;</span> == <span class="string">&quot;false&quot;</span> &amp;&amp; <span class="variable">$&#123;ipregistry[tor2]&#125;</span> == <span class="string">&quot;false&quot;</span> ]]&amp;&amp;ipregistry[tor]=<span class="string">&quot;false&quot;</span></span><br><span class="line">ipregistry[vpn]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.security.is_vpn&#x27;</span>)</span><br><span class="line">ipregistry[server]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.security.is_cloud_provider&#x27;</span>)</span><br><span class="line">ipregistry[abuser]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.security.is_abuser&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">db_ipapi</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[database]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>ipapi <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">6</span>-<span class="variable">$&#123;sinfo[ldatabase]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">ipapi=()</span><br><span class="line"><span class="built_in">local</span> RESPONSE=$(curl <span class="variable">$CurlARG</span> -sL -m 10 <span class="string">&quot;https://api.ipapi.is/?q=<span class="variable">$IP</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1||RESPONSE=<span class="string">&quot;&quot;</span></span><br><span class="line">ipapi[usetype]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.asn.type&#x27;</span>)</span><br><span class="line">ipapi[comtype]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.company.type&#x27;</span>)</span><br><span class="line"><span class="built_in">shopt</span> -s nocasematch</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;ipapi[usetype]&#125;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;business&quot;</span>)ipapi[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[business]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;isp&quot;</span>)ipapi[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[isp]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;hosting&quot;</span>)ipapi[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[hosting]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;education&quot;</span>)ipapi[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[education]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;government&quot;</span>)ipapi[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[government]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;banking&quot;</span>)ipapi[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[banking]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)ipapi[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[other]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;ipapi[comtype]&#125;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;business&quot;</span>)ipapi[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[business]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;isp&quot;</span>)ipapi[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[isp]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;hosting&quot;</span>)ipapi[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[hosting]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;education&quot;</span>)ipapi[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[education]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;government&quot;</span>)ipapi[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[government]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;banking&quot;</span>)ipapi[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[banking]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)ipapi[scomtype]=<span class="string">&quot;<span class="variable">$&#123;stype[other]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">[[ -z <span class="variable">$RESPONSE</span> ]]&amp;&amp;<span class="built_in">return</span> 1</span><br><span class="line">ipapi[scoretext]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.company.abuser_score&#x27;</span>)</span><br><span class="line">ipapi[scorenum]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;ipapi[scoretext]&#125;</span>&quot;</span>|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">ipapi[risktext]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;ipapi[scoretext]&#125;</span>&quot;</span>|awk -F<span class="string">&#x27;[()]&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">ipapi[score]=$(awk <span class="string">&quot;BEGIN &#123;printf \&quot;%.2f%%\&quot;, <span class="variable">$&#123;ipapi[scorenum]&#125;</span> * 100&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;ipapi[risktext]&#125;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;Very Low&quot;</span>)ipapi[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[verylow]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Low&quot;</span>)ipapi[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[low]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Elevated&quot;</span>)ipapi[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[elevated]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;High&quot;</span>)ipapi[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[high]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Very High&quot;</span>)ipapi[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[veryhigh]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">shopt</span> -u nocasematch</span><br><span class="line">ipapi[countrycode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.location.country_code&#x27;</span>)</span><br><span class="line">ipapi[proxy]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.is_proxy&#x27;</span>)</span><br><span class="line">ipapi[tor]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.is_tor&#x27;</span>)</span><br><span class="line">ipapi[vpn]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.is_vpn&#x27;</span>)</span><br><span class="line">ipapi[server]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.is_datacenter&#x27;</span>)</span><br><span class="line">ipapi[abuser]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.is_abuser&#x27;</span>)</span><br><span class="line">ipapi[robot]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.is_crawler&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">db_abuseipdb</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[database]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>AbuseIPDB <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">10</span>-<span class="variable">$&#123;sinfo[ldatabase]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">abuseipdb=()</span><br><span class="line"><span class="built_in">local</span> RESPONSE=$(curl <span class="variable">$CurlARG</span> -sL -m 10 <span class="string">&quot;https://ipinfo.check.place/<span class="variable">$IP</span>?db=abuseipdb&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1||RESPONSE=<span class="string">&quot;&quot;</span></span><br><span class="line">abuseipdb[usetype]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.data.usageType&#x27;</span>)</span><br><span class="line"><span class="built_in">shopt</span> -s nocasematch</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;abuseipdb[usetype]&#125;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;Commercial&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[business]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Data Center/Web Hosting/Transit&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[hosting]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;University/College/School&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[education]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Government&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[government]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;banking&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[banking]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Organization&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[organization]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Military&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[military]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Library&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[library]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Content Delivery Network&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[cdn]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Fixed Line ISP&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[lineisp]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Mobile ISP&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[mobile]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Search Engine Spider&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[spider]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;Reserved&quot;</span>)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[reserved]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)abuseipdb[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[other]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">shopt</span> -u nocasematch</span><br><span class="line">abuseipdb[score]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.data.abuseConfidenceScore&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;abuseipdb[score]&#125;</span> -lt 25 ]];<span class="keyword">then</span></span><br><span class="line">abuseipdb[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[low]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$&#123;abuseipdb[score]&#125;</span> -lt 75 ]];<span class="keyword">then</span></span><br><span class="line">abuseipdb[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[high]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$&#123;abuseipdb[score]&#125;</span> -ge 75 ]];<span class="keyword">then</span></span><br><span class="line">abuseipdb[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[dos]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">db_ip2location</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[database]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>IP2LOCATION <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">12</span>-<span class="variable">$&#123;sinfo[ldatabase]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">ip2location=()</span><br><span class="line"><span class="built_in">local</span> RESPONSE=$(curl <span class="variable">$CurlARG</span> -sL -m 10 -H <span class="string">&quot;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36&quot;</span> -H <span class="string">&quot;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span> -H <span class="string">&quot;Accept-Language: en-US,en;q=0.9&quot;</span> <span class="string">&quot;https://www.ip2location.io/<span class="variable">$IP</span>&quot;</span>|sed -n <span class="string">&#x27;/&lt;code/,/&lt;\/code&gt;/p&#x27;</span>|sed -e <span class="string">&#x27;s/&lt;[^&gt;]*&gt;//g&#x27;</span>|sed <span class="string">&#x27;s/^[\t]*//&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1||RESPONSE=<span class="string">&quot;&quot;</span></span><br><span class="line">ip2location[usetype]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.usage_type&#x27;</span>)</span><br><span class="line"><span class="built_in">shopt</span> -s nocasematch</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;ip2location[usetype]&#125;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;COM&quot;</span>)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[business]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;DCH&quot;</span>)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[hosting]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;EDU&quot;</span>)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[education]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;GOV&quot;</span>)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[government]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;ORG&quot;</span>)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[organization]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;MIL&quot;</span>)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[military]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;LIB&quot;</span>)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[library]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;CDN&quot;</span>)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[cdn]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;ISP&quot;</span>)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[lineisp]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;MOB&quot;</span>)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[mobile]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;SES&quot;</span>)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[spider]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;RSV&quot;</span>)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[reserved]&#125;</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)ip2location[susetype]=<span class="string">&quot;<span class="variable">$&#123;stype[other]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">shopt</span> -u nocasematch</span><br><span class="line">ip2location[countrycode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.country_code&#x27;</span>)</span><br><span class="line">ip2location[proxy1]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.proxy.is_public_proxy&#x27;</span>)</span><br><span class="line">ip2location[proxy2]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.proxy.is_web_proxy&#x27;</span>)</span><br><span class="line">ip2location[proxy]=<span class="string">&quot;true&quot;</span></span><br><span class="line">[[ <span class="variable">$&#123;ip2location[proxy1]&#125;</span> == <span class="string">&quot;false&quot;</span> &amp;&amp; <span class="variable">$&#123;ip2location[proxy2]&#125;</span> == <span class="string">&quot;false&quot;</span> ]]&amp;&amp;ip2location[proxy]=<span class="string">&quot;false&quot;</span></span><br><span class="line">ip2location[tor]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.proxy.is_tor&#x27;</span>)</span><br><span class="line">ip2location[vpn]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.proxy.is_vpn&#x27;</span>)</span><br><span class="line">ip2location[server]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.proxy.is_data_center&#x27;</span>)</span><br><span class="line">ip2location[abuser]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.proxy.is_spammer&#x27;</span>)</span><br><span class="line">ip2location[robot1]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.proxy.is_web_crawler&#x27;</span>)</span><br><span class="line">ip2location[robot2]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.proxy.is_scanner&#x27;</span>)</span><br><span class="line">ip2location[robot3]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.proxy.is_botnet&#x27;</span>)</span><br><span class="line">ip2location[robot]=<span class="string">&quot;true&quot;</span></span><br><span class="line">[[ <span class="variable">$&#123;ip2location[robot1]&#125;</span> == <span class="string">&quot;false&quot;</span> &amp;&amp; <span class="variable">$&#123;ip2location[robot2]&#125;</span> == <span class="string">&quot;false&quot;</span> &amp;&amp; <span class="variable">$&#123;ip2location[robot3]&#125;</span> == <span class="string">&quot;false&quot;</span> ]]&amp;&amp;ip2location[robot]=<span class="string">&quot;false&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">db_dbip</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[database]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>DB-IP <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">6</span>-<span class="variable">$&#123;sinfo[ldatabase]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">dbip=()</span><br><span class="line"><span class="built_in">local</span> RESPONSE=$(curl <span class="variable">$CurlARG</span> -sL -m 10 <span class="string">&quot;https://db-ip.com/demo/home.php?s=<span class="variable">$IP</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1||RESPONSE=<span class="string">&quot;&quot;</span></span><br><span class="line">dbip[risktext]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.demoInfo.threatLevel&#x27;</span>)</span><br><span class="line"><span class="built_in">shopt</span> -s nocasematch</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;dbip[risktext]&#125;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;low&quot;</span>)dbip[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[low]&#125;</span>&quot;</span></span><br><span class="line">dbip[score]=0</span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;medium&quot;</span>)dbip[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[medium]&#125;</span>&quot;</span></span><br><span class="line">dbip[score]=50</span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;high&quot;</span>)dbip[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[high]&#125;</span>&quot;</span></span><br><span class="line">dbip[score]=100</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">shopt</span> -u nocasematch</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">db_ipwhois</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[database]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>IPWHOIS <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">8</span>-<span class="variable">$&#123;sinfo[ldatabase]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">ipwhois=()</span><br><span class="line"><span class="built_in">local</span> RESPONSE=$(curl <span class="variable">$CurlARG</span> -sL -m 10 <span class="string">&quot;https://ipwhois.io/widget?ip=<span class="variable">$IP</span>&amp;lang=en&quot;</span> --compressed \</span><br><span class="line">-H <span class="string">&quot;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0&quot;</span> \</span><br><span class="line">-H <span class="string">&quot;Accept: */*&quot;</span> \</span><br><span class="line">-H <span class="string">&quot;Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span> \</span><br><span class="line">-H <span class="string">&quot;Connection: keep-alive&quot;</span> \</span><br><span class="line">-H <span class="string">&quot;Referer: https://ipwhois.io/&quot;</span> \</span><br><span class="line">-H <span class="string">&quot;Sec-Fetch-Dest: empty&quot;</span> \</span><br><span class="line">-H <span class="string">&quot;Sec-Fetch-Mode: cors&quot;</span> \</span><br><span class="line">-H <span class="string">&quot;Sec-Fetch-Site: same-origin&quot;</span> \</span><br><span class="line">-H <span class="string">&quot;TE: trailers&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1||RESPONSE=<span class="string">&quot;&quot;</span></span><br><span class="line">ipwhois[countrycode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.country_code&#x27;</span>)</span><br><span class="line">ipwhois[proxy]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.security.proxy&#x27;</span>)</span><br><span class="line">ipwhois[tor]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.security.tor&#x27;</span>)</span><br><span class="line">ipwhois[vpn]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.security.vpn&#x27;</span>)</span><br><span class="line">ipwhois[server]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.security.hosting&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">db_ipdata</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[database]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>ipdata <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">7</span>-<span class="variable">$&#123;sinfo[ldatabase]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">ipdata=()</span><br><span class="line"><span class="built_in">local</span> RESPONSE=$(curl <span class="variable">$CurlARG</span> -sL -m 10 <span class="string">&quot;https://ipinfo.check.place/<span class="variable">$IP</span>?db=ipdata&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1||RESPONSE=<span class="string">&quot;&quot;</span></span><br><span class="line">ipdata[countrycode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.country_code&#x27;</span>)</span><br><span class="line">ipdata[proxy]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.threat.is_proxy&#x27;</span>)</span><br><span class="line">ipdata[tor]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.threat.is_tor&#x27;</span>)</span><br><span class="line">ipdata[server]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.threat.is_datacenter&#x27;</span>)</span><br><span class="line">ipdata[abuser1]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.threat.is_threat&#x27;</span>)</span><br><span class="line">ipdata[abuser2]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.threat.is_known_abuser&#x27;</span>)</span><br><span class="line">ipdata[abuser3]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.threat.is_known_attacker&#x27;</span>)</span><br><span class="line">ipdata[abuser]=<span class="string">&quot;true&quot;</span></span><br><span class="line">[[ <span class="variable">$&#123;ipdata[abuser1]&#125;</span> == <span class="string">&quot;false&quot;</span> &amp;&amp; <span class="variable">$&#123;ipdata[abuser2]&#125;</span> == <span class="string">&quot;false&quot;</span> &amp;&amp; <span class="variable">$&#123;ipdata[abuser3]&#125;</span> == <span class="string">&quot;false&quot;</span> ]]&amp;&amp;ipdata[abuser]=<span class="string">&quot;false&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">db_ipqs</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[database]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>IPQS <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">5</span>-<span class="variable">$&#123;sinfo[ldatabase]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">ipqs=()</span><br><span class="line"><span class="built_in">local</span> RESPONSE=$(curl <span class="variable">$CurlARG</span> -sL -m 10 <span class="string">&quot;https://ipinfo.check.place/<span class="variable">$IP</span>?db=ipqualityscore&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1||RESPONSE=<span class="string">&quot;&quot;</span></span><br><span class="line">ipqs[score]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.fraud_score&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;ipqs[score]&#125;</span> -lt 75 ]];<span class="keyword">then</span></span><br><span class="line">ipqs[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[low]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$&#123;ipqs[score]&#125;</span> -lt 85 ]];<span class="keyword">then</span></span><br><span class="line">ipqs[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[suspicious]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$&#123;ipqs[score]&#125;</span> -lt 90 ]];<span class="keyword">then</span></span><br><span class="line">ipqs[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[risky]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$&#123;ipqs[score]&#125;</span> -ge 90 ]];<span class="keyword">then</span></span><br><span class="line">ipqs[risk]=<span class="string">&quot;<span class="variable">$&#123;sscore[highrisk]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">ipqs[countrycode]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.country_code&#x27;</span>)</span><br><span class="line">ipqs[proxy]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.proxy&#x27;</span>)</span><br><span class="line">ipqs[tor]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.tor&#x27;</span>)</span><br><span class="line">ipqs[vpn]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.vpn&#x27;</span>)</span><br><span class="line">ipqs[abuser]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.recent_abuse&#x27;</span>)</span><br><span class="line">ipqs[robot]=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$RESPONSE</span>&quot;</span>|jq -r <span class="string">&#x27;.bot_status&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">check_ip_valide</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> IPPattern=<span class="string">&#x27;^(\&lt;([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\&gt;\.)&#123;3&#125;\&lt;([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\&gt;$&#x27;</span></span><br><span class="line">IP=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="keyword">for</span> special_ip <span class="keyword">in</span> <span class="variable">$&#123;special_ips[@]&#125;</span>;<span class="keyword">do</span></span><br><span class="line"><span class="built_in">local</span> ret=$(<span class="built_in">echo</span> <span class="variable">$IP</span>|grep <span class="variable">$special_ip</span>)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$ret</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$IP</span> =~ <span class="variable">$IPPattern</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">calc_ip_net</span></span>()&#123;</span><br><span class="line">sip=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">snetmask=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">check_ip_valide <span class="string">&quot;<span class="variable">$sip</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> ipFIELD1=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$sip</span>&quot;</span>|<span class="built_in">cut</span> -d. -f1)</span><br><span class="line"><span class="built_in">local</span> ipFIELD2=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$sip</span>&quot;</span>|<span class="built_in">cut</span> -d. -f2)</span><br><span class="line"><span class="built_in">local</span> ipFIELD3=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$sip</span>&quot;</span>|<span class="built_in">cut</span> -d. -f3)</span><br><span class="line"><span class="built_in">local</span> ipFIELD4=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$sip</span>&quot;</span>|<span class="built_in">cut</span> -d. -f4)</span><br><span class="line"><span class="built_in">local</span> netmaskFIELD1=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$snetmask</span>&quot;</span>|<span class="built_in">cut</span> -d. -f1)</span><br><span class="line"><span class="built_in">local</span> netmaskFIELD2=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$snetmask</span>&quot;</span>|<span class="built_in">cut</span> -d. -f2)</span><br><span class="line"><span class="built_in">local</span> netmaskFIELD3=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$snetmask</span>&quot;</span>|<span class="built_in">cut</span> -d. -f3)</span><br><span class="line"><span class="built_in">local</span> netmaskFIELD4=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$snetmask</span>&quot;</span>|<span class="built_in">cut</span> -d. -f4)</span><br><span class="line"><span class="built_in">local</span> tmpret1=$((ipFIELD1&amp;netmaskFIELD1))</span><br><span class="line"><span class="built_in">local</span> tmpret2=$((ipFIELD2&amp;netmaskFIELD2))</span><br><span class="line"><span class="built_in">local</span> tmpret3=$((ipFIELD3&amp;netmaskFIELD3))</span><br><span class="line"><span class="built_in">local</span> tmpret4=$((ipFIELD4&amp;netmaskFIELD4))</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$tmpret1</span>.<span class="variable">$tmpret2</span>.<span class="variable">$tmpret3</span>.<span class="variable">$tmpret4</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">Check_DNS_IP</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> != <span class="string">&quot;<span class="variable">$&#123;1#*[0-9].[0-9]&#125;</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="subst">$(calc_ip_net <span class="string">&quot;<span class="variable">$1</span>&quot;</span> 255.0.0.0)</span>&quot;</span> == <span class="string">&quot;10.0.0.0&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="subst">$(calc_ip_net <span class="string">&quot;<span class="variable">$1</span>&quot;</span> 255.240.0.0)</span>&quot;</span> == <span class="string">&quot;172.16.0.0&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="subst">$(calc_ip_net <span class="string">&quot;<span class="variable">$1</span>&quot;</span> 255.255.0.0)</span>&quot;</span> == <span class="string">&quot;169.254.0.0&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="subst">$(calc_ip_net <span class="string">&quot;<span class="variable">$1</span>&quot;</span> 255.255.0.0)</span>&quot;</span> == <span class="string">&quot;192.168.0.0&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="subst">$(calc_ip_net <span class="string">&quot;<span class="variable">$1</span>&quot;</span> 255.255.255.0)</span>&quot;</span> == <span class="string">&quot;<span class="subst">$(calc_ip_net <span class="string">&quot;<span class="variable">$2</span>&quot;</span> 255.255.255.0)</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> != <span class="string">&quot;<span class="variable">$&#123;1#*[0-9a-fA-F]:*&#125;</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;1:0:3&#125;</span>&quot;</span> == <span class="string">&quot;fe8&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$&#123;1:0:3&#125;</span>&quot;</span> == <span class="string">&quot;FE8&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$&#123;1:0:2&#125;</span>&quot;</span> == <span class="string">&quot;fc&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$&#123;1:0:2&#125;</span>&quot;</span> == <span class="string">&quot;FC&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$&#123;1:0:2&#125;</span>&quot;</span> == <span class="string">&quot;fd&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$&#123;1:0:2&#125;</span>&quot;</span> == <span class="string">&quot;FD&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$&#123;1:0:2&#125;</span>&quot;</span> == <span class="string">&quot;ff&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$&#123;1:0:2&#125;</span>&quot;</span> == <span class="string">&quot;FF&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">Check_DNS_1</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> resultdns=$(nslookup <span class="variable">$1</span>)</span><br><span class="line"><span class="built_in">local</span> resultinlines=(<span class="variable">$&#123;resultdns//$&#x27;\n&#x27;/ &#125;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;resultinlines[*]&#125;</span>;<span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$i</span> == <span class="string">&quot;Name:&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">local</span> resultdnsindex=$((resultindex+<span class="number">3</span>))</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> resultindex=$((resultindex+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> $(Check_DNS_IP <span class="variable">$&#123;resultinlines[$resultdnsindex]&#125;</span> <span class="variable">$&#123;resultinlines[1]&#125;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">Check_DNS_2</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> resultdnstext=$(dig <span class="variable">$1</span>|grep <span class="string">&quot;ANSWER:&quot;</span>)</span><br><span class="line"><span class="built_in">local</span> resultdnstext=<span class="variable">$&#123;resultdnstext#*&quot;ANSWER: &quot;&#125;</span></span><br><span class="line"><span class="built_in">local</span> resultdnstext=<span class="variable">$&#123;resultdnstext%&quot;, AUTHORITY:&quot;*&#125;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$resultdnstext</span>&quot;</span> == <span class="string">&quot;0&quot;</span> ]||[ <span class="string">&quot;<span class="variable">$resultdnstext</span>&quot;</span> == <span class="string">&quot;1&quot;</span> ]||[ <span class="string">&quot;<span class="variable">$resultdnstext</span>&quot;</span> == <span class="string">&quot;2&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">Check_DNS_3</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> resultdnstext=$(dig <span class="string">&quot;test$RANDOM<span class="variable">$RANDOM</span>.<span class="variable">$1</span>&quot;</span>|grep <span class="string">&quot;ANSWER:&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;test$RANDOM<span class="variable">$RANDOM</span>.<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">local</span> resultdnstext=<span class="variable">$&#123;resultdnstext#*&quot;ANSWER: &quot;&#125;</span></span><br><span class="line"><span class="built_in">local</span> resultdnstext=<span class="variable">$&#123;resultdnstext%&quot;, AUTHORITY:&quot;*&#125;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$resultdnstext</span>&quot;</span> == <span class="string">&quot;0&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">Get_Unlock_Type</span></span>()&#123;</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$#</span> -ne 0 ];<span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;0&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;smedia[dns]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;smedia[native]&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">MediaUnlockTest_TikTok</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[media]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>TikTok <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">7</span>-<span class="variable">$&#123;sinfo[lmedia]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">tiktok=()</span><br><span class="line"><span class="built_in">local</span> checkunlockurl=<span class="string">&quot;tiktok.com&quot;</span></span><br><span class="line"><span class="built_in">local</span> result1=$(Check_DNS_1 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result3=$(Check_DNS_3 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> resultunlocktype=$(Get_Unlock_Type <span class="variable">$result1</span> <span class="variable">$result3</span>)</span><br><span class="line"><span class="built_in">local</span> Ftmpresult=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> --user-agent <span class="string">&quot;<span class="variable">$UA_Browser</span>&quot;</span> -sL -m 10 <span class="string">&quot;https://www.tiktok.com/&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$Ftmpresult</span> == <span class="string">&quot;curl&quot;</span>* ]];<span class="keyword">then</span></span><br><span class="line">tiktok[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[no]&#125;</span>&quot;</span></span><br><span class="line">tiktok[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">tiktok[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> FRegion=$(<span class="built_in">echo</span> <span class="variable">$Ftmpresult</span>|grep <span class="string">&#x27;&quot;region&quot;:&#x27;</span>|sed <span class="string">&#x27;s/.*&quot;region&quot;//&#x27;</span>|<span class="built_in">cut</span> -f2 -d<span class="string">&#x27;&quot;&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$FRegion</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">tiktok[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[yes]&#125;</span>&quot;</span></span><br><span class="line">tiktok[uregion]=<span class="string">&quot;  [<span class="variable">$FRegion</span>]   &quot;</span></span><br><span class="line">tiktok[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> STmpresult=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> --user-agent <span class="string">&quot;<span class="variable">$UA_Browser</span>&quot;</span> -sL -m 10 -H <span class="string">&quot;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span> -H <span class="string">&quot;Accept-Encoding: gzip&quot;</span> -H <span class="string">&quot;Accept-Language: en&quot;</span> <span class="string">&quot;https://www.tiktok.com&quot;</span>|gunzip 2&gt;/dev/null)</span><br><span class="line"><span class="built_in">local</span> SRegion=$(<span class="built_in">echo</span> <span class="variable">$STmpresult</span>|grep <span class="string">&#x27;&quot;region&quot;:&#x27;</span>|sed <span class="string">&#x27;s/.*&quot;region&quot;//&#x27;</span>|<span class="built_in">cut</span> -f2 -d<span class="string">&#x27;&quot;&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$SRegion</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">tiktok[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[idc]&#125;</span>&quot;</span></span><br><span class="line">tiktok[uregion]=<span class="string">&quot;  [<span class="variable">$SRegion</span>]   &quot;</span></span><br><span class="line">tiktok[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tiktok[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">tiktok[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">tiktok[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">MediaUnlockTest_DisneyPlus</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[media]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>Disney+ <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">8</span>-<span class="variable">$&#123;sinfo[lmedia]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">disney=()</span><br><span class="line"><span class="built_in">local</span> checkunlockurl=<span class="string">&quot;disneyplus.com&quot;</span></span><br><span class="line"><span class="built_in">local</span> result1=$(Check_DNS_1 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result2=$(Check_DNS_2 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result3=$(Check_DNS_3 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> resultunlocktype=$(Get_Unlock_Type <span class="variable">$result1</span> <span class="variable">$result2</span> <span class="variable">$result3</span>)</span><br><span class="line"><span class="built_in">local</span> PreAssertion=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> --user-agent <span class="string">&quot;<span class="variable">$UA_Browser</span>&quot;</span> -s --max-time 10 -X POST <span class="string">&quot;https://disney.api.edge.bamgrid.com/devices&quot;</span> -H <span class="string">&quot;authorization: Bearer ZGlzbmV5JmJyb3dzZXImMS4wLjA.Cu56AgSfBTDag5NiRA81oLHkDZfu5L3CKadnefEAY84&quot;</span> -H <span class="string">&quot;content-type: application/json; charset=UTF-8&quot;</span> -d <span class="string">&#x27;&#123;&quot;deviceFamily&quot;:&quot;browser&quot;,&quot;applicationRuntime&quot;:&quot;chrome&quot;,&quot;deviceProfile&quot;:&quot;windows&quot;,&quot;attributes&quot;:&#123;&#125;&#125;&#x27;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$PreAssertion</span> == <span class="string">&quot;curl&quot;</span>* ]]&amp;&amp;[[ <span class="variable">$1</span> == <span class="string">&quot;6&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">disney[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">disney[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">disney[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$PreAssertion</span> == <span class="string">&quot;curl&quot;</span>* ]];<span class="keyword">then</span></span><br><span class="line">disney[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">disney[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">disney[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> ! (<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$PreAssertion</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1&amp;&amp;<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$TokenContent</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1);<span class="keyword">then</span></span><br><span class="line">disney[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">disney[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">disney[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> assertion=$(<span class="built_in">echo</span> <span class="variable">$PreAssertion</span>|jq -r <span class="string">&#x27;.assertion&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> PreDisneyCookie=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$Media_Cookie</span>&quot;</span>|sed -n <span class="string">&#x27;1p&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> disneycookie=$(<span class="built_in">echo</span> <span class="variable">$PreDisneyCookie</span>|sed <span class="string">&quot;s/DISNEYASSERTION/<span class="variable">$assertion</span>/g&quot;</span>)</span><br><span class="line"><span class="built_in">local</span> TokenContent=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> --user-agent <span class="string">&quot;<span class="variable">$UA_Browser</span>&quot;</span> -s --max-time 10 -X POST <span class="string">&quot;https://disney.api.edge.bamgrid.com/token&quot;</span> -H <span class="string">&quot;authorization: Bearer ZGlzbmV5JmJyb3dzZXImMS4wLjA.Cu56AgSfBTDag5NiRA81oLHkDZfu5L3CKadnefEAY84&quot;</span> -d <span class="string">&quot;<span class="variable">$disneycookie</span>&quot;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="built_in">local</span> isBanned=$(<span class="built_in">echo</span> <span class="variable">$TokenContent</span>|jq -r <span class="string">&#x27;select(.error_description == &quot;forbidden-location&quot;) | .error_description&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> is403=$(<span class="built_in">echo</span> <span class="variable">$TokenContent</span>|grep <span class="string">&#x27;403 ERROR&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$isBanned</span>&quot;</span> ]||[ -n <span class="string">&quot;<span class="variable">$is403</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">disney[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[no]&#125;</span>&quot;</span></span><br><span class="line">disney[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">disney[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> fakecontent=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$Media_Cookie</span>&quot;</span>|sed -n <span class="string">&#x27;8p&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> refreshToken=$(<span class="built_in">echo</span> <span class="variable">$TokenContent</span>|jq -r <span class="string">&#x27;.refresh_token&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> disneycontent=$(<span class="built_in">echo</span> <span class="variable">$fakecontent</span>|sed <span class="string">&quot;s/ILOVEDISNEY/<span class="variable">$refreshToken</span>/g&quot;</span>)</span><br><span class="line"><span class="built_in">local</span> tmpresult=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> --user-agent <span class="string">&quot;<span class="variable">$UA_Browser</span>&quot;</span> -X POST -sSL --max-time 10 <span class="string">&quot;https://disney.api.edge.bamgrid.com/graph/v1/device/graphql&quot;</span> -H <span class="string">&quot;authorization: ZGlzbmV5JmJyb3dzZXImMS4wLjA.Cu56AgSfBTDag5NiRA81oLHkDZfu5L3CKadnefEAY84&quot;</span> -d <span class="string">&quot;<span class="variable">$disneycontent</span>&quot;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="keyword">if</span> ! (<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$tmpresult</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1);<span class="keyword">then</span></span><br><span class="line">disney[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">disney[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">disney[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> previewcheck=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> -s -o /dev/null -L --max-time 10 -w <span class="string">&#x27;%&#123;url_effective&#125;\n&#x27;</span> <span class="string">&quot;https://disneyplus.com&quot;</span>|grep preview)</span><br><span class="line"><span class="built_in">local</span> isUnabailable=$(<span class="built_in">echo</span> <span class="variable">$previewcheck</span>|grep <span class="string">&#x27;unavailable&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> region=$(<span class="built_in">echo</span> <span class="variable">$tmpresult</span>|jq -r <span class="string">&#x27;.extensions.sdk.session.location.countryCode&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> inSupportedLocation=$(<span class="built_in">echo</span> <span class="variable">$tmpresult</span>|jq -r <span class="string">&#x27;.extensions.sdk.session.inSupportedLocation&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$region</span> == <span class="string">&quot;JP&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">disney[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[yes]&#125;</span>&quot;</span></span><br><span class="line">disney[uregion]=<span class="string">&quot;  [JP]   &quot;</span></span><br><span class="line">disney[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ -n <span class="string">&quot;<span class="variable">$region</span>&quot;</span> ]&amp;&amp;[[ <span class="variable">$inSupportedLocation</span> == <span class="string">&quot;false&quot;</span> ]]&amp;&amp;[ -z <span class="string">&quot;<span class="variable">$isUnabailable</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">disney[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[pending]&#125;</span>&quot;</span></span><br><span class="line">disney[uregion]=<span class="string">&quot;  [<span class="variable">$region</span>]   &quot;</span></span><br><span class="line">disney[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ -n <span class="string">&quot;<span class="variable">$region</span>&quot;</span> ]&amp;&amp;[ -n <span class="string">&quot;<span class="variable">$isUnavailable</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">disney[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[no]&#125;</span>&quot;</span></span><br><span class="line">disney[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">disney[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ -n <span class="string">&quot;<span class="variable">$region</span>&quot;</span> ]&amp;&amp;[[ <span class="variable">$inSupportedLocation</span> == <span class="string">&quot;true&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">disney[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[yes]&#125;</span>&quot;</span></span><br><span class="line">disney[uregion]=<span class="string">&quot;  [<span class="variable">$region</span>]   &quot;</span></span><br><span class="line">disney[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ -z <span class="string">&quot;<span class="variable">$region</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">disney[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[no]&#125;</span>&quot;</span></span><br><span class="line">disney[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">disney[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">disney[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">disney[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">disney[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">MediaUnlockTest_Netflix</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[media]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>Netflix <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">8</span>-<span class="variable">$&#123;sinfo[lmedia]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">netflix=()</span><br><span class="line"><span class="built_in">local</span> checkunlockurl=<span class="string">&quot;netflix.com&quot;</span></span><br><span class="line"><span class="built_in">local</span> result1=$(Check_DNS_1 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result2=$(Check_DNS_2 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result3=$(Check_DNS_3 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> resultunlocktype=$(Get_Unlock_Type <span class="variable">$result1</span> <span class="variable">$result2</span> <span class="variable">$result3</span>)</span><br><span class="line"><span class="built_in">local</span> result1=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> --user-agent <span class="string">&quot;<span class="variable">$UA_Browser</span>&quot;</span> -fsLI -X GET --write-out %&#123;http_code&#125; --output /dev/null --max-time 10 --tlsv1.3 <span class="string">&quot;https://www.netflix.com/title/81280792&quot;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="built_in">local</span> result2=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> --user-agent <span class="string">&quot;<span class="variable">$UA_Browser</span>&quot;</span> -fsLI -X GET --write-out %&#123;http_code&#125; --output /dev/null --max-time 10 --tlsv1.3 <span class="string">&quot;https://www.netflix.com/title/70143836&quot;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="built_in">local</span> regiontmp=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> --user-agent <span class="string">&quot;<span class="variable">$UA_Browser</span>&quot;</span> -fSsI -X GET --max-time 10 --write-out %&#123;redirect_url&#125; --output /dev/null --tlsv1.3 <span class="string">&quot;https://www.netflix.com/login&quot;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$regiontmp</span> == <span class="string">&quot;curl&quot;</span>* ]];<span class="keyword">then</span></span><br><span class="line">netflix[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">netflix[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">netflix[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> region=$(<span class="built_in">echo</span> <span class="variable">$regiontmp</span>|<span class="built_in">cut</span> -d <span class="string">&#x27;/&#x27;</span> -f4|<span class="built_in">cut</span> -d <span class="string">&#x27;-&#x27;</span> -f1|<span class="built_in">tr</span> [:lower:] [:upper:])</span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$region</span> ]];<span class="keyword">then</span></span><br><span class="line">region=<span class="string">&quot;US&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$result1</span> == <span class="string">&quot;404&quot;</span> ]]&amp;&amp;[[ <span class="variable">$result2</span> == <span class="string">&quot;404&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">netflix[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[org]&#125;</span>&quot;</span></span><br><span class="line">netflix[uregion]=<span class="string">&quot;  [<span class="variable">$region</span>]   &quot;</span></span><br><span class="line">netflix[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$result1</span> == <span class="string">&quot;403&quot;</span> ]]&amp;&amp;[[ <span class="variable">$result2</span> == <span class="string">&quot;403&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">netflix[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[no]&#125;</span>&quot;</span></span><br><span class="line">netflix[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">netflix[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$result1</span> == <span class="string">&quot;200&quot;</span> ]]||[[ <span class="variable">$result2</span> == <span class="string">&quot;200&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">netflix[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[yes]&#125;</span>&quot;</span></span><br><span class="line">netflix[uregion]=<span class="string">&quot;  [<span class="variable">$region</span>]   &quot;</span></span><br><span class="line">netflix[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$result1</span> == <span class="string">&quot;000&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">netflix[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">netflix[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">netflix[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">netflix[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">netflix[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">netflix[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">MediaUnlockTest_YouTube_Premium</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[media]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>Youtube <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">8</span>-<span class="variable">$&#123;sinfo[lmedia]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">youtube=()</span><br><span class="line"><span class="built_in">local</span> checkunlockurl=<span class="string">&quot;www.youtube.com&quot;</span></span><br><span class="line"><span class="built_in">local</span> result1=$(Check_DNS_1 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result3=$(Check_DNS_3 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> resultunlocktype=$(Get_Unlock_Type <span class="variable">$result1</span> <span class="variable">$result3</span>)</span><br><span class="line"><span class="built_in">local</span> tmpresult=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> --max-time 10 -sSL -H <span class="string">&quot;Accept-Language: en&quot;</span> -b <span class="string">&quot;YSC=BiCUU3-5Gdk; CONSENT=YES+cb.20220301-11-p0.en+FX+700; GPS=1; VISITOR_INFO1_LIVE=4VwPMkB7W5A; PREF=tz=Asia.Shanghai; _gcl_au=1.1.1809531354.1646633279&quot;</span> <span class="string">&quot;https://www.youtube.com/premium&quot;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$tmpresult</span> == <span class="string">&quot;curl&quot;</span>* ]];<span class="keyword">then</span></span><br><span class="line">youtube[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">youtube[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">youtube[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> isCN=$(<span class="built_in">echo</span> <span class="variable">$tmpresult</span>|grep <span class="string">&#x27;www.google.cn&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$isCN</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">youtube[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[cn]&#125;</span>&quot;</span></span><br><span class="line">youtube[uregion]=<span class="string">&quot;  <span class="variable">$Font_Red</span>[CN]<span class="variable">$Font_Green</span>   &quot;</span></span><br><span class="line">youtube[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> isNotAvailable=$(<span class="built_in">echo</span> <span class="variable">$tmpresult</span>|grep <span class="string">&#x27;Premium is not available in your country&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> region=$(<span class="built_in">echo</span> <span class="variable">$tmpresult</span>|sed -n <span class="string">&#x27;s/.*&quot;contentRegion&quot;:&quot;\([^&quot;]*\)&quot;.*/\1/p&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> isAvailable=$(<span class="built_in">echo</span> <span class="variable">$tmpresult</span>|grep <span class="string">&#x27;ad-free&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$isNotAvailable</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">youtube[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[noprem]&#125;</span>&quot;</span></span><br><span class="line">youtube[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">youtube[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ -n <span class="string">&quot;<span class="variable">$isAvailable</span>&quot;</span> ]&amp;&amp;[ -n <span class="string">&quot;<span class="variable">$region</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">youtube[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[yes]&#125;</span>&quot;</span></span><br><span class="line">youtube[uregion]=<span class="string">&quot;  [<span class="variable">$region</span>]   &quot;</span></span><br><span class="line">youtube[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ -z <span class="string">&quot;<span class="variable">$region</span>&quot;</span> ]&amp;&amp;[ -n <span class="string">&quot;<span class="variable">$isAvailable</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">youtube[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[yes]&#125;</span>&quot;</span></span><br><span class="line">youtube[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">youtube[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">youtube[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">youtube[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">youtube[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">MediaUnlockTest_PrimeVideo_Region</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[media]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>Amazon <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">7</span>-<span class="variable">$&#123;sinfo[lmedia]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">amazon=()</span><br><span class="line"><span class="built_in">local</span> checkunlockurl=<span class="string">&quot;www.primevideo.com&quot;</span></span><br><span class="line"><span class="built_in">local</span> result1=$(Check_DNS_1 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result3=$(Check_DNS_3 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> resultunlocktype=$(Get_Unlock_Type <span class="variable">$result1</span> <span class="variable">$result3</span>)</span><br><span class="line"><span class="built_in">local</span> tmpresult=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> --user-agent <span class="string">&quot;<span class="variable">$UA_Browser</span>&quot;</span> -sL --max-time 10 <span class="string">&quot;https://www.primevideo.com&quot;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$tmpresult</span> == <span class="string">&quot;curl&quot;</span>* ]];<span class="keyword">then</span></span><br><span class="line">amazon[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">amazon[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">amazon[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> result=$(<span class="built_in">echo</span> <span class="variable">$tmpresult</span>|grep <span class="string">&#x27;&quot;currentTerritory&quot;:&#x27;</span>|sed <span class="string">&#x27;s/.*currentTerritory//&#x27;</span>|<span class="built_in">cut</span> -f3 -d<span class="string">&#x27;&quot;&#x27;</span>|<span class="built_in">head</span> -n 1)</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$result</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">amazon[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[yes]&#125;</span>&quot;</span></span><br><span class="line">amazon[uregion]=<span class="string">&quot;  [<span class="variable">$result</span>]   &quot;</span></span><br><span class="line">amazon[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">amazon[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[no]&#125;</span>&quot;</span></span><br><span class="line">amazon[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">amazon[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">MediaUnlockTest_Spotify</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[media]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>Spotify <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">8</span>-<span class="variable">$&#123;sinfo[lmedia]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">spotify=()</span><br><span class="line"><span class="built_in">local</span> checkunlockurl=<span class="string">&quot;spclient.wg.spotify.com&quot;</span></span><br><span class="line"><span class="built_in">local</span> result1=$(Check_DNS_1 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result3=$(Check_DNS_3 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> resultunlocktype=$(Get_Unlock_Type <span class="variable">$result1</span> <span class="variable">$result3</span>)</span><br><span class="line"><span class="built_in">local</span> tmpresult=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> --user-agent <span class="string">&quot;<span class="variable">$UA_Browser</span>&quot;</span> -s --max-time 10 -X POST <span class="string">&quot;https://spclient.wg.spotify.com/signup/public/v1/account&quot;</span> -d <span class="string">&quot;birth_day=11&amp;birth_month=11&amp;birth_year=2000&amp;collect_personal_info=undefined&amp;creation_flow=&amp;creation_point=https%3A%2F%2Fwww.spotify.com%2Fhk-en%2F&amp;displayname=Gay%20Lord&amp;gender=male&amp;iagree=1&amp;key=a1e486e2729f46d6bb368d6b2bcda326&amp;platform=www&amp;referrer=&amp;send-email=0&amp;thirdpartyemail=0&amp;identifier_token=AgE6YTvEzkReHNfJpO114514&quot;</span> -H <span class="string">&quot;Accept-Language: en&quot;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$tmpresult</span>&quot;</span>|jq . &gt;/dev/null 2&gt;&amp;1;<span class="keyword">then</span></span><br><span class="line"><span class="built_in">local</span> region=$(<span class="built_in">echo</span> <span class="variable">$tmpresult</span>|jq -r <span class="string">&#x27;.country&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> isLaunched=$(<span class="built_in">echo</span> <span class="variable">$tmpresult</span>|jq -r <span class="string">&#x27;.is_country_launched&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> StatusCode=$(<span class="built_in">echo</span> <span class="variable">$tmpresult</span>|jq -r <span class="string">&#x27;.status&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$tmpresult</span>&quot;</span> = <span class="string">&quot;000&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">spotify[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">spotify[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">spotify[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$StatusCode</span>&quot;</span> = <span class="string">&quot;320&quot;</span> ]||[ <span class="string">&quot;<span class="variable">$StatusCode</span>&quot;</span> = <span class="string">&quot;120&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">spotify[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[no]&#125;</span>&quot;</span></span><br><span class="line">spotify[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">spotify[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$StatusCode</span>&quot;</span> = <span class="string">&quot;311&quot;</span> ]&amp;&amp;[ <span class="string">&quot;<span class="variable">$isLaunched</span>&quot;</span> = <span class="string">&quot;true&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">spotify[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[yes]&#125;</span>&quot;</span></span><br><span class="line">spotify[uregion]=<span class="string">&quot;  [<span class="variable">$region</span>]   &quot;</span></span><br><span class="line">spotify[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">spotify[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">spotify[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">spotify[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">spotify[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">spotify[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">spotify[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">OpenAITest</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[ai]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>ChatGPT <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">8</span>-<span class="variable">$&#123;sinfo[lai]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">chatgpt=()</span><br><span class="line"><span class="built_in">local</span> checkunlockurl=<span class="string">&quot;chat.openai.com&quot;</span></span><br><span class="line"><span class="built_in">local</span> result1=$(Check_DNS_1 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result2=$(Check_DNS_2 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result3=$(Check_DNS_3 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> checkunlockurl=<span class="string">&quot;ios.chat.openai.com&quot;</span></span><br><span class="line"><span class="built_in">local</span> result4=$(Check_DNS_1 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result5=$(Check_DNS_2 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result6=$(Check_DNS_3 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> checkunlockurl=<span class="string">&quot;api.openai.com&quot;</span></span><br><span class="line"><span class="built_in">local</span> result7=$(Check_DNS_1 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> result8=$(Check_DNS_3 <span class="variable">$checkunlockurl</span>)</span><br><span class="line"><span class="built_in">local</span> resultunlocktype=$(Get_Unlock_Type <span class="variable">$result1</span> <span class="variable">$result2</span> <span class="variable">$result3</span> <span class="variable">$result4</span> <span class="variable">$result5</span> <span class="variable">$result6</span> <span class="variable">$result7</span> <span class="variable">$result8</span>)</span><br><span class="line"><span class="built_in">local</span> tmpresult1=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> -sS --max-time 10 <span class="string">&#x27;https://api.openai.com/compliance/cookie_requirements&#x27;</span> -H <span class="string">&#x27;authority: api.openai.com&#x27;</span> -H <span class="string">&#x27;accept: */*&#x27;</span> -H <span class="string">&#x27;accept-language: zh-CN,zh;q=0.9&#x27;</span> -H <span class="string">&#x27;authorization: Bearer null&#x27;</span> -H <span class="string">&#x27;content-type: application/json&#x27;</span> -H <span class="string">&#x27;origin: https://platform.openai.com&#x27;</span> -H <span class="string">&#x27;referer: https://platform.openai.com/&#x27;</span> -H <span class="string">&#x27;sec-ch-ua: &quot;Microsoft Edge&quot;;v=&quot;119&quot;, &quot;Chromium&quot;;v=&quot;119&quot;, &quot;Not?A_Brand&quot;;v=&quot;24&quot;&#x27;</span> -H <span class="string">&#x27;sec-ch-ua-mobile: ?0&#x27;</span> -H <span class="string">&#x27;sec-ch-ua-platform: &quot;Windows&quot;&#x27;</span> -H <span class="string">&#x27;sec-fetch-dest: empty&#x27;</span> -H <span class="string">&#x27;sec-fetch-mode: cors&#x27;</span> -H <span class="string">&#x27;sec-fetch-site: same-site&#x27;</span> -H <span class="string">&#x27;user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0&#x27;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="built_in">local</span> tmpresult2=$(curl <span class="variable">$CurlARG</span> -<span class="variable">$1</span> -sS --max-time 10 <span class="string">&#x27;https://ios.chat.openai.com/&#x27;</span> -H <span class="string">&#x27;authority: ios.chat.openai.com&#x27;</span> -H <span class="string">&#x27;accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&#x27;</span> -H <span class="string">&#x27;accept-language: zh-CN,zh;q=0.9&#x27;</span> -H <span class="string">&#x27;sec-ch-ua: &quot;Microsoft Edge&quot;;v=&quot;119&quot;, &quot;Chromium&quot;;v=&quot;119&quot;, &quot;Not?A_Brand&quot;;v=&quot;24&quot;&#x27;</span> -H <span class="string">&#x27;sec-ch-ua-mobile: ?0&#x27;</span> -H <span class="string">&#x27;sec-ch-ua-platform: &quot;Windows&quot;&#x27;</span> -H <span class="string">&#x27;sec-fetch-dest: document&#x27;</span> -H <span class="string">&#x27;sec-fetch-mode: navigate&#x27;</span> -H <span class="string">&#x27;sec-fetch-site: none&#x27;</span> -H <span class="string">&#x27;sec-fetch-user: ?1&#x27;</span> -H <span class="string">&#x27;upgrade-insecure-requests: 1&#x27;</span> -H <span class="string">&#x27;user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0&#x27;</span> 2&gt;&amp;1)</span><br><span class="line"><span class="built_in">local</span> result1=$(<span class="built_in">echo</span> <span class="variable">$tmpresult1</span>|grep unsupported_country)</span><br><span class="line"><span class="built_in">local</span> result2=$(<span class="built_in">echo</span> <span class="variable">$tmpresult2</span>|grep VPN)</span><br><span class="line"><span class="built_in">local</span> countryCode=<span class="string">&quot;<span class="subst">$(curl $CurlARG --max-time 10 -sS https://chat.openai.com/cdn-cgi/trace 2&gt;&amp;1|grep <span class="string">&quot;loc=&quot;</span>|awk -F= &#x27;&#123;print $2&#125;&#x27;)</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$result2</span>&quot;</span> ]&amp;&amp;[ -z <span class="string">&quot;<span class="variable">$result1</span>&quot;</span> ]&amp;&amp;[[ <span class="variable">$tmpresult1</span> != <span class="string">&quot;curl&quot;</span>* ]]&amp;&amp;[[ <span class="variable">$tmpresult2</span> != <span class="string">&quot;curl&quot;</span>* ]];<span class="keyword">then</span></span><br><span class="line">chatgpt[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[yes]&#125;</span>&quot;</span></span><br><span class="line">chatgpt[uregion]=<span class="string">&quot;  [<span class="variable">$countryCode</span>]   &quot;</span></span><br><span class="line">chatgpt[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ -n <span class="string">&quot;<span class="variable">$result2</span>&quot;</span> ]&amp;&amp;[ -n <span class="string">&quot;<span class="variable">$result1</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">chatgpt[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[no]&#125;</span>&quot;</span></span><br><span class="line">chatgpt[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">chatgpt[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ -z <span class="string">&quot;<span class="variable">$result1</span>&quot;</span> ]&amp;&amp;[ -n <span class="string">&quot;<span class="variable">$result2</span>&quot;</span> ]&amp;&amp;[[ <span class="variable">$tmpresult1</span> != <span class="string">&quot;curl&quot;</span>* ]];<span class="keyword">then</span></span><br><span class="line">chatgpt[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[web]&#125;</span>&quot;</span></span><br><span class="line">chatgpt[uregion]=<span class="string">&quot;  [<span class="variable">$countryCode</span>]   &quot;</span></span><br><span class="line">chatgpt[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [ -n <span class="string">&quot;<span class="variable">$result1</span>&quot;</span> ]&amp;&amp;[ -z <span class="string">&quot;<span class="variable">$result2</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">chatgpt[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[app]&#125;</span>&quot;</span></span><br><span class="line">chatgpt[uregion]=<span class="string">&quot;  [<span class="variable">$countryCode</span>]   &quot;</span></span><br><span class="line">chatgpt[utype]=<span class="string">&quot;<span class="variable">$resultunlocktype</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$tmpresult1</span> == <span class="string">&quot;curl&quot;</span>* ]]&amp;&amp;[ -n <span class="string">&quot;<span class="variable">$result2</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">chatgpt[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[no]&#125;</span>&quot;</span></span><br><span class="line">chatgpt[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">chatgpt[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">chatgpt[ustatus]=<span class="string">&quot;<span class="variable">$&#123;smedia[bad]&#125;</span>&quot;</span></span><br><span class="line">chatgpt[uregion]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line">chatgpt[utype]=<span class="string">&quot;<span class="variable">$&#123;smedia[nodata]&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">check_local_port_25</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> host=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">local</span> port=<span class="variable">$2</span></span><br><span class="line">nc -z -w5 <span class="variable">$host</span> <span class="variable">$port</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">smail[<span class="built_in">local</span>]=1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">smail[<span class="built_in">local</span>]=0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">get_sorted_mx_records</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> domain=<span class="variable">$1</span></span><br><span class="line">dig +short MX <span class="variable">$domain</span>|<span class="built_in">sort</span> -n|<span class="built_in">head</span> -1|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">check_email_service</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> service=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">local</span> port=25</span><br><span class="line"><span class="built_in">local</span> expected_response=<span class="string">&quot;220&quot;</span></span><br><span class="line"><span class="built_in">local</span> domain=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">local</span> host=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">local</span> response=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">local</span> success=<span class="string">&quot;false&quot;</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$service</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;Gmail&quot;</span>)domain=<span class="string">&quot;gmail.com&quot;</span>;;</span><br><span class="line"><span class="string">&quot;Outlook&quot;</span>)domain=<span class="string">&quot;outlook.com&quot;</span>;;</span><br><span class="line"><span class="string">&quot;Yahoo&quot;</span>)domain=<span class="string">&quot;yahoo.com&quot;</span>;;</span><br><span class="line"><span class="string">&quot;Apple&quot;</span>)domain=<span class="string">&quot;me.com&quot;</span>;;</span><br><span class="line"><span class="string">&quot;QQ&quot;</span>)domain=<span class="string">&quot;qq.com&quot;</span>;;</span><br><span class="line"><span class="string">&quot;MailRU&quot;</span>)domain=<span class="string">&quot;mail.ru&quot;</span>;;</span><br><span class="line"><span class="string">&quot;AOL&quot;</span>)domain=<span class="string">&quot;aol.com&quot;</span>;;</span><br><span class="line"><span class="string">&quot;GMX&quot;</span>)domain=<span class="string">&quot;gmx.com&quot;</span>;;</span><br><span class="line"><span class="string">&quot;MailCOM&quot;</span>)domain=<span class="string">&quot;mail.com&quot;</span>;;</span><br><span class="line"><span class="string">&quot;163&quot;</span>)domain=<span class="string">&quot;163.com&quot;</span>;;</span><br><span class="line"><span class="string">&quot;Sohu&quot;</span>)domain=<span class="string">&quot;sohu.com&quot;</span>;;</span><br><span class="line"><span class="string">&quot;Sina&quot;</span>)domain=<span class="string">&quot;sina.com&quot;</span>;;</span><br><span class="line">*)<span class="built_in">return</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$host</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">local</span> mx_hosts=($(get_sorted_mx_records <span class="variable">$domain</span>))</span><br><span class="line"><span class="keyword">for</span> host <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;mx_hosts[@]&#125;</span>&quot;</span>;<span class="keyword">do</span></span><br><span class="line">response=$(<span class="built_in">timeout</span> 4 bash -c <span class="string">&quot;echo -e &#x27;QUIT\r\n&#x27; | nc -w4 <span class="variable">$host</span> <span class="variable">$port</span> 2&gt;&amp;1&quot;</span>)</span><br><span class="line">smail_response[<span class="variable">$service</span>]=<span class="variable">$response</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$response</span> == *<span class="string">&quot;<span class="variable">$expected_response</span>&quot;</span>* ]];<span class="keyword">then</span></span><br><span class="line">success=<span class="string">&quot;true&quot;</span></span><br><span class="line">smail[<span class="variable">$service</span>]=<span class="string">&quot;$Back_Green$Font_White$Font_B$service<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">response=$(<span class="built_in">timeout</span> 4 bash -c <span class="string">&quot;echo -e &#x27;QUIT\r\n&#x27; | nc -w4 <span class="variable">$host</span> <span class="variable">$port</span> 2&gt;&amp;1&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$response</span> == *<span class="string">&quot;<span class="variable">$expected_response</span>&quot;</span>* ]];<span class="keyword">then</span></span><br><span class="line">success=<span class="string">&quot;true&quot;</span></span><br><span class="line">smail[<span class="variable">$service</span>]=<span class="string">&quot;$Back_Green$Font_White$Font_B$service<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$success</span> == <span class="string">&quot;false&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">smail[<span class="variable">$service</span>]=<span class="string">&quot;$Back_Red$Font_White$Font_B$service<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">check_mail</span></span>()&#123;</span><br><span class="line">check_local_port_25 <span class="string">&quot;localhost&quot;</span> 25</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;smail[local]&#125;</span> -eq 1 ];<span class="keyword">then</span></span><br><span class="line">services=(<span class="string">&quot;Gmail&quot;</span> <span class="string">&quot;Outlook&quot;</span> <span class="string">&quot;Yahoo&quot;</span> <span class="string">&quot;Apple&quot;</span> <span class="string">&quot;QQ&quot;</span> <span class="string">&quot;MailRU&quot;</span> <span class="string">&quot;AOL&quot;</span> <span class="string">&quot;GMX&quot;</span> <span class="string">&quot;MailCOM&quot;</span> <span class="string">&quot;163&quot;</span> <span class="string">&quot;Sohu&quot;</span> <span class="string">&quot;Sina&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> service <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;services[@]&#125;</span>&quot;</span>;<span class="keyword">do</span></span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[mail]&#125;</span>$Font_I<span class="variable">$service</span> <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step+=<span class="number">3</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">1</span>-<span class="variable">$&#123;#service&#125;</span>-<span class="variable">$&#123;sinfo[lmail]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line">check_email_service <span class="variable">$service</span></span><br><span class="line">kill_progress_bar</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">check_dnsbl_parallel</span></span>()&#123;</span><br><span class="line">ip_to_check=<span class="variable">$1</span></span><br><span class="line">parallel_jobs=<span class="variable">$2</span></span><br><span class="line">smail[t]=0</span><br><span class="line">smail[c]=0</span><br><span class="line">smail[m]=0</span><br><span class="line">smail[b]=0</span><br><span class="line">reversed_ip=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip_to_check</span>&quot;</span>|awk -F. <span class="string">&#x27;&#123;print $4&quot;.&quot;$3&quot;.&quot;$2&quot;.&quot;$1&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> total=0</span><br><span class="line"><span class="built_in">local</span> clean=0</span><br><span class="line"><span class="built_in">local</span> blacklisted=0</span><br><span class="line"><span class="built_in">local</span> other=0</span><br><span class="line">curl <span class="variable">$CurlARG</span> -s <span class="string">&quot;https://raw.githubusercontent.com/xykt/IPQuality/main/ref/dnsbl.list&quot;</span>|<span class="built_in">sort</span> -u|xargs -P <span class="string">&quot;<span class="variable">$parallel_jobs</span>&quot;</span> -I &#123;&#125; bash -c <span class="string">&quot;result=\$(dig +short \&quot;<span class="variable">$reversed_ip</span>.&#123;&#125;\&quot; A); if [[ -z \&quot;\$result\&quot; ]]; then echo &#x27;Clean&#x27;; elif [[ \&quot;\$result\&quot; == &#x27;127.0.0.2&#x27; ]]; then echo &#x27;Blacklisted&#x27;; else echo &#x27;Other&#x27;; fi&quot;</span>|&#123;</span><br><span class="line"><span class="keyword">while</span> IFS= <span class="built_in">read</span> -r line;<span class="keyword">do</span></span><br><span class="line">((total++))</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$line</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;Clean&quot;</span>)((clean++));;</span><br><span class="line"><span class="string">&quot;Blacklisted&quot;</span>)((blacklisted++));;</span><br><span class="line">*)((other++))</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">smail[t]=<span class="string">&quot;<span class="variable">$total</span>&quot;</span></span><br><span class="line">smail[c]=<span class="string">&quot;<span class="variable">$clean</span>&quot;</span></span><br><span class="line">smail[m]=<span class="string">&quot;<span class="variable">$other</span>&quot;</span></span><br><span class="line">smail[b]=<span class="string">&quot;<span class="variable">$blacklisted</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;$Font_Cyan<span class="variable">$&#123;smail[dnsbl]&#125;</span>  <span class="variable">$&#123;smail[available]&#125;</span><span class="variable">$&#123;smail[t]&#125;</span>   <span class="variable">$&#123;smail[clean]&#125;</span><span class="variable">$&#123;smail[c]&#125;</span>   <span class="variable">$&#123;smail[marked]&#125;</span><span class="variable">$&#123;smail[m]&#125;</span>   <span class="variable">$&#123;smail[blacklisted]&#125;</span><span class="variable">$&#123;smail[b]&#125;</span><span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">check_dnsbl</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> temp_info=<span class="string">&quot;$Font_Cyan$Font_B<span class="variable">$&#123;sinfo[dnsbl]&#125;</span> <span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line">((ibar_step=<span class="number">95</span>))</span><br><span class="line">show_progress_bar <span class="string">&quot;<span class="variable">$temp_info</span>&quot;</span> $((<span class="number">40</span>-<span class="number">1</span>-<span class="variable">$&#123;sinfo[ldnsbl]&#125;</span>))&amp;</span><br><span class="line">bar_pid=<span class="string">&quot;$!&quot;</span>&amp;&amp;<span class="built_in">disown</span> <span class="string">&quot;<span class="variable">$bar_pid</span>&quot;</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;kill_progress_bar&quot;</span> RETURN</span><br><span class="line">smail[sdnsbl]=$(check_dnsbl_parallel <span class="string">&quot;<span class="variable">$IP</span>&quot;</span> 50)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">show_head</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="subst">$(printf &#x27;%72s&#x27;|tr &#x27; &#x27; &#x27;#&#x27;)</span>\n&quot;</span></span><br><span class="line">calc_padding <span class="string">&quot;<span class="subst">$(printf &#x27;%*s&#x27; <span class="string">&quot;<span class="variable">$&#123;shead[ltitle]&#125;</span>&quot;</span> &#x27;&#x27;)</span><span class="variable">$IPhide</span>&quot;</span> 72</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$PADDING$Font_B<span class="variable">$&#123;shead[title]&#125;</span>$Font_Cyan$IPhide<span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line">calc_padding <span class="string">&quot;<span class="variable">$&#123;shead[bash]&#125;</span>&quot;</span> 72</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$PADDING<span class="variable">$&#123;shead[bash]&#125;</span>\n&quot;</span></span><br><span class="line">calc_padding <span class="string">&quot;<span class="variable">$&#123;shead[git]&#125;</span>&quot;</span> 72</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$PADDING$Font_U<span class="variable">$&#123;shead[git]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;shead[ptime]&#125;</span><span class="variable">$&#123;shead[time]&#125;</span>  <span class="variable">$&#123;shead[ver]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="subst">$(printf &#x27;%72s&#x27;|tr &#x27; &#x27; &#x27;#&#x27;)</span>\n&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">show_basic</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;sbasic[title]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$&#123;maxmind[asn]&#125;</span> &amp;&amp; <span class="variable">$&#123;maxmind[asn]&#125;</span> != <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sbasic[asn]&#125;</span><span class="variable">$&#123;Font_Green&#125;</span>AS<span class="variable">$&#123;maxmind[asn]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sbasic[org]&#125;</span>$Font_Green<span class="variable">$&#123;maxmind[org]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sbasic[asn]&#125;</span><span class="variable">$&#123;sbasic[noasn]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;maxmind[dms]&#125;</span> != <span class="string">&quot;null&quot;</span> &amp;&amp; <span class="variable">$&#123;maxmind[map]&#125;</span> != <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sbasic[location]&#125;</span>$Font_Green<span class="variable">$&#123;maxmind[dms]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sbasic[map]&#125;</span>$Font_U$Font_Green<span class="variable">$&#123;maxmind[map]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">local</span> city_info=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$&#123;maxmind[sub]&#125;</span> &amp;&amp; <span class="variable">$&#123;maxmind[sub]&#125;</span> != <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">city_info+=<span class="string">&quot;<span class="variable">$&#123;maxmind[sub]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$&#123;maxmind[city]&#125;</span> &amp;&amp; <span class="variable">$&#123;maxmind[city]&#125;</span> != <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">[[ -n <span class="variable">$city_info</span> ]]&amp;&amp;city_info+=<span class="string">&quot;, &quot;</span></span><br><span class="line">city_info+=<span class="string">&quot;<span class="variable">$&#123;maxmind[city]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$&#123;maxmind[post]&#125;</span> &amp;&amp; <span class="variable">$&#123;maxmind[post]&#125;</span> != <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">[[ -n <span class="variable">$city_info</span> ]]&amp;&amp;city_info+=<span class="string">&quot;, &quot;</span></span><br><span class="line">city_info+=<span class="string">&quot;<span class="variable">$&#123;maxmind[post]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$city_info</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sbasic[city]&#125;</span>$Font_Green$city_info<span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$&#123;maxmind[countrycode]&#125;</span> &amp;&amp; <span class="variable">$&#123;maxmind[countrycode]&#125;</span> != <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sbasic[country]&#125;</span><span class="variable">$Font_Green</span>[<span class="variable">$&#123;maxmind[countrycode]&#125;</span>]<span class="variable">$&#123;maxmind[country]&#125;</span><span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$&#123;maxmind[continentcode]&#125;</span> &amp;&amp; <span class="variable">$&#123;maxmind[continentcode]&#125;</span> != <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;<span class="variable">$Font_Green</span>, [<span class="variable">$&#123;maxmind[continentcode]&#125;</span>]<span class="variable">$&#123;maxmind[continent]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">elif</span> [[ -n <span class="variable">$&#123;maxmind[continentcode]&#125;</span> &amp;&amp; <span class="variable">$&#123;maxmind[continentcode]&#125;</span> != <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sbasic[continent]&#125;</span><span class="variable">$Font_Green</span>[<span class="variable">$&#123;maxmind[continentcode]&#125;</span>]<span class="variable">$&#123;maxmind[continent]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$&#123;maxmind[regcountrycode]&#125;</span> &amp;&amp; <span class="variable">$&#123;maxmind[regcountrycode]&#125;</span> != <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sbasic[regcountry]&#125;</span><span class="variable">$Font_Green</span>[<span class="variable">$&#123;maxmind[regcountrycode]&#125;</span>]<span class="variable">$&#123;maxmind[regcountry]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$&#123;maxmind[timezone]&#125;</span> &amp;&amp; <span class="variable">$&#123;maxmind[timezone]&#125;</span> != <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sbasic[timezone]&#125;</span>$Font_Green<span class="variable">$&#123;maxmind[timezone]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$&#123;maxmind[countrycode]&#125;</span> &amp;&amp; <span class="variable">$&#123;maxmind[countrycode]&#125;</span> != <span class="string">&quot;null&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;maxmind[countrycode]&#125;</span>&quot;</span> == <span class="string">&quot;<span class="variable">$&#123;maxmind[regcountrycode]&#125;</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sbasic[type]&#125;</span>$Back_Green$Font_B$Font_White<span class="variable">$&#123;sbasic[type0]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sbasic[type]&#125;</span>$Back_Red$Font_B$Font_White<span class="variable">$&#123;sbasic[type1]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">show_type</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;stype[title]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;stype[db]&#125;</span><span class="variable">$Font_I</span>   IPinfo    ipregistry    ipapi     AbuseIPDB  IP2LOCATION <span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;stype[usetype]&#125;</span>$Font_Suffix<span class="variable">$&#123;ipinfo[susetype]&#125;</span><span class="variable">$&#123;ipregistry[susetype]&#125;</span><span class="variable">$&#123;ipapi[susetype]&#125;</span><span class="variable">$&#123;abuseipdb[susetype]&#125;</span><span class="variable">$&#123;ip2location[susetype]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;stype[comtype]&#125;</span>$Font_Suffix<span class="variable">$&#123;ipinfo[scomtype]&#125;</span><span class="variable">$&#123;ipregistry[susetype]&#125;</span><span class="variable">$&#123;ipapi[susetype]&#125;</span>\n&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">sscore_text</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> text=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">local</span> p2=<span class="variable">$2</span></span><br><span class="line"><span class="built_in">local</span> p3=<span class="variable">$3</span></span><br><span class="line"><span class="built_in">local</span> p4=<span class="variable">$4</span></span><br><span class="line"><span class="built_in">local</span> p5=<span class="variable">$5</span></span><br><span class="line"><span class="built_in">local</span> p6=<span class="variable">$6</span></span><br><span class="line"><span class="built_in">local</span> tmplen</span><br><span class="line"><span class="built_in">local</span> tmp</span><br><span class="line"><span class="keyword">if</span> ((p2&gt;=p4));<span class="keyword">then</span></span><br><span class="line">tmplen=$((<span class="number">49</span>+<span class="number">15</span>*(p2-p4)/(p5-p4)-p6))</span><br><span class="line"><span class="keyword">elif</span> ((p2&gt;=p3));<span class="keyword">then</span></span><br><span class="line">tmplen=$((<span class="number">33</span>+<span class="number">16</span>*(p2-p3)/(p4-p3)-p6))</span><br><span class="line"><span class="keyword">elif</span> ((p2&gt;=<span class="number">0</span>));<span class="keyword">then</span></span><br><span class="line">tmplen=$((<span class="number">17</span>+<span class="number">16</span>*p2/p3-p6))</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmplen=0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">tmp=$(<span class="built_in">printf</span> <span class="string">&#x27;%*s&#x27;</span> <span class="variable">$tmplen</span> <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">local</span> total_length=<span class="variable">$&#123;#tmp&#125;</span></span><br><span class="line"><span class="built_in">local</span> text_length=<span class="variable">$&#123;#text&#125;</span></span><br><span class="line"><span class="built_in">local</span> tmp1=<span class="string">&quot;<span class="variable">$&#123;tmp:1:total_length-text_length&#125;</span><span class="variable">$text</span>|&quot;</span></span><br><span class="line">sscore[text1]=<span class="string">&quot;<span class="variable">$&#123;tmp1:1:16-p6&#125;</span>&quot;</span></span><br><span class="line">sscore[text2]=<span class="string">&quot;<span class="variable">$&#123;tmp1:17-p6:16&#125;</span>&quot;</span></span><br><span class="line">sscore[text3]=<span class="string">&quot;<span class="variable">$&#123;tmp1:33-p6:16&#125;</span>&quot;</span></span><br><span class="line">sscore[text4]=<span class="string">&quot;<span class="variable">$&#123;tmp1:49-p6&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">show_score</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;sscore[title]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;sscore[range]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$&#123;scamalytics[score]&#125;</span> ]];<span class="keyword">then</span></span><br><span class="line">sscore_text <span class="string">&quot;<span class="variable">$&#123;scamalytics[score]&#125;</span>&quot;</span> <span class="variable">$&#123;scamalytics[score]&#125;</span> 25 50 100 13</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;Font_Cyan&#125;</span>SCAMALYTICS<span class="variable">$&#123;sscore[colon]&#125;</span>$Font_White$Font_B<span class="variable">$&#123;sscore[text1]&#125;</span>$Back_Green<span class="variable">$&#123;sscore[text2]&#125;</span>$Back_Yellow<span class="variable">$&#123;sscore[text3]&#125;</span>$Back_Red<span class="variable">$&#123;sscore[text4]&#125;</span>$Font_Suffix<span class="variable">$&#123;scamalytics[risk]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$&#123;ipapi[score]&#125;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">local</span> tmp_score=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;ipapi[scorenum]&#125;</span> * 10000 / 1&quot;</span>|bc)</span><br><span class="line">sscore_text <span class="string">&quot;<span class="variable">$&#123;ipapi[score]&#125;</span>&quot;</span> <span class="variable">$tmp_score</span> 85 300 10000 7</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;Font_Cyan&#125;</span>ipapi<span class="variable">$&#123;sscore[colon]&#125;</span>$Font_White$Font_B<span class="variable">$&#123;sscore[text1]&#125;</span>$Back_Green<span class="variable">$&#123;sscore[text2]&#125;</span>$Back_Yellow<span class="variable">$&#123;sscore[text3]&#125;</span>$Back_Red<span class="variable">$&#123;sscore[text4]&#125;</span>$Font_Suffix<span class="variable">$&#123;ipapi[risk]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">sscore_text <span class="string">&quot;<span class="variable">$&#123;abuseipdb[score]&#125;</span>&quot;</span> <span class="variable">$&#123;abuseipdb[score]&#125;</span> 25 25 100 11</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;Font_Cyan&#125;</span>AbuseIPDB<span class="variable">$&#123;sscore[colon]&#125;</span>$Font_White$Font_B<span class="variable">$&#123;sscore[text1]&#125;</span>$Back_Green<span class="variable">$&#123;sscore[text2]&#125;</span>$Back_Yellow<span class="variable">$&#123;sscore[text3]&#125;</span>$Back_Red<span class="variable">$&#123;sscore[text4]&#125;</span>$Font_Suffix<span class="variable">$&#123;abuseipdb[risk]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$&#123;ipqs[score]&#125;</span>&quot;</span> ]&amp;&amp;[ <span class="string">&quot;<span class="variable">$&#123;ipqs[score]&#125;</span>&quot;</span> != <span class="string">&quot;null&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">sscore_text <span class="string">&quot;<span class="variable">$&#123;ipqs[score]&#125;</span>&quot;</span> <span class="variable">$&#123;ipqs[score]&#125;</span> 75 85 100 6</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;Font_Cyan&#125;</span>IPQS<span class="variable">$&#123;sscore[colon]&#125;</span>$Font_White$Font_B<span class="variable">$&#123;sscore[text1]&#125;</span>$Back_Green<span class="variable">$&#123;sscore[text2]&#125;</span>$Back_Yellow<span class="variable">$&#123;sscore[text3]&#125;</span>$Back_Red<span class="variable">$&#123;sscore[text4]&#125;</span>$Font_Suffix<span class="variable">$&#123;ipqs[risk]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">sscore_text <span class="string">&quot; &quot;</span> <span class="variable">$&#123;dbip[score]&#125;</span> 33 66 100 7</span><br><span class="line">[[ -n <span class="variable">$&#123;dbip[risk]&#125;</span> ]]&amp;&amp;<span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;Font_Cyan&#125;</span>DB-IP<span class="variable">$&#123;sscore[colon]&#125;</span>$Font_White$Font_B<span class="variable">$&#123;sscore[text1]&#125;</span>$Back_Green<span class="variable">$&#123;sscore[text2]&#125;</span>$Back_Yellow<span class="variable">$&#123;sscore[text3]&#125;</span>$Back_Red<span class="variable">$&#123;sscore[text4]&#125;</span>$Font_Suffix<span class="variable">$&#123;dbip[risk]&#125;</span>\n&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">format_factor</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> tmp_txt=<span class="string">&quot;  &quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$1</span> == <span class="string">&quot;true&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[yes]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$1</span> == <span class="string">&quot;false&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[no]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$&#123;#1&#125;</span> -eq 2 ];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$Font_Green</span>[<span class="variable">$1</span>]<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[na]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;    &quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$2</span> == <span class="string">&quot;true&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[yes]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$2</span> == <span class="string">&quot;false&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[no]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$&#123;#2&#125;</span> -eq 2 ];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$Font_Green</span>[<span class="variable">$2</span>]<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[na]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;    &quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$3</span> == <span class="string">&quot;true&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[yes]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$3</span> == <span class="string">&quot;false&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[no]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$&#123;#3&#125;</span> -eq 2 ];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$Font_Green</span>[<span class="variable">$3</span>]<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[na]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;    &quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$4</span> == <span class="string">&quot;true&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[yes]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$4</span> == <span class="string">&quot;false&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[no]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$&#123;#4&#125;</span> -eq 2 ];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$Font_Green</span>[<span class="variable">$4</span>]<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[na]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;    &quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$5</span> == <span class="string">&quot;true&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[yes]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$5</span> == <span class="string">&quot;false&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[no]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$&#123;#5&#125;</span> -eq 2 ];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$Font_Green</span>[<span class="variable">$5</span>]<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[na]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;    &quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$6</span> == <span class="string">&quot;true&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[yes]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$6</span> == <span class="string">&quot;false&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[no]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$&#123;#6&#125;</span> -eq 2 ];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$Font_Green</span>[<span class="variable">$6</span>]<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[na]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;    &quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$7</span> == <span class="string">&quot;true&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[yes]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$7</span> == <span class="string">&quot;false&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[no]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$&#123;#7&#125;</span> -eq 2 ];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$Font_Green</span>[<span class="variable">$7</span>]<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[na]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;    &quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$8</span> == <span class="string">&quot;true&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[yes]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$8</span> == <span class="string">&quot;false&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[no]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$&#123;#8&#125;</span> -eq 2 ];<span class="keyword">then</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$Font_Green</span>[<span class="variable">$8</span>]<span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tmp_txt+=<span class="string">&quot;<span class="variable">$&#123;sfactor[na]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$tmp_txt</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">show_factor</span></span>()&#123;</span><br><span class="line"><span class="built_in">local</span> tmp_factor=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;sfactor[title]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sfactor[factor]&#125;</span><span class="variable">$&#123;Font_I&#125;</span>IP2LOCATION ipapi ipregistry IPQS SCAMALYTICS ipdata IPinfo IPWHOIS<span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line">tmp_factor=$(format_factor <span class="string">&quot;<span class="variable">$&#123;ip2location[countrycode]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipapi[countrycode]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipregistry[countrycode]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipqs[countrycode]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;scamalytics[countrycode]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipdata[countrycode]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipinfo[countrycode]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipwhois[countrycode]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sfactor[countrycode]&#125;</span>$Font_Suffix<span class="variable">$tmp_factor</span>\n&quot;</span></span><br><span class="line">tmp_factor=$(format_factor <span class="string">&quot;<span class="variable">$&#123;ip2location[proxy]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipapi[proxy]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipregistry[proxy]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipqs[proxy]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;scamalytics[proxy]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipdata[proxy]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipinfo[proxy]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipwhois[proxy]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sfactor[proxy]&#125;</span>$Font_Suffix<span class="variable">$tmp_factor</span>\n&quot;</span></span><br><span class="line">tmp_factor=$(format_factor <span class="string">&quot;<span class="variable">$&#123;ip2location[tor]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipapi[tor]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipregistry[tor]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipqs[tor]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;scamalytics[tor]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipdata[tor]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipinfo[tor]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipwhois[tor]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sfactor[tor]&#125;</span>$Font_Suffix<span class="variable">$tmp_factor</span>\n&quot;</span></span><br><span class="line">tmp_factor=$(format_factor <span class="string">&quot;<span class="variable">$&#123;ip2location[vpn]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipapi[vpn]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipregistry[vpn]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipqs[vpn]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;scamalytics[vpn]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipdata[vpn]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipinfo[vpn]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipwhois[vpn]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sfactor[vpn]&#125;</span>$Font_Suffix<span class="variable">$tmp_factor</span>\n&quot;</span></span><br><span class="line">tmp_factor=$(format_factor <span class="string">&quot;<span class="variable">$&#123;ip2location[server]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipapi[server]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipregistry[server]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipqs[server]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;scamalytics[server]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipdata[server]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipinfo[server]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipwhois[server]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sfactor[server]&#125;</span>$Font_Suffix<span class="variable">$tmp_factor</span>\n&quot;</span></span><br><span class="line">tmp_factor=$(format_factor <span class="string">&quot;<span class="variable">$&#123;ip2location[abuser]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipapi[abuser]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipregistry[abuser]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipqs[abuser]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;scamalytics[abuser]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipdata[abuser]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipinfo[abuser]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipwhois[abuser]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sfactor[abuser]&#125;</span>$Font_Suffix<span class="variable">$tmp_factor</span>\n&quot;</span></span><br><span class="line">tmp_factor=$(format_factor <span class="string">&quot;<span class="variable">$&#123;ip2location[robot]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipapi[robot]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipregistry[robot]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipqs[robot]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;scamalytics[robot]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipdata[robot]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipinfo[robot]&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;ipwhois[robot]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;sfactor[robot]&#125;</span>$Font_Suffix<span class="variable">$tmp_factor</span>\n&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">show_media</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;smedia[title]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;smedia[meida]&#125;</span><span class="variable">$Font_I</span> TikTok   Disney+  Netflix Youtube  AmazonPV  Spotify  ChatGPT <span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;smedia[status]&#125;</span><span class="variable">$&#123;tiktok[ustatus]&#125;</span><span class="variable">$&#123;disney[ustatus]&#125;</span><span class="variable">$&#123;netflix[ustatus]&#125;</span><span class="variable">$&#123;youtube[ustatus]&#125;</span><span class="variable">$&#123;amazon[ustatus]&#125;</span><span class="variable">$&#123;spotify[ustatus]&#125;</span><span class="variable">$&#123;chatgpt[ustatus]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;smedia[region]&#125;</span>$Font_Green<span class="variable">$&#123;tiktok[uregion]&#125;</span><span class="variable">$&#123;disney[uregion]&#125;</span><span class="variable">$&#123;netflix[uregion]&#125;</span><span class="variable">$&#123;youtube[uregion]&#125;</span><span class="variable">$&#123;amazon[uregion]&#125;</span><span class="variable">$&#123;spotify[uregion]&#125;</span><span class="variable">$&#123;chatgpt[uregion]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;smedia[type]&#125;</span><span class="variable">$&#123;tiktok[utype]&#125;</span><span class="variable">$&#123;disney[utype]&#125;</span><span class="variable">$&#123;netflix[utype]&#125;</span><span class="variable">$&#123;youtube[utype]&#125;</span><span class="variable">$&#123;amazon[utype]&#125;</span><span class="variable">$&#123;spotify[utype]&#125;</span><span class="variable">$&#123;chatgpt[utype]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">show_mail</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;smail[title]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;smail[local]&#125;</span> -eq 1 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;smail[port]&#125;</span>$Font_Suffix<span class="variable">$&#123;smail[yes]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;smail[provider]&#125;</span><span class="variable">$Font_Suffix</span>&quot;</span></span><br><span class="line"><span class="keyword">for</span> service <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;services[@]&#125;</span>&quot;</span>;<span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;<span class="variable">$&#123;smail[$service]&#125;</span> &quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_Cyan<span class="variable">$&#123;smail[port]&#125;</span>$Font_Suffix<span class="variable">$&#123;smail[no]&#125;</span>\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">[[ <span class="variable">$1</span> -eq 4 ]]&amp;&amp;<span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;smail[sdnsbl]&#125;</span>\n&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">show_tail</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="subst">$(printf &#x27;%72s&#x27;|tr &#x27; &#x27; &#x27;=&#x27;)</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_I<span class="variable">$&#123;stail[stoday]&#125;</span><span class="variable">$&#123;stail[today]&#125;</span><span class="variable">$&#123;stail[stotal]&#125;</span><span class="variable">$&#123;stail[total]&#125;</span><span class="variable">$&#123;stail[thanks]&#125;</span> <span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">get_opts</span></span>()&#123;</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">getopts</span> <span class="string">&quot;i:l:x:h46&quot;</span> opt;<span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$opt</span> <span class="keyword">in</span></span><br><span class="line">4)<span class="keyword">if</span></span><br><span class="line">[[ <span class="variable">$IPV4test</span> == <span class="string">&quot;&quot;</span> &amp;&amp; <span class="variable">$IPV6test</span> == <span class="string">&quot;&quot;</span> ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">IPV4test=<span class="variable">$IPV4</span></span><br><span class="line">[[ <span class="variable">$IPV4work</span> -eq 0 ]]&amp;&amp;ERRORcode=40</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ERRORcode=4</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line">6)<span class="keyword">if</span></span><br><span class="line">[[ <span class="variable">$IPV4test</span> == <span class="string">&quot;&quot;</span> &amp;&amp; <span class="variable">$IPV6test</span> == <span class="string">&quot;&quot;</span> ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">IPV6test=<span class="variable">$IPV6</span></span><br><span class="line">[[ <span class="variable">$IPV6work</span> -eq 0 ]]&amp;&amp;ERRORcode=60</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ERRORcode=6</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line">h)show_help</span><br><span class="line">;;</span><br><span class="line">i)iface=<span class="string">&quot;<span class="variable">$OPTARG</span>&quot;</span></span><br><span class="line">useNIC=<span class="string">&quot; --interface <span class="variable">$iface</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$iface</span> &amp;&amp; -d <span class="string">&quot;/sys/class/net/<span class="variable">$iface</span>&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">useNIC=<span class="string">&quot; --interface <span class="variable">$iface</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ERRORcode=7</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line">l)LANG=<span class="variable">$OPTARG</span></span><br><span class="line">;;</span><br><span class="line">x)xproxy=<span class="string">&quot;<span class="variable">$OPTARG</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$xproxy</span> ]]||! curl -sL -x <span class="string">&quot;<span class="variable">$xproxy</span>&quot;</span> --connect-timeout 5 --max-time 10 https://myip.check.place -o /dev/null;<span class="keyword">then</span></span><br><span class="line">ERRORcode=8</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">usePROXY=<span class="string">&quot; -x <span class="variable">$xproxy</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line">\?)ERRORcode=1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">CurlARG=<span class="string">&quot;$useNIC<span class="variable">$usePROXY</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">show_help</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$shelp</span>\n&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">check_IP</span></span>()&#123;</span><br><span class="line">IP=<span class="variable">$1</span></span><br><span class="line">ibar_step=0</span><br><span class="line">[[ <span class="variable">$2</span> -eq 4 ]]&amp;&amp;hide_ipv4 <span class="variable">$IP</span></span><br><span class="line">[[ <span class="variable">$2</span> -eq 6 ]]&amp;&amp;hide_ipv6 <span class="variable">$IP</span></span><br><span class="line">db_maxmind</span><br><span class="line">db_ipinfo</span><br><span class="line">db_scamalytics</span><br><span class="line">db_ipregistry</span><br><span class="line">db_ipapi</span><br><span class="line">db_abuseipdb</span><br><span class="line">db_ip2location</span><br><span class="line">db_dbip</span><br><span class="line">db_ipwhois</span><br><span class="line">db_ipdata</span><br><span class="line">db_ipqs</span><br><span class="line">MediaUnlockTest_TikTok <span class="variable">$2</span></span><br><span class="line">MediaUnlockTest_DisneyPlus <span class="variable">$2</span></span><br><span class="line">MediaUnlockTest_Netflix <span class="variable">$2</span></span><br><span class="line">MediaUnlockTest_YouTube_Premium <span class="variable">$2</span></span><br><span class="line">MediaUnlockTest_PrimeVideo_Region <span class="variable">$2</span></span><br><span class="line">MediaUnlockTest_Spotify <span class="variable">$2</span></span><br><span class="line">OpenAITest <span class="variable">$2</span></span><br><span class="line">check_mail</span><br><span class="line">[[ <span class="variable">$2</span> -eq 4 ]]&amp;&amp;check_dnsbl <span class="string">&quot;<span class="variable">$IP</span>&quot;</span> 50</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;<span class="variable">$Font_LineClear</span>&quot;</span></span><br><span class="line"><span class="built_in">local</span> ip_report=$(show_head</span><br><span class="line">show_basic</span><br><span class="line">show_type</span><br><span class="line">show_score</span><br><span class="line">show_factor</span><br><span class="line">show_media</span><br><span class="line">show_mail <span class="variable">$2</span></span><br><span class="line">show_tail)</span><br><span class="line"><span class="built_in">local</span> report_link=$(curl -<span class="variable">$2</span> -s -X POST http://upload.check.place -d <span class="string">&quot;type=ip&quot;</span> --data-urlencode <span class="string">&quot;content=<span class="variable">$ip_report</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$ip_report</span>\n&quot;</span></span><br><span class="line">[[ <span class="variable">$report_link</span> == *<span class="string">&quot;https&quot;</span>* ]]&amp;&amp;<span class="built_in">echo</span> -ne <span class="string">&quot;\r<span class="variable">$&#123;stail[link]&#125;</span>$report_link<span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r\n&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">install_dependencies</span><br><span class="line">generate_random_user_agent</span><br><span class="line">countRunTimes</span><br><span class="line">get_ipv4</span><br><span class="line">get_ipv6</span><br><span class="line">is_valid_ipv4 <span class="variable">$IPV4</span></span><br><span class="line">is_valid_ipv6 <span class="variable">$IPV6</span></span><br><span class="line">get_opts <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">set_language</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$ERRORcode</span> -ne 0 ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -ne <span class="string">&quot;\r$Font_B$Font_Red<span class="variable">$&#123;swarn[$ERRORcode]&#125;</span><span class="variable">$Font_Suffix</span>\n&quot;</span></span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$ERRORcode</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">clear</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$IPV4test</span> == <span class="string">&quot;&quot;</span> &amp;&amp; <span class="variable">$IPV6test</span> == <span class="string">&quot;&quot;</span> ]];<span class="keyword">then</span></span><br><span class="line">[[ <span class="variable">$IPV4work</span> -ne 0 ]]&amp;&amp;IPV4test=<span class="variable">$IPV4</span></span><br><span class="line">[[ <span class="variable">$IPV6work</span> -ne 0 ]]&amp;&amp;IPV6test=<span class="variable">$IPV6</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">[[ -n <span class="variable">$IPV4test</span> ]]&amp;&amp;check_IP <span class="string">&quot;<span class="variable">$IPV4test</span>&quot;</span> 4</span><br><span class="line">[[ -n <span class="variable">$IPV6test</span> ]]&amp;&amp;check_IP <span class="string">&quot;<span class="variable">$IPV6test</span>&quot;</span> 6</span><br></pre></td></tr></table></figure>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h5 id="默认双栈检测："><a href="#默认双栈检测：" class="headerlink" title="默认双栈检测："></a>默认双栈检测：</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls IP.Check.Place)</span><br></pre></td></tr></table></figure>
<h5 id="只检测IPv4结果："><a href="#只检测IPv4结果：" class="headerlink" title="只检测IPv4结果："></a>只检测IPv4结果：</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls IP.Check.Place) -4</span><br></pre></td></tr></table></figure>
<h5 id="只检测IPv6结果："><a href="#只检测IPv6结果：" class="headerlink" title="只检测IPv6结果："></a>只检测IPv6结果：</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls IP.Check.Place) -6</span><br></pre></td></tr></table></figure>
<h5 id="指定检测网卡："><a href="#指定检测网卡：" class="headerlink" title="指定检测网卡："></a>指定检测网卡：</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls IP.Check.Place) -i eth0</span><br></pre></td></tr></table></figure>
<h5 id="指定代理服务器："><a href="#指定代理服务器：" class="headerlink" title="指定代理服务器："></a>指定代理服务器：</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls IP.Check.Place) -x http://username:password@proxyserver:port</span><br><span class="line">bash &lt;(curl -Ls IP.Check.Place) -x https://username:password@proxyserver:port</span><br><span class="line">bash &lt;(curl -Ls IP.Check.Place) -x socks5://username:password@socksproxy:port</span><br></pre></td></tr></table></figure>
<h5 id="选择脚本语言为英文："><a href="#选择脚本语言为英文：" class="headerlink" title="选择脚本语言为英文："></a>选择脚本语言为英文：</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls IP.Check.Place) -l en</span><br></pre></td></tr></table></figure>
<h5 id="基础信息多语言支持："><a href="#基础信息多语言支持：" class="headerlink" title="基础信息多语言支持："></a>基础信息多语言支持：</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls IP.Check.Place) -l jp|es|de|fr|ru|pt</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Shell脚本</category>
      </categories>
      <tags>
        <tag>Shell脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>JDK8安装</title>
    <url>/2024/01/05/java8%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="JDK8安装"><a href="#JDK8安装" class="headerlink" title="JDK8安装"></a>JDK8安装</h2><h3 id="rpm包下载"><a href="#rpm包下载" class="headerlink" title="rpm包下载"></a>rpm包下载</h3><p>有Oracle jdk和openjdk两个版本，代码基本相同，但是推荐使用Oracle jdk<br>去官网下载：<br><a href="https://www.oracle.com/java/technologies/downloads/#java8">https://www.oracle.com/java/technologies/downloads/#java8</a><br>或者其他正规渠道</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># rpm -ivh jdk-8u202-linux-x64</span></span><br><span class="line">警告：jdk-8u202-linux-x64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID ec551f03: NOKEY</span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   1:jdk1.8-2000:1.8.0_202-fcs        <span class="comment">################################# [100%]</span></span><br><span class="line">Unpacking JAR files...</span><br><span class="line">        tools.jar...</span><br><span class="line">        plugin.jar...</span><br><span class="line">        javaws.jar...</span><br><span class="line">        deploy.jar...</span><br><span class="line">        rt.jar...</span><br><span class="line">        jsse.jar...</span><br><span class="line">        charsets.jar...</span><br><span class="line">        localedata.jar...</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="验证版本"><a href="#验证版本" class="headerlink" title="验证版本"></a>验证版本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># java -version</span></span><br><span class="line">java version <span class="string">&quot;1.8.0_202&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_202-b08)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.202-b08, mixed mode)</span><br></pre></td></tr></table></figure>
<h3 id="修改profile文件"><a href="#修改profile文件" class="headerlink" title="修改profile文件"></a><strong>修改profile文件</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/profile</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0_202-amd64</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$JAVA_HOME</span>/jre/bin</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=<span class="variable">$JAVA_HOME</span>/lib:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure>
<h3 id="没有特殊需求的时候"><a href="#没有特殊需求的时候" class="headerlink" title="没有特殊需求的时候"></a>没有特殊需求的时候</h3><p>没有特殊需求也可以yum安装openjdk</p>
<h4 id="检查是否安装"><a href="#检查是否安装" class="headerlink" title="检查是否安装"></a>检查是否安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># rpm -qa|grep jdk </span></span><br><span class="line">或者 </span><br><span class="line">[root@localhost ~]<span class="comment"># yum list installed | grep jdk</span></span><br></pre></td></tr></table></figure>
<h4 id="检测可用版本"><a href="#检测可用版本" class="headerlink" title="检测可用版本"></a>检测可用版本</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum search java | grep -i --color jdk</span></span><br><span class="line">ldapjdk-javadoc.noarch : Javadoc <span class="keyword">for</span> ldapjdk</span><br><span class="line">openjdk-asmtools-javadoc.noarch : Javadoc <span class="keyword">for</span> openjdk-asmtools</span><br><span class="line">icedtea-web.x86_64 : Additional Java components <span class="keyword">for</span> OpenJDK - Java browser</span><br><span class="line">java-1.6.0-openjdk.x86_64 : OpenJDK Runtime Environment</span><br><span class="line">java-1.6.0-openjdk-demo.x86_64 : OpenJDK Demos</span><br><span class="line">java-1.6.0-openjdk-devel.x86_64 : OpenJDK Development Environment</span><br><span class="line">java-1.6.0-openjdk-javadoc.x86_64 : OpenJDK API Documentation</span><br><span class="line">java-1.6.0-openjdk-src.x86_64 : OpenJDK Source Bundle</span><br><span class="line">java-1.7.0-openjdk.x86_64 : OpenJDK Runtime Environment</span><br><span class="line">java-1.7.0-openjdk-accessibility.x86_64 : OpenJDK accessibility connector</span><br><span class="line">java-1.7.0-openjdk-demo.x86_64 : OpenJDK Demos</span><br><span class="line">java-1.7.0-openjdk-devel.x86_64 : OpenJDK Development Environment</span><br><span class="line">java-1.7.0-openjdk-headless.x86_64 : The OpenJDK runtime environment without</span><br><span class="line">java-1.7.0-openjdk-javadoc.noarch : OpenJDK API Documentation</span><br><span class="line">java-1.7.0-openjdk-src.x86_64 : OpenJDK Source Bundle</span><br><span class="line">java-1.8.0-openjdk.i686 : OpenJDK Runtime Environment 8</span><br><span class="line">java-1.8.0-openjdk.x86_64 : OpenJDK 8 Runtime Environment</span><br><span class="line">java-1.8.0-openjdk-accessibility.i686 : OpenJDK accessibility connector</span><br><span class="line">java-1.8.0-openjdk-accessibility.x86_64 : OpenJDK accessibility connector</span><br><span class="line">java-1.8.0-openjdk-demo.i686 : OpenJDK Demos 8</span><br><span class="line">java-1.8.0-openjdk-demo.x86_64 : OpenJDK 8 Demos</span><br><span class="line">java-1.8.0-openjdk-devel.i686 : OpenJDK Development Environment 8</span><br><span class="line">java-1.8.0-openjdk-devel.x86_64 : OpenJDK 8 Development Environment</span><br><span class="line">java-1.8.0-openjdk-headless.i686 : OpenJDK Headless Runtime Environment 8</span><br><span class="line">java-1.8.0-openjdk-headless.x86_64 : OpenJDK 8 Headless Runtime Environment</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="安装jdk1-8"><a href="#安装jdk1-8" class="headerlink" title="安装jdk1.8"></a><strong>安装jdk1.8</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># yum install -y java-1.8.0-openjdk.x86_64</span></span><br><span class="line">[root@localhost ~]<span class="comment"># java -version</span></span><br><span class="line">openjdk version <span class="string">&quot;1.8.0_392&quot;</span></span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_392-b08)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.392-b08, mixed mode)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>JDK8</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux针对大量log日志快速定位错误</title>
    <url>/2024/04/29/linux%E5%A4%A7%E9%87%8F%E6%97%A5%E5%BF%97%E5%BF%AB%E9%80%9F%E5%AE%9A%E4%BD%8D%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<h1 id="Linux针对大量log日志快速定位错误"><a href="#Linux针对大量log日志快速定位错误" class="headerlink" title="Linux针对大量log日志快速定位错误"></a>Linux针对大量log日志快速定位错误</h1><h2 id="针对大量log日志快速定位错误"><a href="#针对大量log日志快速定位错误" class="headerlink" title="针对大量log日志快速定位错误"></a>针对大量log日志快速定位错误</h2><p>动态查看日志</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f catalina.ou</span><br></pre></td></tr></table></figure>

<p>从头打开日志文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> catalina.ou</span><br></pre></td></tr></table></figure>

<p>可以使用 <code>&gt;nanjiangtest.txt</code> 输出某个新日志去查看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@yesky logs]<span class="comment"># cat -n catalina.out |grep 717892466 &gt;nanjiangtest.txt</span></span><br></pre></td></tr></table></figure>

<h2 id="tail-head简单命令使用："><a href="#tail-head简单命令使用：" class="headerlink" title="tail&#x2F;head简单命令使用："></a>tail&#x2F;head简单命令使用：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@yesky logs]<span class="comment"># tail -n number catalina.out 查询日志尾部最后number行的日志</span></span><br><span class="line">        [root@yesky logs]<span class="comment"># tail -n +number catalina.out 查询number行之后的所有日志</span></span><br><span class="line">        [root@yesky logs]<span class="comment"># head -n number catalina.out 查询日志文件中的前number行日志</span></span><br><span class="line">        [root@yesky logs]<span class="comment"># head -n -number catalina.out 查询日志文件除了最后number行的其他所有日志</span></span><br></pre></td></tr></table></figure>

<h4 id="第一种方式（根据关键字查找出行号）："><a href="#第一种方式（根据关键字查找出行号）：" class="headerlink" title="第一种方式（根据关键字查找出行号）："></a>第一种方式（根据关键字查找出行号）：</h4><p>用grep拿到的日志很少，我们需要查看附近的日志。我是这样做的，首先: <code>cat -n test.log | grep “关键词”</code> 得到关键日志的行号</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@yesky logs]<span class="comment"># cat -n catalina.out |grep 717892466</span></span><br><span class="line">13230539        [11:07 17:47:11] INFO nanjiang:Edit Old Article：717892466-2020-11-07 17:47:11</span><br><span class="line">13230593        [11:07 17:47:15] INFO nanjiangSave Article ID IS：717892466</span><br><span class="line">13230595        717892466 article.getDisplayTime()1 = 2020-11-07 16:25:11</span><br><span class="line">13230596        717892466 article.getDisplayTime()2 = 2020-11-07 16:25:11</span><br><span class="line">13230601        [11:07 17:47:15] INFO 南江 10.10.10.39  edit    article 717892466       编辑文章</span><br></pre></td></tr></table></figure>

<p><strong>「cat -n catalina.out|tail -n +13230539|head -n 10」</strong></p>
<ul>
<li><code>tail -n +13230539</code>表示查询13230539行之后的日志</li>
<li><code>head -n 10</code>则表示在前面的查询结果里再查前10条记录</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@yesky logs]<span class="comment"># cat -n catalina.out |tail -n +13230539|head -n 10</span></span><br><span class="line">13230539        [11:07 17:47:11] INFO nanjiang:Edit Old Article：717892466-2020-11-07 17:47:11</span><br><span class="line">13230540        [11:07 17:47:11] INFO Takes:2 ms class com.tmg.cms.manager.dao.article.impl.ArticleContentDaoImpl       getListByArticleId      [NzE3ODkyNDY2]       [int]</span><br><span class="line">13230541        [11:07 17:47:11] INFO Takes:1 ms class com.tmg.cms.manager.dao.resourceImage.impl.ResourceImageDaoImpl  load    </span><br><span class="line">13230542        [11:07 17:47:11] INFO Takes:0 ms class com.tmg.cms.manager.dao.resourceImage.impl.ResourceImageDaoImpl  load    </span><br><span class="line">13230543        [11:07 17:47:11] INFO Takes:1 ms class com.tmg.cms.manager.dao.resourceImage.impl.ResourceImageDaoImpl  load    </span><br><span class="line">13230544        [11:07 17:47:11] INFO article.getImage3：/uploadImages/2020/312/02/3NXCRK4U3589_2.jpg</span><br><span class="line">13230545        [11:07 17:47:11] INFO Takes:0 ms class com.tmg.cms.manager.dao.resourceImage.impl.ResourceImageDaoImpl  load   </span><br><span class="line">13230546        [11:07 17:47:11] INFO Takes:2 ms class com.tmg.cms.manager.dao.privilege.impl.UserDaoImpl       getUserByid     </span><br><span class="line">13230547        [11:07 17:47:11] INFO Takes:57 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl     selectSitemapWithoutAudit       [MQ==]  [int]</span><br><span class="line">13230548        [11:07 17:47:11] INFO Takes:5 ms class com.tmg.cms.manager.dao.forbidword.impl.ForbidwordDaoImpl        getForbidwordBysiteid   [MjI=]  [int]</span><br></pre></td></tr></table></figure>

<h4 id="第二种方式：查看指定时间段内的日志"><a href="#第二种方式：查看指定时间段内的日志" class="headerlink" title="第二种方式：查看指定时间段内的日志"></a>第二种方式：查看指定时间段内的日志</h4><p>首先要进行范围时间段内日志查询先查看是否在当前日之内存在，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep <span class="string">&#x27;11:07 18:29:20&#x27;</span> catalina.outgrep <span class="string">&#x27;11:07 18:31:11&#x27;</span> catalina.out</span><br></pre></td></tr></table></figure>

<p>时间范围内的查询</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;/11:07 18:29:20/,/11:07 18:31:11/p&#x27;</span> catalina.out sed -n <span class="string">&#x27;/11:07 18:29:/,/11:07 18:31:/p&#x27;</span> catalina.out</span><br></pre></td></tr></table></figure>

<h4 id="第三种方式：查看日志中特定字符的匹配数目"><a href="#第三种方式：查看日志中特定字符的匹配数目" class="headerlink" title="第三种方式：查看日志中特定字符的匹配数目"></a>第三种方式：查看日志中特定字符的匹配数目</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@yesky logs]<span class="comment"># grep &#x27;1175109632&#x27; catalina.out | wc -l154</span></span><br></pre></td></tr></table></figure>

<h4 id="第四种方式：查询最后number行，并查找关键字“结果”"><a href="#第四种方式：查询最后number行，并查找关键字“结果”" class="headerlink" title="第四种方式：查询最后number行，并查找关键字“结果”"></a>第四种方式：查询最后number行，并查找关键字“结果”</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@yesky logs]<span class="comment"># tail -n 20 catalina.out | grep &#x27;INFO Takes:1&#x27;</span></span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.config.impl.ConfigInfoDaoImpl load </span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [NTkwOTQ5] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzI0] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzI3] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzMw] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzA5NA==] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [Mzc4Mg==] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [OTM1MA==] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MTE5MDMw] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [NTQ2MzQw] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [NTg2NzYy] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzYyMjA=] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.configModule.impl.ConfigModuleDaoImpl getPersonMenuList</span><br></pre></td></tr></table></figure>

<h4 id="第五种方式：查询最后number行，并查找关键字“结果”并且对结果进行标红"><a href="#第五种方式：查询最后number行，并查找关键字“结果”并且对结果进行标红" class="headerlink" title="第五种方式：查询最后number行，并查找关键字“结果”并且对结果进行标红"></a>第五种方式：查询最后number行，并查找关键字“结果”并且对结果进行标红</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@yesky logs]<span class="comment"># tail -n 20 catalina.out | grep &#x27;INFO Takes:1&#x27; --color</span></span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.config.impl.ConfigInfoDaoImpl load </span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [NTkwOTQ5] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzI0] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzI3] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzMw] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzA5NA==] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [Mzc4Mg==] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [OTM1MA==] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MTE5MDMw] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [NTQ2MzQw] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [NTg2NzYy] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzYyMjA=] [int]</span><br></pre></td></tr></table></figure>

<h4 id="第六种方式：查询最后number行，并查找关键字“结果”并且对结果进行标红，上下扩展两行"><a href="#第六种方式：查询最后number行，并查找关键字“结果”并且对结果进行标红，上下扩展两行" class="headerlink" title="第六种方式：查询最后number行，并查找关键字“结果”并且对结果进行标红，上下扩展两行"></a>第六种方式：查询最后number行，并查找关键字“结果”并且对结果进行标红，上下扩展两行</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@yesky logs]<span class="comment"># tail -n 20 catalina.out | grep &#x27;INFO Takes:1&#x27; --color -a2</span></span><br><span class="line">[11:11 22:02:51] INFO Takes:0 ms class com.tmg.cms.manager.dao.article.impl.ArticleContentDaoImpl getArticlePageNum [NzE4MTM2ODky] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.config.impl.ConfigInfoDaoImpl load [com.tmg.cms.manager.model.config.ConfigInfo]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [NTkwOTQ5] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzI0] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:0 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzI1] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzI3] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzMw] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:0 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzAzNg==] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzA5NA==] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [Mzc4Mg==] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [OTM1MA==] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:0 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MTE0MjQ4] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:0 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MTE4MDc4] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MTE5MDMw] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [NTQ2MzQw] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:0 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [NTQ3MTIw] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:0 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [NTY4OTYx] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [NTg2NzYy] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.sitemap.impl.SitemapDaoImpl getSitemapTop [MzYyMjA=] [int]</span><br><span class="line">[11:11 22:02:51] INFO Takes:1 ms class com.tmg.cms.manager.dao.configModule.impl.ConfigModuleDaoImpl getPersonMenuList [com.tmg.cms.manager.model.config.ConfigPersonMenu]</span><br></pre></td></tr></table></figure>

<h4 id="第七种方式：分页查看，使用空格翻页-使用more-less"><a href="#第七种方式：分页查看，使用空格翻页-使用more-less" class="headerlink" title="第七种方式：分页查看，使用空格翻页(使用more&#x2F;less)"></a>第七种方式：分页查看，使用空格翻页(使用more&#x2F;less)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@yesky logs]<span class="comment"># tail -n 2000 catalina.out | grep &#x27;INFO Takes:1&#x27; --color -a2 | more</span></span><br><span class="line">        [root@yesky logs]<span class="comment"># tail -n 2000 catalina.out | grep &#x27;INFO Takes:1&#x27; --color -a2 | less</span></span><br></pre></td></tr></table></figure>

<h2 id="附加"><a href="#附加" class="headerlink" title="附加"></a><strong>附加</strong></h2><h5 id="1-全屏导航"><a href="#1-全屏导航" class="headerlink" title="1.全屏导航"></a>1.全屏导航</h5><ul>
<li><code>ctrl + F</code> - 向前移动一屏</li>
<li><code>ctrl + B</code> - 向后移动一屏</li>
<li><code>ctrl + D</code> - 向前移动半屏</li>
<li><code>ctrl + U</code> - 向后移动半屏</li>
</ul>
<h5 id="2-单行导航"><a href="#2-单行导航" class="headerlink" title="2.单行导航"></a>2.单行导航</h5><ul>
<li><code>j</code> - 向前移动一行</li>
<li><code>k</code> - 向后移动一行</li>
</ul>
<h5 id="3-其它导航"><a href="#3-其它导航" class="headerlink" title="3.其它导航"></a>3.其它导航</h5><ul>
<li><code>G</code> - 移动到最后一行</li>
<li><code>g</code> - 移动到第一行</li>
<li><code>q / ZZ</code> - 退出 less 命令</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux计划任务</title>
    <url>/2024/03/01/linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="Linux计划任务"><a href="#Linux计划任务" class="headerlink" title="Linux计划任务"></a>Linux计划任务</h2><ul>
<li>可以预览计划任务的网站</li>
</ul>
<p><a href="https://crontab.guru/#5_4_*_*_*">Crontab.guru - The cron schedule expression generator</a></p>
<h3 id="1、什么是计划任务"><a href="#1、什么是计划任务" class="headerlink" title="1、什么是计划任务"></a>1、什么是计划任务</h3><blockquote>
<p>简单来说，就是某些我们需要定时执行的任务，可以是某条命令，也可以是某个脚本。</p>
</blockquote>
<h3 id="2、计划任务使用场景"><a href="#2、计划任务使用场景" class="headerlink" title="2、计划任务使用场景"></a>2、计划任务使用场景</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.按天进行日志切割</span><br><span class="line">2.定时同步互联网时间</span><br><span class="line">3.每天备份数据库数据</span><br><span class="line">4.定时删除不需要的日志文件或临时文件</span><br><span class="line">5.定时获取系统的状态信息</span><br></pre></td></tr></table></figure>
<h3 id="3、计划任务设置"><a href="#3、计划任务设置" class="headerlink" title="3、计划任务设置"></a>3、计划任务设置</h3><h4 id="3-1-计划任务配置文件"><a href="#3-1-计划任务配置文件" class="headerlink" title="3.1 计划任务配置文件"></a>3.1 计划任务配置文件</h4><p>Linux中最常用的计划任务服务为crond服务，该服务可以设置计划周期性的定时运行某些命令或脚本。</p>
<p><strong>计划任务配置文件：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/crontab        //crond计划任务列表配置文件</span><br><span class="line">/etc/cron.deny      //该文件中所写用户无法使用crond计划任务</span><br><span class="line">/var/spool/cron/*   //用户计划任务文件都存放此目录，文件以用户名命名</span><br><span class="line">/var/log/cron       //定时任务执行后的日志文件</span><br></pre></td></tr></table></figure>
<h4 id="3-2-计划任务配置"><a href="#3-2-计划任务配置" class="headerlink" title="3.2 计划任务配置"></a>3.2 计划任务配置</h4><p>crond计划任务服务提供了crontab命令来创建和管理计划任务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab [选项]</span><br><span class="line"></span><br><span class="line">命令选项：</span><br><span class="line">-e      //编辑当前用户计划任务文件</span><br><span class="line">-l      //查看当前用户计划任务文件内容</span><br><span class="line">-r      //删除当前用户计划任务文件内容</span><br><span class="line">-u      //管理其他用户的计划任务</span><br><span class="line"></span><br><span class="line">注意: crontab命令实际上就是在操作/var/spool/cron/username。</span><br></pre></td></tr></table></figure>

<p><strong>计划任务书写格式：参考&#x2F;etc&#x2F;crontab配置文件中的格式</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.---------------- minute (0 - 59) //分钟</span><br><span class="line">|  .------------- hour (0 - 23)   //小时</span><br><span class="line">|  |  .---------- day of month (1 - 31)   //日期</span><br><span class="line">|  |  |  .------- month (1 - 12) OR jan,feb,mar,apr //月份</span><br><span class="line">|  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat  //星期</span><br><span class="line">|  |  |  |  |</span><br><span class="line">*  *  *  *  *   user-name  <span class="built_in">command</span> to be executed</span><br><span class="line">分 时 日 月 周</span><br><span class="line"></span><br><span class="line">*	//表示每，任意(分、时、日、月、周)时间都执行</span><br><span class="line">*/	//表示每隔；例如：*/10 每隔10分钟</span><br><span class="line">-	//表示时间范围段；例如：5-7点 5点到7点</span><br><span class="line">,	//表示和, 例如：4,6,0 周四、周六和周日</span><br></pre></td></tr></table></figure>
<h4 id="3-3-计划任务时间练习"><a href="#3-3-计划任务时间练习" class="headerlink" title="3.3 计划任务时间练习"></a>3.3 计划任务时间练习</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">* * * * *	//每分钟都执行</span><br><span class="line">0 0 * * *	//每天0点执行</span><br><span class="line">30 1 * * *	//每天凌晨1点30分执行</span><br><span class="line">0 * * * *	//每小时执行</span><br><span class="line">0 */2 * * *	//每隔两小时执行</span><br><span class="line">*/30 * * * *	//每隔30分钟执行</span><br><span class="line">0 1 15 * *	//每月的15号凌晨1点钟执行</span><br><span class="line">0 5 1-14 * *	//每月1号-14号凌晨5点钟执行</span><br><span class="line">0 6-8 */5 * *	//每隔5天的上午6点-8点整执行</span><br><span class="line">0 20-23/1 * * *	//每天晚上8点-11点之间，每隔1小时执行</span><br><span class="line">0 23 * * 1-3	//周一到周三每天晚上11点整执行</span><br></pre></td></tr></table></figure>

<h4 id="3-4-编写计划任务注意事项"><a href="#3-4-编写计划任务注意事项" class="headerlink" title="3.4 编写计划任务注意事项"></a>3.4 编写计划任务注意事项</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//编写计划任务时务必添加该计划任务的注释信息</span><br><span class="line">[root@localhost ~]<span class="comment"># crontab -e</span></span><br><span class="line"><span class="comment">#print string &quot;hello world&quot;</span></span><br><span class="line">*/5 * * * * /usr/bin/echo <span class="string">&quot;hello world&quot;</span></span><br><span class="line"></span><br><span class="line">//在计划任务中执行命令，命令最好用绝对路径</span><br><span class="line">//写入计划任务中的命令先拿到命令行执行一遍，看结果是否成功</span><br><span class="line">[root@localhost ~]<span class="comment"># crontab -e</span></span><br><span class="line"><span class="comment">#print string &quot;hello world&quot;</span></span><br><span class="line">*/5 * * * * /usr/bin/echo <span class="string">&quot;hello world&quot;</span></span><br><span class="line"></span><br><span class="line">//计划任务输出结果可用<span class="string">&quot;&gt;&quot;</span>重定向到指定文件</span><br><span class="line">[root@localhost ~]<span class="comment"># crontab -e</span></span><br><span class="line"><span class="comment">#print string &quot;hello world&quot;</span></span><br><span class="line">*/5 * * * * /usr/bin/echo <span class="string">&quot;hello world&quot;</span> &amp;&gt; /dev/null</span><br></pre></td></tr></table></figure>

<p><strong>计划任务流程规范：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">流程规范:</span><br><span class="line">1.先在测试环境中实践，千万不要上来就用生产服务器；</span><br><span class="line">2.先理解需求；</span><br><span class="line">3.写入计划任务中的命令先拿到命令行执行一遍；</span><br><span class="line">4.脚本需要先进行测试，测试脚本是否可以正常执行；</span><br><span class="line">5.写入计划任务里的任务，可以先将任务时间间隔缩短，方便测试；</span><br><span class="line">6.执行过程如果需要，强烈建议写进日志。</span><br></pre></td></tr></table></figure>
<h3 id="4、crontab计划任务示例"><a href="#4、crontab计划任务示例" class="headerlink" title="4、crontab计划任务示例"></a>4、crontab计划任务示例</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//每天凌晨3点备份系统中配置文件目录</span><br><span class="line">[root@localhost ~]<span class="comment"># crontab -e</span></span><br><span class="line"><span class="comment">#directory /etc/ backup</span></span><br><span class="line">0 3 * * * /usr/bin/tar -zcf /root/etc_backup.tar.gz /etc/ &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line">//每天隔1小时获取系统负载情况，并将信息存放到日志文件中</span><br><span class="line">[root@localhost ~]<span class="comment"># vim systemload.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">/usr/bin/echo <span class="string">&quot;<span class="subst">$(date <span class="string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span> load average:<span class="subst">$(/usr/bin/top -n 1 -b | /usr/bin/awk -F &#x27;:&#x27; &#x27;NR==1 &#123;print$5&#125;&#x27;)</span>&quot;</span> &amp;&gt;&gt; /root/systemload.log</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># chmod +x systemload.sh</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># crontab -e</span></span><br><span class="line"><span class="comment">#get system load information</span></span><br><span class="line">0 */1 * * * /root/systemload.sh</span><br></pre></td></tr></table></figure>
<h3 id="5、crond计划任务调试"><a href="#5、crond计划任务调试" class="headerlink" title="5、crond计划任务调试"></a>5、crond计划任务调试</h3><blockquote>
<ol>
<li>调整任务每分钟执行, 检测是否是否正常, 有些任务不要频繁执行</li>
<li>调整系统时间然后在检测任务, 生产不建议直接使用此方式</li>
<li>执行脚本, 将脚本执行输出写入指定日志文件, 观察日志内容是否正常</li>
<li>注意一些任务命令带来的问题echo “wangqing” &gt;&gt;&#x2F;tmp&#x2F;test.log &amp;&gt;&#x2F;dev&#x2F;null</li>
<li>命令使用绝对路径, 防止无法找到命令导致定时任务执行故障</li>
<li>查看&#x2F;var&#x2F;log&#x2F;cron日志进行调试</li>
</ol>
</blockquote>
<p>建议: 将需要定期执行的任务写入脚本中, 建立&#x2F;scripts目录统一存放脚本, 脚本中命令必须使用绝对路径,手动执行脚本检测输出是否正常, 然后将脚本加入计划任务测试, 测试后无问题将脚本输出写入对应的日志文件中即可。</p>
<p>计划任务添加步骤：</p>
<ol>
<li>手动执行保留执行命令的正确结果</li>
<li>编写脚本<ul>
<li>脚本需要统一路径&#x2F;scripts</li>
<li>脚本开头建议填写注释信息, 包括执行时间、周期、任务</li>
<li>脚本内容复制执行成功的命令至脚本文件中(减少每个环节出错几率)</li>
<li>脚本内容尽可能的优化, 使用一些变量或使用简单的判断语句</li>
<li>脚本执行的输出信息不要随意打印, 可以重定向至其他位置保留或丢入黑洞</li>
</ul>
</li>
<li>执行脚本<ul>
<li>使用bash执行, 防止脚本没有增加执行权限(&#x2F;bin&#x2F;bash)</li>
<li>执行命令以及脚本成功后并复制该命令</li>
</ul>
</li>
<li>编写计划任务<ul>
<li>加上必要的注释信息, 人、时间、任务</li>
<li>设定计划任务执行的周期</li>
<li>加入执行脚本的命令</li>
</ul>
</li>
<li>调试计划任务<ul>
<li>增加任务频率测试、调整系统时间测试(不能用于生产)</li>
<li>检查环境变量问题、检查crond服务产生日志进行排查</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux集群系统时间同步</title>
    <url>/2024/01/24/linux%E9%9B%86%E7%BE%A4%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</url>
    <content><![CDATA[<h2 id="Linux集群系统时间同步"><a href="#Linux集群系统时间同步" class="headerlink" title="Linux集群系统时间同步"></a>Linux集群系统时间同步</h2><p>环境准备：</p>
<ul>
<li>服务器集群 我准备了2台虚拟机，主机名分别是server1、server3，操作系统版本为CentOS-7.9</li>
</ul>
<h3 id="1-查看系统当前时间和时区"><a href="#1-查看系统当前时间和时区" class="headerlink" title="1.查看系统当前时间和时区"></a>1.查看系统当前时间和时区</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看时间</span></span><br><span class="line">[root@server1 ~]<span class="comment"># date</span></span><br><span class="line">Mon Feb 19 10:24:03 CST 2024</span><br><span class="line"></span><br><span class="line">[root@server1 ~]<span class="comment"># date -R # 显示时区</span></span><br><span class="line">Mon, 19 Feb 2024 10:24:40 +0800</span><br><span class="line"></span><br><span class="line">[root@server1 ~]<span class="comment"># date &#x27;+%Y-%m-%d %H:%M:%S&#x27; # 按照指定格式显示日期时间</span></span><br><span class="line">2024-02-19 10:25:06</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看时区</span></span><br><span class="line">[root@server1 ~]<span class="comment"># timedatectl | grep &quot;Time zone&quot;</span></span><br><span class="line">       Time zone: Asia/Shanghai (CST, +0800)</span><br></pre></td></tr></table></figure>

<h3 id="2-修改时区"><a href="#2-修改时区" class="headerlink" title="2. 修改时区"></a>2. 修改时区</h3><p>要做到服务器集群的时间同步，集群中各台机器的时区必须相同的，我们在国内就使用中国时区，如果你的机器的时区不是”Asia&#x2F;Shanghai”，需要修改时区</p>
<p>CentOS 中时区是以文件形式存在，当前正在使用的时区文件位于</p>
<p><code>/etc/localtime</code>，其他时区文件则位于<code>/usr/share/zoneinfo</code>下，中国时区的文件全路径是<code>/usr/share/zoneinfo/Asia/Shanghai</code></p>
<h4 id="1-如果系统中有-usr-share-zoneinfo-Asia-Shanghai这个文件"><a href="#1-如果系统中有-usr-share-zoneinfo-Asia-Shanghai这个文件" class="headerlink" title="(1) 如果系统中有/usr/share/zoneinfo/Asia/Shanghai这个文件"></a>(1) 如果系统中有<code>/usr/share/zoneinfo/Asia/Shanghai</code>这个文件</h4><p>要更改时区，直接使用如下命令就OK</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>

<h4 id="2-如果没有-Asia-Shanghai-时区文件"><a href="#2-如果没有-Asia-Shanghai-时区文件" class="headerlink" title="(2) 如果没有 Asia&#x2F;Shanghai 时区文件"></a>(2) 如果没有 Asia&#x2F;Shanghai 时区文件</h4><p>需要使用 <code>tzselect</code> 命令去生成时区文件，生成好的时区文件就在&#x2F;usr&#x2F;share&#x2F;zoneinfo 目录下，具体步骤去下：</p>
<ul>
<li>&lt;1&gt; 执行tzselect命令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># tzselect</span></span><br><span class="line">Please identify a location so that time zone rules can be <span class="built_in">set</span> correctly.</span><br><span class="line">Please <span class="keyword">select</span> a continent or ocean.</span><br><span class="line"> 1) Africa</span><br><span class="line"> 2) Americas</span><br><span class="line"> 3) Antarctica</span><br><span class="line"> 4) Arctic Ocean</span><br><span class="line"> 5) Asia</span><br><span class="line"> 6) Atlantic Ocean</span><br><span class="line"> 7) Australia</span><br><span class="line"> 8) Europe</span><br><span class="line"> 9) Indian Ocean</span><br><span class="line">10) Pacific Ocean</span><br><span class="line">11) none - I want to specify the time zone using the Posix TZ format.</span><br><span class="line"><span class="comment">#? 5 # 选亚洲</span></span><br><span class="line">Please <span class="keyword">select</span> a country.</span><br><span class="line"> 1) Afghanistan       18) Israel            35) Palestine</span><br><span class="line"> 2) Armenia       19) Japan         36) Philippines</span><br><span class="line"> 3) Azerbaijan        20) Jordan            37) Qatar</span><br><span class="line"> 4) Bahrain       21) Kazakhstan        38) Russia</span><br><span class="line"> 5) Bangladesh        22) Korea (North)     39) Saudi Arabia</span><br><span class="line"> 6) Bhutan        23) Korea (South)     40) Singapore</span><br><span class="line"> 7) Brunei        24) Kuwait            41) Sri Lanka</span><br><span class="line"> 8) Cambodia          25) Kyrgyzstan        42) Syria</span><br><span class="line"> 9) China         26) Laos          43) Taiwan</span><br><span class="line">10) Cyprus        27) Lebanon           44) Tajikistan</span><br><span class="line">11) East Timor        28) Macau         45) Thailand</span><br><span class="line">12) Georgia       29) Malaysia          46) Turkmenistan</span><br><span class="line">13) Hong Kong         30) Mongolia          47) United Arab Emirates</span><br><span class="line">14) India         31) Myanmar (Burma)       48) Uzbekistan</span><br><span class="line">15) Indonesia         32) Nepal         49) Vietnam</span><br><span class="line">16) Iran          33) Oman          50) Yemen</span><br><span class="line">17) Iraq          34) Pakistan</span><br><span class="line"><span class="comment">#? 9 # 选中国</span></span><br><span class="line">Please <span class="keyword">select</span> one of the following time zone regions.</span><br><span class="line">1) Beijing Time</span><br><span class="line">2) Xinjiang Time</span><br><span class="line"><span class="comment">#? 1 # 只能选择北京时间和新疆时间，但即使选择了北京时间，最后生成的也是上海时区的文件</span></span><br><span class="line"></span><br><span class="line">The following information has been given:</span><br><span class="line"></span><br><span class="line">    China</span><br><span class="line">    Beijing Time</span><br><span class="line"></span><br><span class="line">Therefore TZ=<span class="string">&#x27;Asia/Shanghai&#x27;</span> will be used.</span><br><span class="line">Local time is now:  Thu Nov 23 04:44:37 CST 2017.</span><br><span class="line">Universal Time is now:  Wed Nov 22 20:44:37 UTC 2017.</span><br><span class="line">Is the above information OK?</span><br><span class="line">1) Yes</span><br><span class="line">2) No</span><br><span class="line"><span class="comment">#? 1 # 确认</span></span><br><span class="line"></span><br><span class="line">You can make this change permanent <span class="keyword">for</span> yourself by appending the line</span><br><span class="line">    TZ=<span class="string">&#x27;Asia/Shanghai&#x27;</span>; <span class="built_in">export</span> TZ</span><br><span class="line">to the file <span class="string">&#x27;.profile&#x27;</span> <span class="keyword">in</span> your home directory; <span class="keyword">then</span> <span class="built_in">log</span> out and <span class="built_in">log</span> <span class="keyword">in</span> again.</span><br><span class="line"></span><br><span class="line">Here is that TZ value again, this time on standard output so that you</span><br><span class="line">can use the /usr/bin/tzselect <span class="built_in">command</span> <span class="keyword">in</span> shell scripts:</span><br><span class="line">Asia/Shanghai <span class="comment"># 很无奈，不是北京，但问题不大</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>&lt;2&gt; 执行<code>cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code>这个命令</p>
</li>
<li><p>&lt;3&gt; 执行<code>cat /etc/sysconfig/clock</code>命令验证，如果ZONE的值不是<code>Asia/Shanghai</code>，手动改为这个值，注意，不执行第&lt;1&gt;步直接手动修改是无效果的</p>
</li>
</ul>
<h3 id="3-集群时间同步方法一：手动修改"><a href="#3-集群时间同步方法一：手动修改" class="headerlink" title="3. 集群时间同步方法一：手动修改"></a>3. 集群时间同步方法一：手动修改</h3><p>使用<code>date -s</code>命令来修改系统时间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># date -s 12/25/2016</span></span><br><span class="line">[root@server1 ~]<span class="comment"># date -s 19:57:30</span></span><br><span class="line">[root@server1 ~]<span class="comment"># date -s &quot;2024-02-19 13:50:30&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动修改后，使用以下命令，把系统时间写入主板，这样，即使服务器关机或断电，时间也会更新</span></span><br><span class="line">[root@server1 ~]<span class="comment"># hwclock -w</span></span><br></pre></td></tr></table></figure>

<p>让集群所有的服务器的时间同步，就用远程连接工具连接所有服务器，然后在所有的服务器中同时执行<code>date -s</code>命令设置时间，然后在所有的服务器中执行<code>hwclock -w</code>命令即可</p>
<h3 id="4-集群时间同步方法二：自动同步网络时间-需要网络"><a href="#4-集群时间同步方法二：自动同步网络时间-需要网络" class="headerlink" title="4. 集群时间同步方法二：自动同步网络时间(需要网络)"></a>4. 集群时间同步方法二：自动同步网络时间(需要网络)</h3><h4 id="1-通过外网同步时间"><a href="#1-通过外网同步时间" class="headerlink" title="(1) 通过外网同步时间"></a>(1) 通过外网同步时间</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># ntpdate ntp.ntsc.ac.cn</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">[root@server1 ~]<span class="comment"># ntpdate 114.118.7.163</span></span><br></pre></td></tr></table></figure>

<p>上海交通大学网络中心NTP服务器地址：ntp.sjtu.edu.cn（17.253.116.125）</p>
<p>中国国家授时中心服务器地址：ntp.ntsc.ac.cn（114.118.7.163）</p>
<p>若以上提供的网络时间服务器不可用，请自行上网寻找可用的网络时间服务器</p>
<h4 id="2-设置自动执行任务，定时更新时间"><a href="#2-设置自动执行任务，定时更新时间" class="headerlink" title="(2)设置自动执行任务，定时更新时间"></a>(2)设置自动执行任务，定时更新时间</h4><p>&lt;1&gt; 使用命令：<code>crontab -e</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># crontab -e</span></span><br></pre></td></tr></table></figure>

<p>&lt;2&gt; 然后往里加入一行内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*/10 * * * * /usr/sbin/ntpdate ntp.ntsc.ac.cn</span><br></pre></td></tr></table></figure>

<p>上面的配置表示，每隔十分钟从 <code>ntp.ntsc.ac.cn</code>该时间服务器同步一次时间。</p>
<p>&lt;3&gt; 保存退出</p>
<p>&lt;4&gt;确认是否执行成功，查看日志，寻找相关关键字</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># cat /var/log/cron |grep ntpdate</span></span><br><span class="line">Feb 19 13:30:01 server1 CROND[12627]: (root) CMD (/usr/sbin/ntpdate ntp.ntsc.ac.cn)</span><br><span class="line">Feb 19 13:40:01 server1 CROND[13120]: (root) CMD (/usr/sbin/ntpdate ntp.ntsc.ac.cn)</span><br><span class="line"></span><br><span class="line">and</span><br><span class="line"></span><br><span class="line">[root@server1 ~]<span class="comment"># tail /var/spool/mail/root -n 20</span></span><br><span class="line"><span class="built_in">id</span> 2D1763C2F5; Mon, 19 Feb 2024 13:40:10 +0800 (CST)</span><br><span class="line">From: <span class="string">&quot;(Cron Daemon)&quot;</span> &lt;root@server1.localdomain&gt;</span><br><span class="line">To: root@server1.localdomain</span><br><span class="line">Subject: Cron &lt;root@server1&gt; /usr/sbin/ntpdate ntp.ntsc.ac.cn</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Auto-Submitted: auto-generated</span><br><span class="line">Precedence: bulk</span><br><span class="line">X-Cron-Env: &lt;XDG_SESSION_ID=19&gt;</span><br><span class="line">X-Cron-Env: &lt;XDG_RUNTIME_DIR=/run/user/0&gt;</span><br><span class="line">X-Cron-Env: &lt;LANG=en_US.UTF-8&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;PATH=/usr/bin:/bin&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">X-Cron-Env: &lt;USER=root&gt;</span><br><span class="line">Message-Id: &lt;20240219054010.2D1763C2F5@server1.localdomain&gt;</span><br><span class="line">Date: Mon, 19 Feb 2024 13:40:10 +0800 (CST)</span><br><span class="line"></span><br><span class="line">19 Feb 13:40:10 ntpdate[13120]: adjust time server 114.118.7.161 offset 0.084765 sec</span><br></pre></td></tr></table></figure>



<h4 id="3-说明"><a href="#3-说明" class="headerlink" title="(3) 说明"></a>(3) 说明</h4><p>以上两步操作可以让server1这个服务器每隔10分钟去指定的服务器同步时间，如果需要让集群中的所有服务器时间同步，那么每台服务器都要做以上两步操作。</p>
<h3 id="5-集群时间同步方法三：局域网内选一台服务器作为时间服务器，其他服务器从局域网内的时间服务器更新时间，同时局域网内的时间服务器向外网时间服务器同步时间"><a href="#5-集群时间同步方法三：局域网内选一台服务器作为时间服务器，其他服务器从局域网内的时间服务器更新时间，同时局域网内的时间服务器向外网时间服务器同步时间" class="headerlink" title="5. 集群时间同步方法三：局域网内选一台服务器作为时间服务器，其他服务器从局域网内的时间服务器更新时间，同时局域网内的时间服务器向外网时间服务器同步时间"></a>5. 集群时间同步方法三：局域网内选一台服务器作为时间服务器，其他服务器从局域网内的时间服务器更新时间，同时局域网内的时间服务器向外网时间服务器同步时间</h3><p>server1的IP为192.168.47.120，让它作为时间服务器，192.168.47.0局域网内的所有服务器都向它同步时间，而server1这台时间服务器本身，向外网时间服务器同步时间(比如中国国家授时中心服务器)</p>
<h4 id="1-选择一台服务器作为NTP服务器"><a href="#1-选择一台服务器作为NTP服务器" class="headerlink" title="(1) 选择一台服务器作为NTP服务器"></a>(1) 选择一台服务器作为NTP服务器</h4><p>我用server1</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># yum install ntp -y</span></span><br></pre></td></tr></table></figure>



<h4 id="2-给局域网所有需要同步时间的服务器安装ntp服务"><a href="#2-给局域网所有需要同步时间的服务器安装ntp服务" class="headerlink" title="(2) 给局域网所有需要同步时间的服务器安装ntp服务"></a>(2) 给局域网所有需要同步时间的服务器安装ntp服务</h4><h4 id="3-给所有的需要同步时间的机器-包括server1-设置ntp服务开机自启动，但不要启动服务"><a href="#3-给所有的需要同步时间的机器-包括server1-设置ntp服务开机自启动，但不要启动服务" class="headerlink" title="(3) 给所有的需要同步时间的机器(包括server1)设置ntp服务开机自启动，但不要启动服务"></a>(3) 给所有的需要同步时间的机器(包括server1)设置ntp服务开机自启动，但不要启动服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br></pre></td></tr></table></figure>

<h4 id="4-修改server1的配置文件-etc-ntp-conf"><a href="#4-修改server1的配置文件-etc-ntp-conf" class="headerlink" title="(4) 修改server1的配置文件/etc/ntp.conf"></a>(4) 修改server1的配置文件<code>/etc/ntp.conf</code></h4><p>我去掉了所有的默认注释，对其中的修改写了自己的注释，没有写注释的是默认配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">driftfile /var/lib/ntp/drift</span><br><span class="line"></span><br><span class="line">restrict default nomodify notrap nopeer noquery</span><br><span class="line"></span><br><span class="line">restrict 127.0.0.1 </span><br><span class="line">restrict ::1</span><br><span class="line"></span><br><span class="line"><span class="comment">#注释掉默认的</span></span><br><span class="line"><span class="comment">#server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 3.centos.pool.ntp.org iburst</span></span><br><span class="line"></span><br><span class="line">server 0.asia.pool.ntp.org</span><br><span class="line">server 1.asia.pool.ntp.org</span><br><span class="line">server 2.asia.pool.ntp.org</span><br><span class="line">server 3.asia.pool.ntp.org</span><br><span class="line">或者</span><br><span class="line">server ntp1.aliyun.com</span><br><span class="line">server ntp2.aliyun.com</span><br><span class="line">server ntp3.aliyun.com</span><br><span class="line">server ntp4.aliyun.com</span><br><span class="line">server ntp5.aliyun.com</span><br><span class="line">或者</span><br><span class="line">server ntp.ntsc.ac.cn</span><br><span class="line"></span><br><span class="line">restrict 192.168.47.0 netmask 255.255.255.0 nomodify notrap</span><br><span class="line"></span><br><span class="line">includefile /etc/ntp/crypto/pw</span><br><span class="line"></span><br><span class="line">keys /etc/ntp/keys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">disable</span> monitor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步时间后，写到硬件中</span></span><br><span class="line">SYNC_HWCLOCK=<span class="built_in">yes</span></span><br></pre></td></tr></table></figure>

<h3 id="5-启动ntpd服务之前，手动同步一下时间"><a href="#5-启动ntpd服务之前，手动同步一下时间" class="headerlink" title="(5) 启动ntpd服务之前，手动同步一下时间"></a>(5) 启动ntpd服务之前，手动同步一下时间</h3><p>因为ntpd服务开启之后，就不能手动同步时间了，那么为什么要先手动同步时间呢？</p>
<p><strong>当server(中国国家授时中心服务器)与client(server1)之间的时间误差过大时（可能是1000秒），server1去同步时间可能对系统和应用带来不可预知的问题，server1将停止时间同步！所以如果发现server1启动之后时间并不进行同步时，应该考虑到可能是时间差过大引起的，此时需要先手动进行时间同步！</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ntpdate ntp.ntsc.ac.cn</span><br></pre></td></tr></table></figure>



<h3 id="6-启动server1的ntpd服务"><a href="#6-启动server1的ntpd服务" class="headerlink" title="(6) 启动server1的ntpd服务"></a>(6) 启动server1的ntpd服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# systemctl start ntpd.service</span><br></pre></td></tr></table></figure>

<h3 id="7-检查ntp状态"><a href="#7-检查ntp状态" class="headerlink" title="(7) 检查ntp状态"></a>(7) 检查ntp状态</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># systemctl status ntpd</span></span><br><span class="line">● ntpd.service - Network Time Service</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/ntpd.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Mon 2024-02-19 14:02:57 CST; 42s ago</span><br><span class="line">  Process: 1592 ExecStart=/usr/sbin/ntpd -u ntp:ntp <span class="variable">$OPTIONS</span> (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 1593 (ntpd)</span><br><span class="line">   CGroup: /system.slice/ntpd.service</span><br><span class="line">           └─1593 /usr/sbin/ntpd -u ntp:ntp -g</span><br><span class="line"></span><br><span class="line">Feb 19 14:02:57 server1 ntpd[1593]: Listen and drop on 1 v6wildcard :: UDP 123</span><br><span class="line">Feb 19 14:02:57 server1 ntpd[1593]: Listen normally on 2 lo 127.0.0.1 UDP 123</span><br><span class="line">Feb 19 14:02:57 server1 ntpd[1593]: Listen normally on 3 ens33 192.168.47.120 UDP 123</span><br><span class="line">Feb 19 14:02:57 server1 ntpd[1593]: Listen normally on 4 lo ::1 UDP 123</span><br><span class="line">Feb 19 14:02:57 server1 ntpd[1593]: Listen normally on 5 ens33 fe80::20c:29ff:fe69:c8a0 UDP 123</span><br><span class="line">Feb 19 14:02:57 server1 ntpd[1593]: Listening on routing socket on fd <span class="comment">#22 for interface updates</span></span><br><span class="line">Feb 19 14:02:57 server1 systemd[1]: Started Network Time Service.</span><br><span class="line">Feb 19 14:03:02 server1 ntpd[1593]: 0.0.0.0 c016 06 restart</span><br><span class="line">Feb 19 14:03:02 server1 ntpd[1593]: 0.0.0.0 c012 02 freq_set kernel 0.000 PPM</span><br><span class="line">Feb 19 14:03:02 server1 ntpd[1593]: 0.0.0.0 c011 01 freq_not_set</span><br></pre></td></tr></table></figure>

<h3 id="7-查看网络中的NTP服务器，显示客户端和每个服务器的关系"><a href="#7-查看网络中的NTP服务器，显示客户端和每个服务器的关系" class="headerlink" title="(7) 查看网络中的NTP服务器，显示客户端和每个服务器的关系"></a>(7) 查看网络中的NTP服务器，显示客户端和每个服务器的关系</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># ntpq -p</span></span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line"> 236.99.217.185. 192.114.63.250   3 u   53   64    3  329.852   16.259   3.229</span><br><span class="line"> ntp.xtom.com.hk 118.143.17.83    2 u   54   64    1   65.072   11.479   0.000</span><br><span class="line"> ntp5.mum-in.hos 36.224.68.195    2 u   54   64    3  236.350  -31.003 114.595</span><br><span class="line"> ns2.ads.net.id  203.4.241.5      2 u   55   64    3  416.763  -20.510   2.412</span><br></pre></td></tr></table></figure>



<p>这里的前4行就是我们配置的4个时间服务器的信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 授时中心服务器地址</span><br><span class="line">server 0.asia.pool.ntp.org</span><br><span class="line">server 1.asia.pool.ntp.org</span><br><span class="line">server 2.asia.pool.ntp.org</span><br><span class="line">server 3.asia.pool.ntp.org</span><br></pre></td></tr></table></figure>

<p>最后一行就是本地时间服务的信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 外部时间服务器不可用时，以本地时间作为时间服务</span><br><span class="line">server  127.127.1.0</span><br><span class="line">fudge   127.127.1.0 stratum 10</span><br></pre></td></tr></table></figure>

<p>下面对每个列的意义进行说明：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#remote地址前的符号：</span></span><br><span class="line">`*`：响应的NTP服务器和最精确的服务器；</span><br><span class="line">`+`：响应这个查询请求的NTP服务器；</span><br><span class="line">`blank(什么都没有)`：没有响应的NTP服务器 </span><br><span class="line"><span class="comment">#说明： </span></span><br><span class="line">ntp服务启动后，一般需要5-10分钟左右的时候才能与外部时间服务器开始同步时间，所以需要等待几分钟才能看到正常的现象，否则你看到的是响应的NTP服务器和最精确的服务器是LOCAL(0)，最后一行前面是`*`符号，其他都是空白</span><br><span class="line"></span><br><span class="line">-remote 响应这个请求的NTP服务器的名称</span><br><span class="line">-refid NTP服务器使用的更高一级服务器的名称</span><br><span class="line">-st 正在响应请求的NTP服务器的级别</span><br><span class="line">-when 上一次成功请求之后到现在的秒数</span><br><span class="line">-poll 本地和远程服务器多少时间进行一次同步，单位秒，在一开始运行NTP的时候这个poll值会比较小，服务器同步的频率大，可以尽快调整到正确的时间范围，之后poll值会逐渐增大，同步的频率也就会相应减小</span><br><span class="line">-reach 用来测试能否和服务器连接，是一个八进制值，每成功连接一次它的值就会增加</span><br><span class="line">-delay 从本地机发送同步要求到ntp服务器的往返时间</span><br><span class="line">-offset 主机通过NTP时钟同步与所同步时间源的时间偏移量，单位为毫秒，offset越接近于0，主机和ntp服务器的时间越接近 </span><br><span class="line">-jitter 统计了在特定个连续的连接数里offset的分布情况。简单地说这个数值的绝对值越小，主机的时间就越精确</span><br></pre></td></tr></table></figure>

<h3 id="8-查看server1的ntp服务状态"><a href="#8-查看server1的ntp服务状态" class="headerlink" title="(8) 查看server1的ntp服务状态"></a>(8) 查看server1的ntp服务状态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# ntpstat</span><br><span class="line">synchronised to NTP server (116.12.47.30) at stratum 3</span><br><span class="line">   time correct to within 483 ms</span><br><span class="line">   polling server every 64 s</span><br></pre></td></tr></table></figure>

<p>同样，服务启动后需要等待5-10分钟才能看到这个正常的信息</p>
<p>到这里，我们局域网内的时间服务器server1就已经配置完毕了</p>
<h3 id="9-配置客户端向server1同步时间"><a href="#9-配置客户端向server1同步时间" class="headerlink" title="(9) 配置客户端向server1同步时间"></a>(9) 配置客户端向server1同步时间</h3><h4 id="修改每台客户端的-etc-ntp-conf配置文件"><a href="#修改每台客户端的-etc-ntp-conf配置文件" class="headerlink" title="&lt;1&gt; 修改每台客户端的/etc/ntp.conf配置文件"></a>&lt;1&gt; 修改每台客户端的<code>/etc/ntp.conf</code>配置文件</h4><p>文件内容如下：</p>
<p>同样，没有写注释的都是默认的配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">driftfile /var/lib/ntp/drift</span><br><span class="line"></span><br><span class="line">restrict default nomodify notrap nopeer noquery</span><br><span class="line"></span><br><span class="line">restrict 127.0.0.1 </span><br><span class="line">restrict ::1</span><br><span class="line"></span><br><span class="line"><span class="comment">#注释掉默认的</span></span><br><span class="line"><span class="comment">#server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 3.centos.pool.ntp.org iburst</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从server1中同步时间</span></span><br><span class="line">server 192.168.47.120</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许server1修改本地时间</span></span><br><span class="line">restrict 192.168.47.120 nomodify notrap noquery</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果server1不可用，用本地的时间服务</span></span><br><span class="line">server 127.127.1.0</span><br><span class="line">fudge 127.127.1.0 stratum 10</span><br><span class="line"></span><br><span class="line">includefile /etc/ntp/crypto/pw</span><br><span class="line"></span><br><span class="line">keys /etc/ntp/keys</span><br><span class="line"><span class="built_in">disable</span> monitor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步时间后，写到硬件中</span></span><br><span class="line">SYNC_HWCLOCK=<span class="built_in">yes</span></span><br></pre></td></tr></table></figure>



<h4 id="每台客户端在启动ntpd服务之前，手动同步一下时间"><a href="#每台客户端在启动ntpd服务之前，手动同步一下时间" class="headerlink" title="&lt;2&gt; 每台客户端在启动ntpd服务之前，手动同步一下时间"></a>&lt;2&gt; 每台客户端在启动ntpd服务之前，手动同步一下时间</h4><p>原因同(5)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@server3 ~]# ntpdate ntp.ntsc.ac.cn</span><br></pre></td></tr></table></figure>

<h4 id="启动每台客户端的ntpd服务"><a href="#启动每台客户端的ntpd服务" class="headerlink" title="&lt;3&gt; 启动每台客户端的ntpd服务"></a>&lt;3&gt; 启动每台客户端的ntpd服务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@server3 ~]# systemctl start ntpd</span><br></pre></td></tr></table></figure>

<h4 id="等待5-10分钟后，查看每个客户端的状态"><a href="#等待5-10分钟后，查看每个客户端的状态" class="headerlink" title="&lt;4&gt; 等待5-10分钟后，查看每个客户端的状态"></a>&lt;4&gt; 等待5-10分钟后，查看每个客户端的状态</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server3 ~]<span class="comment"># ntpq -p</span></span><br></pre></td></tr></table></figure>



<p>到这里，利用局域网内一台时间服务器来同步整个集群时间的全部配置就已经完成</p>
<h3 id="10-测试-在几台服务器同时执性date命令"><a href="#10-测试-在几台服务器同时执性date命令" class="headerlink" title="(10) 测试,在几台服务器同时执性date命令"></a>(10) 测试,在几台服务器同时执性date命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]# date &#x27;+%Y-%m-%d %H:%M:%S&#x27;</span><br><span class="line">2024-02-19 14:27:57</span><br><span class="line">[root@server3 ~]# date &#x27;+%Y-%m-%d %H:%M:%S&#x27;</span><br><span class="line">2024-02-19 14:27:51</span><br></pre></td></tr></table></figure>

<p>说明：若以上提供的网络时间服务器不可用，请自行上网寻找可用的网络时间服务器，另外需要关闭各服务器的防火墙，才能进行时间同步</p>
<h3 id="附：常见的时间服务器"><a href="#附：常见的时间服务器" class="headerlink" title="附：常见的时间服务器"></a>附：常见的时间服务器</h3><table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">公共NTP服务器地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">国家授时中心 NTP 服务器 NTSC NTP Server</td>
<td align="center">ntp.ntsc.ac.cn</td>
</tr>
<tr>
<td align="center">中国 NTP 快速授时服务 NTP ORG CN</td>
<td align="center">cn.ntp.org.cn</td>
</tr>
<tr>
<td align="center">上海交大NTP 服务器</td>
<td align="center">ntp.sjtu.edu.cn</td>
</tr>
<tr>
<td align="center">清华大学NTP服务器</td>
<td align="center">ntp.tuna.tsinghua.edu.cn</td>
</tr>
<tr>
<td align="center">国际 NTP 快速授时服务 中国片区</td>
<td align="center">cn.pool.ntp.org</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Linux</category>
        <category>进阶教程</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>进阶教程</tag>
      </tags>
  </entry>
  <entry>
    <title>LVM服务器根目录扩容</title>
    <url>/2024/01/18/lvm%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%89%A9%E5%AE%B9/</url>
    <content><![CDATA[<h1 id="LVM服务器根目录扩容"><a href="#LVM服务器根目录扩容" class="headerlink" title="LVM服务器根目录扩容"></a>LVM服务器根目录扩容</h1><h2 id="新增加一块硬盘的情况"><a href="#新增加一块硬盘的情况" class="headerlink" title="新增加一块硬盘的情况"></a>新增加一块硬盘的情况</h2><h3 id="1-给根分区扩展容量"><a href="#1-给根分区扩展容量" class="headerlink" title="1.给根分区扩展容量"></a>1.给根分区扩展容量</h3><ul>
<li>使用<code>fdisk-l</code> 查看磁盘分区路径<br>先在虚拟机里增加一块磁盘</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">磁盘 /dev/sda：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x000a0ffa</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200    41943039    19921920   8e  Linux LVM</span><br><span class="line"></span><br><span class="line"><span class="comment">#这一个是新加的</span></span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个是原来的/目录</span></span><br><span class="line">磁盘 /dev/mapper/centos-root：18.2 GB, 18249416704 字节，35643392 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-swap：2147 MB, 2147483648 字节，4194304 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br></pre></td></tr></table></figure>

<h3 id="2-使用fdisk-dev-sdb-给新增硬盘进行分区"><a href="#2-使用fdisk-dev-sdb-给新增硬盘进行分区" class="headerlink" title="2.使用fdisk &#x2F;dev&#x2F;sdb 给新增硬盘进行分区"></a>2.使用fdisk &#x2F;dev&#x2F;sdb 给新增硬盘进行分区</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk /dev/sdb</span></span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">使用磁盘标识符 0x5371ec78 创建新的 DOS 磁盘标签。</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">分区号 (1-4，默认 1)：</span><br><span class="line">起始 扇区 (2048-41943039，默认为 2048)：</span><br><span class="line">将使用默认值 2048</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-41943039，默认为 41943039)：</span><br><span class="line">将使用默认值 41943039</span><br><span class="line">分区 1 已设置为 Linux 类型，大小设为 20 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x5371ec78</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048    41943039    20970496   83  Linux</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：w</span><br></pre></td></tr></table></figure>

<h3 id="3-确定新增成功"><a href="#3-确定新增成功" class="headerlink" title="3.确定新增成功"></a>3.确定新增成功</h3><p><code>fdisk -l</code> 确定&#x2F;dev&#x2F;sdb&#x2F;新增分区成功 新分区为&#x2F;dev&#x2F;sdb1</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">磁盘 /dev/sda：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x000a0ffa</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200    41943039    19921920   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x5371ec78</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048    41943039    20970496   83  Linux</span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-root：18.2 GB, 18249416704 字节，35643392 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br></pre></td></tr></table></figure>

<h3 id="4-使用LVM-给根分区扩展空间"><a href="#4-使用LVM-给根分区扩展空间" class="headerlink" title="4.使用LVM 给根分区扩展空间"></a>4.使用LVM 给根分区扩展空间</h3><ul>
<li>使用vgdisplay 命令查看VG 组名</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos</span><br></pre></td></tr></table></figure>

<h3 id="5-使用vgextend-命令把新增磁盘追加到centos-VG组"><a href="#5-使用vgextend-命令把新增磁盘追加到centos-VG组" class="headerlink" title="5.使用vgextend 命令把新增磁盘追加到centos VG组"></a>5.使用vgextend 命令把新增磁盘追加到centos VG组</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vgextend centos /dev/sdb1</span></span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sdb1&quot;</span> successfully created.</span><br><span class="line">  Volume group <span class="string">&quot;centos&quot;</span> successfully extended</span><br></pre></td></tr></table></figure>

<h3 id="6-添加完成之后使用vgdisplay-查看是否扩容成功"><a href="#6-添加完成之后使用vgdisplay-查看是否扩容成功" class="headerlink" title="6.添加完成之后使用vgdisplay 查看是否扩容成功"></a>6.添加完成之后使用vgdisplay 查看是否扩容成功</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos</span><br><span class="line">  System ID</span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        2</span><br><span class="line">  Metadata Sequence No  4</span><br><span class="line">  VG Access             <span class="built_in">read</span>/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                2</span><br><span class="line">  Open LV               2</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                2</span><br><span class="line">  Act PV                2</span><br><span class="line">  VG Size               38.99 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              9982</span><br><span class="line">  Alloc PE / Size       4863 / &lt;19.00 GiB</span><br><span class="line">  Free  PE / Size       5119 / &lt;20.00 GiB   <span class="comment">#看这个</span></span><br><span class="line">  VG UUID               uIB4kO-ywhz-ee5U-DzS7-Kja6-sPvZ-rbi3Bl</span><br></pre></td></tr></table></figure>

<h3 id="7-使用lvdisplay确定根分区路径"><a href="#7-使用lvdisplay确定根分区路径" class="headerlink" title="7.使用lvdisplay确定根分区路径"></a>7.使用lvdisplay确定根分区路径</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvdisplay</span></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/root  <span class="comment">#这里</span></span><br><span class="line">  LV Name                root</span><br><span class="line">  VG Name                centos</span><br><span class="line">  LV UUID                VrUURF-GOCQ-TvkL-Yd4O-OYJk-ZMBo-gqMEaI</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost, 2023-09-14 13:18:10 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 1</span></span><br><span class="line">  LV Size                &lt;17.00 GiB</span><br><span class="line">  Current LE             4351</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     8192</span><br><span class="line">  Block device           253:0</span><br></pre></td></tr></table></figure>

<h3 id="8-使用lvresize-给根分区扩展空间"><a href="#8-使用lvresize-给根分区扩展空间" class="headerlink" title="8.使用lvresize 给根分区扩展空间"></a>8.使用lvresize 给根分区扩展空间</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lvresize  -L +20G  /dev/centos/root</span></span><br><span class="line"><span class="comment">#分区增加必须得加-L +20G,如果不写+号会改变原磁盘空间</span></span><br><span class="line">  Size of logical volume centos/root changed from &lt;17.00 GiB (4351 extents) to &lt;36.00 GiB (9215 extents).</span><br><span class="line">  Logical volume centos/root successfully resized.</span><br></pre></td></tr></table></figure>

<h3 id="9-根分区磁盘增加成功之后使用xfs-growfs-dev-centos-root-格式化磁盘空间"><a href="#9-根分区磁盘增加成功之后使用xfs-growfs-dev-centos-root-格式化磁盘空间" class="headerlink" title="9.根分区磁盘增加成功之后使用xfs_growfs &#x2F;dev&#x2F;centos&#x2F;root 格式化磁盘空间"></a>9.根分区磁盘增加成功之后使用xfs_growfs &#x2F;dev&#x2F;centos&#x2F;root 格式化磁盘空间</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># xfs_growfs /dev/centos/root</span></span><br><span class="line">meta-data=/dev/mapper/centos-root isize=512    agcount=4, agsize=1113856 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=4455424, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal               bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =bash                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 4455424 to 9436160</span><br></pre></td></tr></table></figure>

<h3 id="10-确认一下"><a href="#10-确认一下" class="headerlink" title="10.确认一下"></a>10.确认一下</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># df -h</span></span><br><span class="line">文件系统                 容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                 898M     0  898M    0% /dev</span><br><span class="line">tmpfs                    910M     0  910M    0% /dev/shm</span><br><span class="line">tmpfs                    910M  9.6M  901M    2% /run</span><br><span class="line">tmpfs                    910M     0  910M    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root   36G  1.3G   35G    4% /  <span class="comment">#增加了</span></span><br><span class="line">/dev/sda1               1014M  151M  864M   15% /boot</span><br><span class="line">tmpfs                    182M     0  182M    0% /run/user/0</span><br></pre></td></tr></table></figure>
<h2 id="在原有空间上修改磁盘大小的情况"><a href="#在原有空间上修改磁盘大小的情况" class="headerlink" title="在原有空间上修改磁盘大小的情况"></a>在原有空间上修改磁盘大小的情况</h2><p><img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/xunihua.png"></p>
<ul>
<li>比如从50G,直接修改成100G，新增加的磁盘是不识别的</li>
</ul>
<h3 id="1-新建分区"><a href="#1-新建分区" class="headerlink" title="1.新建分区"></a>1.新建分区</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk /dev/sda</span><br><span class="line">n</span><br><span class="line">p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">w</span><br><span class="line"><span class="comment">#使用lvm方式的话，是下面的操作，上面是基于传统的分区</span></span><br><span class="line">fdisk /dev/sda</span><br><span class="line">n</span><br><span class="line">p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t</span><br><span class="line"></span><br><span class="line">L</span><br><span class="line">8e</span><br><span class="line">w</span><br></pre></td></tr></table></figure>

<h3 id="2-对新增的磁盘处理"><a href="#2-对新增的磁盘处理" class="headerlink" title="2.对新增的磁盘处理"></a>2.对新增的磁盘处理</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">partprobe <span class="comment">#识别新增分区</span></span><br><span class="line"></span><br><span class="line">pvcreate /dev/sda3  <span class="comment">#使用 pvcreate 创建物理卷</span></span><br><span class="line"></span><br><span class="line">pvdisplay <span class="comment">#显示物理卷的属性 查看卷组信息</span></span><br><span class="line"></span><br><span class="line">vgextend centos /dev/sda3  <span class="comment">#使用vgextend命令动态扩展</span></span><br><span class="line"></span><br><span class="line">lvresize -L +100%FREE /dev/mapper/centos-root  <span class="comment">#扩招到/目录</span></span><br><span class="line"></span><br><span class="line">xfs_growfs /dev/mapper/centos-root <span class="comment">#重新识别/分区</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Linux</category>
        <category>运维</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>LVM</tag>
      </tags>
  </entry>
  <entry>
    <title>mount镜像挂载</title>
    <url>/2024/01/12/mount%E5%B0%8F%E7%9F%A5%E8%AF%86%E6%8C%82%E8%BD%BD%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<h1 id="mount小知识：挂载镜像"><a href="#mount小知识：挂载镜像" class="headerlink" title="mount小知识：挂载镜像"></a>mount小知识：挂载镜像</h1><h2 id="简单挂载"><a href="#简单挂载" class="headerlink" title="简单挂载"></a>简单挂载</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看一下镜像有没有连接，这里是sr0</span></span><br><span class="line">[root@server2 ~]<span class="comment"># lsblk -l</span></span><br><span class="line">NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda           8:0    0   20G  0 disk </span><br><span class="line">sda1          8:1    0    1G  0 part /boot</span><br><span class="line">sda2          8:2    0   19G  0 part </span><br><span class="line">centos-root 253:0    0   17G  0 lvm  /</span><br><span class="line">centos-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">sr0          11:0    1  988M  0 rom  </span><br><span class="line"></span><br><span class="line"><span class="comment">#创建一个挂载目录</span></span><br><span class="line">[root@server2 ~]<span class="comment"># mkdir /mnt/centos7.9</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将镜像文件挂载到目录里，-t指定一下文件系统</span></span><br><span class="line">[root@server2 ~]<span class="comment"># mount -t iso9660 /dev/sr0 /mnt/centos7.9</span></span><br><span class="line">mount: /dev/sr0 写保护，将以只读方式挂载</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以将配置写进配置文件，开机自动挂载</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/dev/sr0  /mnt/centos7.9  iso9660 defaults 0 0&quot;</span> &gt;&gt; /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果开机有错误，将配置文件里自己添加的删除了就行</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
        <category>mount</category>
      </categories>
      <tags>
        <tag>挂载</tag>
        <tag>mount</tag>
      </tags>
  </entry>
  <entry>
    <title>Python对表格列文本比对</title>
    <url>/2024/04/05/python%E8%A1%A8%E6%A0%BC%E5%88%97%E6%96%87%E6%9C%AC%E5%AF%B9%E6%AF%94/</url>
    <content><![CDATA[<h2 id="Python对表格列文本比对"><a href="#Python对表格列文本比对" class="headerlink" title="Python对表格列文本比对"></a>Python对表格列文本比对</h2><h3 id="对比前两列"><a href="#对比前两列" class="headerlink" title="对比前两列"></a>对比前两列</h3><ul>
<li>并重新排序第二列的顺序与第一列相同</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment">#表格文件格式为第一列数据多，第二列数据少为宜，最后看1、4两列就行</span></span><br><span class="line"><span class="comment"># 读取表格数据</span></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;feixing.xlsx&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 假设第一行就是列名，提取第一和第四列的列名</span></span><br><span class="line">first_column_name = df.columns[<span class="number">0</span>]</span><br><span class="line">second_column_name = df.columns[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取第一列和第二列数据</span></span><br><span class="line">first_column = df[first_column_name]</span><br><span class="line">second_column = df[second_column_name].tolist()  <span class="comment"># 将Pandas序列转为Python的列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化空的新列（相当于第三列）和调整后的第二列</span></span><br><span class="line">duplicates = []</span><br><span class="line">adjusted_second_column = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> first_column:</span><br><span class="line">    <span class="keyword">if</span> value <span class="keyword">in</span> second_column:</span><br><span class="line">        <span class="comment"># 找到第二列中相同值的索引，并添加到调整后的第二列</span></span><br><span class="line">        index = second_column.index(value)</span><br><span class="line">        adjusted_second_column.append(second_column[index])</span><br><span class="line">        <span class="keyword">del</span> second_column[index]  <span class="comment"># 删除该元素防止重复计算</span></span><br><span class="line">        duplicates.append(value)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        duplicates.append(<span class="string">&quot;&quot;</span>)</span><br><span class="line">        adjusted_second_column.append(<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将剩下的second_column的元素添加到adjusted_second_column列表的末尾</span></span><br><span class="line">adjusted_second_column += second_column</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将重复的资产编号（相当于新的第三列）写入DataFrame</span></span><br><span class="line">df[<span class="string">&#x27;重复值&#x27;</span>] = duplicates</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个新的Series来存储调整后的第二列数据</span></span><br><span class="line">adjusted_second_series = pd.Series(adjusted_second_column)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将调整后的第二列添加到DataFrame中，列名为“mod_”与原第二列名字的格式</span></span><br><span class="line">df[<span class="string">&#x27;mod_&#x27;</span> + second_column_name] = adjusted_second_series</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存修改后的表格</span></span><br><span class="line">df.to_excel(<span class="string">&#x27;修改后的表格文件.xlsx&#x27;</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<h3 id="多列信息对比填充"><a href="#多列信息对比填充" class="headerlink" title="多列信息对比填充"></a>多列信息对比填充</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取表格数据，一般第一列是需要填充的信息，二三四列是一一对应的信息，最后看五六列，列数可以自行调整</span></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;1.xlsx&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动获取前四列的列名</span></span><br><span class="line">col_1, col_2, col_3, col_4 = df.columns[:<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个字典，将第二列的标识符作为键，第三和第四列的组合作为值</span></span><br><span class="line">identifier_to_info = &#123;k: (v1, v2) <span class="keyword">for</span> k, v1, v2 <span class="keyword">in</span> <span class="built_in">zip</span>(df[col_2], df[col_3], df[col_4])&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化用于存放匹配到的第三和第四列信息的列表</span></span><br><span class="line">info_column = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> df[col_1]:</span><br><span class="line">    <span class="comment"># 在字典中查找对应的第三和第四列信息</span></span><br><span class="line">    <span class="keyword">if</span> value <span class="keyword">in</span> identifier_to_info:</span><br><span class="line">        <span class="comment"># 如果找到了匹配，将信息添加到列表中</span></span><br><span class="line">        info_column.append(identifier_to_info[value])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 如果没有找到匹配，添加空信息</span></span><br><span class="line">        info_column.append((<span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据提供的信息自动给第五列和第六列生成列名（示例）</span></span><br><span class="line">new_col_5_name = <span class="string">&#x27;&#123;&#125;的信息&#x27;</span>.<span class="built_in">format</span>(col_3) <span class="comment"># 例如：&quot;第三列的信息&quot;</span></span><br><span class="line">new_col_6_name = <span class="string">&#x27;&#123;&#125;的细节&#x27;</span>.<span class="built_in">format</span>(col_4) <span class="comment"># 例如：&quot;第四列的细节&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将列表转换为DataFrame的两列，并使用生成的列名</span></span><br><span class="line">df[new_col_5_name], df[new_col_6_name] = <span class="built_in">zip</span>(*info_column)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存修改后的表格</span></span><br><span class="line">df.to_excel(<span class="string">&#x27;修改后的表格文件.xlsx&#x27;</span>, index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<h3 id="输出两列的差异数据"><a href="#输出两列的差异数据" class="headerlink" title="输出两列的差异数据"></a>输出两列的差异数据</h3><h4 id="存在于第二列但不在第一列"><a href="#存在于第二列但不在第一列" class="headerlink" title="存在于第二列但不在第一列"></a>存在于第二列但不在第一列</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取Excel文件</span></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;2.xlsx&#x27;</span>, engine=<span class="string">&#x27;openpyxl&#x27;</span>)  <span class="comment"># 假设输入文件名为input.xlsx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将第一列和第二列的值分别转为集合</span></span><br><span class="line">set_column1 = <span class="built_in">set</span>(df[<span class="string">&#x27;Column1&#x27;</span>].dropna())</span><br><span class="line">set_column2 = <span class="built_in">set</span>(df[<span class="string">&#x27;Column2&#x27;</span>].dropna())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算第二列独有的元素</span></span><br><span class="line">unique_to_column2 = <span class="built_in">list</span>(set_column2 - set_column1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个空列表来存储输出结果</span></span><br><span class="line">difference = [<span class="literal">None</span>] * <span class="built_in">len</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 填充存在于第二列但不在第一列的值到difference列表中</span></span><br><span class="line"><span class="keyword">for</span> i, item <span class="keyword">in</span> <span class="built_in">enumerate</span>(df[<span class="string">&#x27;Column2&#x27;</span>]):</span><br><span class="line">    <span class="keyword">if</span> item <span class="keyword">in</span> unique_to_column2:</span><br><span class="line">        difference[i] = item</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将difference列表添加为新列到DataFrame中</span></span><br><span class="line">df[<span class="string">&#x27;Difference&#x27;</span>] = difference</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将修改后的DataFrame写入新的Excel文件</span></span><br><span class="line">df.to_excel(<span class="string">&#x27;output.xlsx&#x27;</span>, index=<span class="literal">False</span>, engine=<span class="string">&#x27;openpyxl&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="存在于第一列但不在第二列"><a href="#存在于第一列但不在第二列" class="headerlink" title="存在于第一列但不在第二列"></a>存在于第一列但不在第二列</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取Excel文件</span></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;2.xlsx&#x27;</span>, engine=<span class="string">&#x27;openpyxl&#x27;</span>)  <span class="comment"># 假设输入文件名为input.xlsx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将第一列和第二列的值分别转为集合</span></span><br><span class="line">set_column1 = <span class="built_in">set</span>(df[<span class="string">&#x27;Column1&#x27;</span>].dropna())</span><br><span class="line">set_column2 = <span class="built_in">set</span>(df[<span class="string">&#x27;Column2&#x27;</span>].dropna())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算第一列独有的元素</span></span><br><span class="line">unique_to_column1 = <span class="built_in">list</span>(set_column1 - set_column2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个空列表来存储输出结果</span></span><br><span class="line">difference = [<span class="literal">None</span>] * <span class="built_in">len</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 填充存在于第一列但不在第二列的值到difference列表中</span></span><br><span class="line"><span class="keyword">for</span> i, item <span class="keyword">in</span> <span class="built_in">enumerate</span>(df[<span class="string">&#x27;Column1&#x27;</span>]):</span><br><span class="line">    <span class="keyword">if</span> item <span class="keyword">in</span> unique_to_column1:</span><br><span class="line">        difference[i] = item</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将difference列表添加为新列到DataFrame中</span></span><br><span class="line">df[<span class="string">&#x27;Difference&#x27;</span>] = difference</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将修改后的DataFrame写入新的Excel文件</span></span><br><span class="line">df.to_excel(<span class="string">&#x27;output.xlsx&#x27;</span>, index=<span class="literal">False</span>, engine=<span class="string">&#x27;openpyxl&#x27;</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Python脚本</category>
      </categories>
      <tags>
        <tag>Python脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>红帽系主机信息每日巡检脚本</title>
    <url>/2024/05/08/redhat%E7%B3%BBLinux%E5%B7%A1%E6%A3%80%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h2 id="红帽系主机信息每日巡检脚本"><a href="#红帽系主机信息每日巡检脚本" class="headerlink" title="红帽系主机信息每日巡检脚本"></a>红帽系主机信息每日巡检脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#主机信息每日巡检</span></span><br><span class="line"></span><br><span class="line">IPADDR=$(ifconfig ens160|grep <span class="string">&#x27;inet addr&#x27;</span>|awk -F <span class="string">&#x27;[ :]&#x27;</span> <span class="string">&#x27;&#123;print $13&#125;&#x27;</span>)</span><br><span class="line"><span class="comment">#环境变量PATH没设好，在cron里执行时有很多命令会找不到</span></span><br><span class="line"><span class="built_in">export</span> PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line">[ $(<span class="built_in">id</span> -u) -gt 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;请用root用户执行此脚本！&quot;</span> &amp;&amp; <span class="built_in">exit</span> 1</span><br><span class="line">centosVersion=$(awk <span class="string">&#x27;&#123;print $(NF-1)&#125;&#x27;</span> /etc/redhat-release)</span><br><span class="line">VERSION=<span class="string">&quot;2024-03-16&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志相关</span></span><br><span class="line">PROGPATH=`<span class="built_in">echo</span> <span class="variable">$0</span> | sed -e <span class="string">&#x27;s,[\\/][^\\/][^\\/]*$,,&#x27;</span>`</span><br><span class="line">[ -f <span class="variable">$PROGPATH</span> ] &amp;&amp; PROGPATH=<span class="string">&quot;.&quot;</span></span><br><span class="line">LOGPATH=<span class="string">&quot;<span class="variable">$PROGPATH</span>/log&quot;</span></span><br><span class="line">[ -e <span class="variable">$LOGPATH</span> ] || <span class="built_in">mkdir</span> <span class="variable">$LOGPATH</span></span><br><span class="line">RESULTFILE=<span class="string">&quot;<span class="variable">$LOGPATH</span>/HostDailyCheck-<span class="variable">$IPADDR</span>-`date +%Y%m%d`.txt&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义报表的全局变量</span></span><br><span class="line">report_DateTime=<span class="string">&quot;&quot;</span> <span class="comment">#日期 ok</span></span><br><span class="line">report_Hostname=<span class="string">&quot;&quot;</span> <span class="comment">#主机名 ok</span></span><br><span class="line">report_OSRelease=<span class="string">&quot;&quot;</span> <span class="comment">#发行版本 ok</span></span><br><span class="line">report_Kernel=<span class="string">&quot;&quot;</span> <span class="comment">#内核 ok</span></span><br><span class="line">report_Language=<span class="string">&quot;&quot;</span> <span class="comment">#语言/编码 ok</span></span><br><span class="line">report_LastReboot=<span class="string">&quot;&quot;</span> <span class="comment">#最近启动时间 ok</span></span><br><span class="line">report_Uptime=<span class="string">&quot;&quot;</span> <span class="comment">#运行时间（天） ok</span></span><br><span class="line">report_CPUs=<span class="string">&quot;&quot;</span> <span class="comment">#CPU数量 ok</span></span><br><span class="line">report_CPUType=<span class="string">&quot;&quot;</span> <span class="comment">#CPU类型 ok</span></span><br><span class="line">report_Arch=<span class="string">&quot;&quot;</span> <span class="comment">#CPU架构 ok</span></span><br><span class="line">report_MemTotal=<span class="string">&quot;&quot;</span> <span class="comment">#内存总容量(MB) ok</span></span><br><span class="line">report_MemFree=<span class="string">&quot;&quot;</span> <span class="comment">#内存剩余(MB) ok</span></span><br><span class="line">report_MemUsedPercent=<span class="string">&quot;&quot;</span> <span class="comment">#内存使用率% ok</span></span><br><span class="line">report_DiskTotal=<span class="string">&quot;&quot;</span> <span class="comment">#硬盘总容量(GB) ok</span></span><br><span class="line">report_DiskFree=<span class="string">&quot;&quot;</span> <span class="comment">#硬盘剩余(GB) ok</span></span><br><span class="line">report_DiskUsedPercent=<span class="string">&quot;&quot;</span> <span class="comment">#硬盘使用率% ok</span></span><br><span class="line">report_InodeTotal=<span class="string">&quot;&quot;</span> <span class="comment">#Inode总量 ok</span></span><br><span class="line">report_InodeFree=<span class="string">&quot;&quot;</span> <span class="comment">#Inode剩余 ok</span></span><br><span class="line">report_InodeUsedPercent=<span class="string">&quot;&quot;</span> <span class="comment">#Inode使用率 ok</span></span><br><span class="line">report_IP=<span class="string">&quot;&quot;</span> <span class="comment">#IP地址 ok</span></span><br><span class="line">report_MAC=<span class="string">&quot;&quot;</span> <span class="comment">#MAC地址 ok</span></span><br><span class="line">report_Gateway=<span class="string">&quot;&quot;</span> <span class="comment">#默认网关 ok</span></span><br><span class="line">report_DNS=<span class="string">&quot;&quot;</span> <span class="comment">#DNS ok</span></span><br><span class="line">report_Listen=<span class="string">&quot;&quot;</span> <span class="comment">#监听 ok</span></span><br><span class="line">report_Selinux=<span class="string">&quot;&quot;</span> <span class="comment">#Selinux ok</span></span><br><span class="line">report_Firewall=<span class="string">&quot;&quot;</span> <span class="comment">#防火墙 ok</span></span><br><span class="line">report_USERs=<span class="string">&quot;&quot;</span> <span class="comment">#用户 ok</span></span><br><span class="line">report_USEREmptyPassword=<span class="string">&quot;&quot;</span> <span class="comment">#空密码用户 ok</span></span><br><span class="line">report_USERTheSameUID=<span class="string">&quot;&quot;</span> <span class="comment">#相同ID的用户 ok </span></span><br><span class="line">report_PasswordExpiry=<span class="string">&quot;&quot;</span> <span class="comment">#密码过期（天） ok</span></span><br><span class="line">report_RootUser=<span class="string">&quot;&quot;</span> <span class="comment">#root用户 ok</span></span><br><span class="line">report_Sudoers=<span class="string">&quot;&quot;</span> <span class="comment">#sudo授权 ok</span></span><br><span class="line">report_SSHAuthorized=<span class="string">&quot;&quot;</span> <span class="comment">#SSH信任主机 ok</span></span><br><span class="line">report_SSHDProtocolVersion=<span class="string">&quot;&quot;</span> <span class="comment">#SSH协议版本 ok</span></span><br><span class="line">report_SSHDPermitRootLogin=<span class="string">&quot;&quot;</span> <span class="comment">#允许root远程登录 ok</span></span><br><span class="line">report_DefunctProsess=<span class="string">&quot;&quot;</span> <span class="comment">#僵尸进程数量 ok</span></span><br><span class="line">report_SelfInitiatedService=<span class="string">&quot;&quot;</span> <span class="comment">#自启动服务数量 ok</span></span><br><span class="line">report_SelfInitiatedProgram=<span class="string">&quot;&quot;</span> <span class="comment">#自启动程序数量 ok</span></span><br><span class="line">report_RuningService=<span class="string">&quot;&quot;</span> <span class="comment">#运行中服务数 ok</span></span><br><span class="line">report_Crontab=<span class="string">&quot;&quot;</span> <span class="comment">#计划任务数 ok</span></span><br><span class="line">report_Syslog=<span class="string">&quot;&quot;</span> <span class="comment">#日志服务 ok</span></span><br><span class="line">report_SNMP=<span class="string">&quot;&quot;</span> <span class="comment">#SNMP OK</span></span><br><span class="line">report_NTP=<span class="string">&quot;&quot;</span> <span class="comment">#NTP ok</span></span><br><span class="line">report_JDK=<span class="string">&quot;&quot;</span> <span class="comment">#JDK版本 ok</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">version</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;系统巡检脚本：Version <span class="variable">$VERSION</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getCpuStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ CPU检查 #############################&quot;</span></span><br><span class="line">Physical_CPUs=$(grep <span class="string">&quot;physical id&quot;</span> /proc/cpuinfo| <span class="built_in">sort</span> | <span class="built_in">uniq</span> | <span class="built_in">wc</span> -l)</span><br><span class="line">Virt_CPUs=$(grep <span class="string">&quot;processor&quot;</span> /proc/cpuinfo | <span class="built_in">wc</span> -l)</span><br><span class="line">CPU_Kernels=$(grep <span class="string">&quot;cores&quot;</span> /proc/cpuinfo|<span class="built_in">uniq</span>| awk -F <span class="string">&#x27;: &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">CPU_Type=$(grep <span class="string">&quot;model name&quot;</span> /proc/cpuinfo | awk -F <span class="string">&#x27;: &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span>)</span><br><span class="line">CPU_Arch=$(<span class="built_in">uname</span> -m)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;物理CPU个数:<span class="variable">$Physical_CPUs</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;逻辑CPU个数:<span class="variable">$Virt_CPUs</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;每CPU核心数:<span class="variable">$CPU_Kernels</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; CPU型号:<span class="variable">$CPU_Type</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; CPU架构:<span class="variable">$CPU_Arch</span>&quot;</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_CPUs=<span class="variable">$Virt_CPUs</span> <span class="comment">#CPU数量</span></span><br><span class="line">report_CPUType=<span class="variable">$CPU_Type</span> <span class="comment">#CPU类型</span></span><br><span class="line">report_Arch=<span class="variable">$CPU_Arch</span> <span class="comment">#CPU架构</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getMemStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 内存检查 ############################&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$centosVersion</span> &lt; 7 ]];<span class="keyword">then</span></span><br><span class="line">free -h</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">free -h</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">MemTotal=$(grep MemTotal /proc/meminfo| awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>) <span class="comment">#KB</span></span><br><span class="line">MemFree=$(grep MemFree /proc/meminfo| awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>) <span class="comment">#KB</span></span><br><span class="line"><span class="built_in">let</span> MemUsed=MemTotal-MemFree</span><br><span class="line">MemPercent=$(awk <span class="string">&quot;BEGIN &#123;if(<span class="variable">$MemTotal</span>==0)&#123;printf 100&#125;else&#123;printf \&quot;%.2f\&quot;,<span class="variable">$MemUsed</span>*100/<span class="variable">$MemTotal</span>&#125;&#125;&quot;</span>)</span><br><span class="line">report_MemTotal=<span class="string">&quot;<span class="subst">$((MemTotal/1024)</span>)&quot;</span><span class="string">&quot;MB&quot;</span> <span class="comment">#内存总容量(MB)</span></span><br><span class="line">report_MemFree=<span class="string">&quot;<span class="subst">$((MemFree/1024)</span>)&quot;</span><span class="string">&quot;MB&quot;</span> <span class="comment">#内存剩余(MB)</span></span><br><span class="line">report_MemUsedPercent=<span class="string">&quot;<span class="subst">$(awk <span class="string">&quot;BEGIN &#123;if(<span class="variable">$MemTotal</span>==0)&#123;printf 100&#125;else&#123;printf \&quot;%.2f\&quot;,<span class="variable">$MemUsed</span>*100/<span class="variable">$MemTotal</span>&#125;&#125;&quot;</span>)</span>&quot;</span><span class="string">&quot;%&quot;</span> <span class="comment">#内存使用率%</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getDiskStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 磁盘检查 ############################&quot;</span></span><br><span class="line"><span class="built_in">df</span> -hiP | sed <span class="string">&#x27;s/Mounted on/Mounted/&#x27;</span>&gt; /tmp/inode</span><br><span class="line"><span class="built_in">df</span> -hTP | sed <span class="string">&#x27;s/Mounted on/Mounted/&#x27;</span>&gt; /tmp/disk </span><br><span class="line"><span class="built_in">join</span> /tmp/disk /tmp/inode | awk <span class="string">&#x27;&#123;print $1,$2,&quot;|&quot;,$3,$4,$5,$6,&quot;|&quot;,$8,$9,$10,$11,&quot;|&quot;,$12&#125;&#x27;</span>| column -t</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">diskdata=$(<span class="built_in">df</span> -TP | sed <span class="string">&#x27;1d&#x27;</span> | awk <span class="string">&#x27;$2!=&quot;tmpfs&quot;&#123;print&#125;&#x27;</span>) <span class="comment">#KB</span></span><br><span class="line">disktotal=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$diskdata</span>&quot;</span> | awk <span class="string">&#x27;&#123;total+=$3&#125;END&#123;print total&#125;&#x27;</span>) <span class="comment">#KB</span></span><br><span class="line">diskused=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$diskdata</span>&quot;</span> | awk <span class="string">&#x27;&#123;total+=$4&#125;END&#123;print total&#125;&#x27;</span>) <span class="comment">#KB</span></span><br><span class="line">diskfree=$((disktotal-diskused)) <span class="comment">#KB</span></span><br><span class="line">diskusedpercent=$(<span class="built_in">echo</span> <span class="variable">$disktotal</span> <span class="variable">$diskused</span> | awk <span class="string">&#x27;&#123;if($1==0)&#123;printf 100&#125;else&#123;printf &quot;%.2f&quot;,$2*100/$1&#125;&#125;&#x27;</span>) </span><br><span class="line">inodedata=$(<span class="built_in">df</span> -iTP | sed <span class="string">&#x27;1d&#x27;</span> | awk <span class="string">&#x27;$2!=&quot;tmpfs&quot;&#123;print&#125;&#x27;</span>)</span><br><span class="line">inodetotal=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$inodedata</span>&quot;</span> | awk <span class="string">&#x27;&#123;total+=$3&#125;END&#123;print total&#125;&#x27;</span>)</span><br><span class="line">inodeused=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$inodedata</span>&quot;</span> | awk <span class="string">&#x27;&#123;total+=$4&#125;END&#123;print total&#125;&#x27;</span>)</span><br><span class="line">inodefree=$((inodetotal-inodeused))</span><br><span class="line">inodeusedpercent=$(<span class="built_in">echo</span> <span class="variable">$inodetotal</span> <span class="variable">$inodeused</span> | awk <span class="string">&#x27;&#123;if($1==0)&#123;printf 100&#125;else&#123;printf &quot;%.2f&quot;,$2*100/$1&#125;&#125;&#x27;</span>)</span><br><span class="line">report_DiskTotal=$((disktotal/<span class="number">1024</span>/<span class="number">1024</span>))<span class="string">&quot;GB&quot;</span> <span class="comment">#硬盘总容量(GB)</span></span><br><span class="line">report_DiskFree=$((diskfree/<span class="number">1024</span>/<span class="number">1024</span>))<span class="string">&quot;GB&quot;</span> <span class="comment">#硬盘剩余(GB)</span></span><br><span class="line">report_DiskUsedPercent=<span class="string">&quot;<span class="variable">$diskusedpercent</span>&quot;</span><span class="string">&quot;%&quot;</span> <span class="comment">#硬盘使用率%</span></span><br><span class="line">report_InodeTotal=$((inodetotal/<span class="number">1000</span>))<span class="string">&quot;K&quot;</span> <span class="comment">#Inode总量</span></span><br><span class="line">report_InodeFree=$((inodefree/<span class="number">1000</span>))<span class="string">&quot;K&quot;</span> <span class="comment">#Inode剩余</span></span><br><span class="line">report_InodeUsedPercent=<span class="string">&quot;<span class="variable">$inodeusedpercent</span>&quot;</span><span class="string">&quot;%&quot;</span> <span class="comment">#Inode使用率%</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getSystemStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 系统检查 ############################&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -e /etc/sysconfig/i18n ];<span class="keyword">then</span></span><br><span class="line">default_LANG=<span class="string">&quot;<span class="subst">$(grep <span class="string">&quot;LANG=&quot;</span> /etc/sysconfig/i18n | grep -v <span class="string">&quot;^#&quot;</span> | awk -F &#x27;<span class="string">&quot;&#x27; &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">else</span></span></span><br><span class="line"><span class="subst"><span class="string">default_LANG=$LANG</span></span></span><br><span class="line"><span class="subst"><span class="string">fi</span></span></span><br><span class="line"><span class="subst"><span class="string">export LANG=<span class="string">&quot;en_US.UTF-8&quot;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">Release=$(cat /etc/redhat-release 2&gt;/dev/null)</span></span></span><br><span class="line"><span class="string">Kernel=<span class="subst">$(uname -r)</span></span></span><br><span class="line"><span class="string">OS=<span class="subst">$(uname -o)</span></span></span><br><span class="line"><span class="string">Hostname=<span class="subst">$(uname -n)</span></span></span><br><span class="line"><span class="string">SELinux=<span class="subst">$(/usr/sbin/sestatus | grep <span class="string">&quot;SELinux status: &quot;</span> | awk &#x27;&#123;print $3&#125;&#x27;)</span></span></span><br><span class="line"><span class="string">LastReboot=<span class="subst">$(who -b | awk &#x27;&#123;print $3,$4&#125;&#x27;)</span></span></span><br><span class="line"><span class="string">uptime=<span class="subst">$(uptime | sed &#x27;s/.*up \([^,]*\), .*/\1/&#x27;)</span></span></span><br><span class="line"><span class="string">echo &quot;</span> 系统：<span class="variable">$OS</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> 发行版本：<span class="variable">$Release</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> 内核：<span class="variable">$Kernel</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> 主机名：<span class="variable">$Hostname</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> SELinux：<span class="variable">$SELinux</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>语言/编码：<span class="variable">$default_LANG</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> 当前时间：$(<span class="built_in">date</span> +<span class="string">&#x27;%F %T&#x27;</span>)<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> 最后启动：<span class="variable">$LastReboot</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> 运行时间：<span class="variable">$uptime</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">#报表信息</span></span><br><span class="line"><span class="string">report_DateTime=<span class="subst">$(date +<span class="string">&quot;%F %T&quot;</span>)</span> #日期</span></span><br><span class="line"><span class="string">report_Hostname=&quot;</span><span class="variable">$Hostname</span><span class="string">&quot; #主机名</span></span><br><span class="line"><span class="string">report_OSRelease=&quot;</span><span class="variable">$Release</span><span class="string">&quot; #发行版本</span></span><br><span class="line"><span class="string">report_Kernel=&quot;</span><span class="variable">$Kernel</span><span class="string">&quot; #内核</span></span><br><span class="line"><span class="string">report_Language=&quot;</span><span class="variable">$default_LANG</span><span class="string">&quot; #语言/编码</span></span><br><span class="line"><span class="string">report_LastReboot=&quot;</span><span class="variable">$LastReboot</span><span class="string">&quot; #最近启动时间</span></span><br><span class="line"><span class="string">report_Uptime=&quot;</span><span class="variable">$uptime</span><span class="string">&quot; #运行时间（天）</span></span><br><span class="line"><span class="string">report_Selinux=&quot;</span><span class="variable">$SELinux</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">export LANG=&quot;</span><span class="variable">$default_LANG</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function getServiceStatus()&#123;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="comment">############################ 服务检查 ############################&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$centosVersion</span> &gt; 7 ]];<span class="keyword">then</span></span><br><span class="line">conf=$(systemctl list-unit-files --<span class="built_in">type</span>=service --state=enabled --no-pager | grep <span class="string">&quot;enabled&quot;</span>)</span><br><span class="line">process=$(systemctl list-units --<span class="built_in">type</span>=service --state=running --no-pager | grep <span class="string">&quot;.service&quot;</span>)</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_SelfInitiatedService=<span class="string">&quot;<span class="subst">$(echo <span class="string">&quot;<span class="variable">$conf</span>&quot;</span> | wc -l)</span>&quot;</span> <span class="comment">#自启动服务数量</span></span><br><span class="line">report_RuningService=<span class="string">&quot;<span class="subst">$(echo <span class="string">&quot;<span class="variable">$process</span>&quot;</span> | wc -l)</span>&quot;</span> <span class="comment">#运行中服务数量</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="comment">#conf=$(/sbin/chkconfig | grep -E &quot;:on|:启用&quot;)</span></span><br><span class="line">conf=$(systemctl list-unit-files --<span class="built_in">type</span>=service --state=enabled --no-pager | grep <span class="string">&quot;enabled&quot;</span>)</span><br><span class="line">process=$(systemctl list-units --<span class="built_in">type</span>=service --state=running --no-pager | grep <span class="string">&quot;.service&quot;</span>)</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_SelfInitiatedService=<span class="string">&quot;<span class="subst">$(echo <span class="string">&quot;<span class="variable">$conf</span>&quot;</span> | wc -l)</span>&quot;</span> <span class="comment">#自启动服务数量</span></span><br><span class="line">report_RuningService=<span class="string">&quot;<span class="subst">$(echo <span class="string">&quot;<span class="variable">$process</span>&quot;</span> | wc -l)</span>&quot;</span> <span class="comment">#运行中服务数量</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;服务配置&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$conf</span>&quot;</span> | column -t</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;正在运行的服务&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$process</span>&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getAutoStartStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 自启动检查 ##########################&quot;</span></span><br><span class="line">conf=$(grep -v <span class="string">&quot;^#&quot;</span> /etc/rc.d/rc.local| sed <span class="string">&#x27;/^$/d&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$conf</span>&quot;</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_SelfInitiatedProgram=<span class="string">&quot;<span class="subst">$(echo $conf | wc -l)</span>&quot;</span> <span class="comment">#自启动程序数量</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getLoginStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 登录检查 ############################&quot;</span></span><br><span class="line">last | <span class="built_in">head</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getNetworkStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 网络检查 ############################&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$centosVersion</span> &lt; 7 ]];<span class="keyword">then</span></span><br><span class="line">/sbin/ifconfig -a | grep -v packets | grep -v collisions | grep -v inet6</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="comment">#ip a</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(ip <span class="built_in">link</span> | grep BROADCAST | awk -F: <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>);<span class="keyword">do</span> ip add show <span class="variable">$i</span> | grep -E <span class="string">&quot;BROADCAST|global&quot;</span>| awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27; &#x27;</span> ;<span class="built_in">echo</span> <span class="string">&quot;&quot;</span> ;<span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">GATEWAY=$(ip route | grep default | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>)</span><br><span class="line">DNS=$(grep nameserver /etc/resolv.conf| grep -v <span class="string">&quot;#&quot;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27;,&#x27;</span> | sed <span class="string">&#x27;s/,$//&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;网关：<span class="variable">$GATEWAY</span> &quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; DNS：<span class="variable">$DNS</span>&quot;</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">IP=$(ip -f inet addr | grep -v 127.0.0.1 | grep inet | awk <span class="string">&#x27;&#123;print $NF,$2&#125;&#x27;</span> | <span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27;,&#x27;</span> | sed <span class="string">&#x27;s/,$//&#x27;</span>)</span><br><span class="line">MAC=$(ip <span class="built_in">link</span> | grep -v <span class="string">&quot;LOOPBACK\|loopback&quot;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | sed <span class="string">&#x27;N;s/\n//&#x27;</span> | <span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27;,&#x27;</span> | sed <span class="string">&#x27;s/,$//&#x27;</span>)</span><br><span class="line">report_IP=<span class="string">&quot;<span class="variable">$IP</span>&quot;</span> <span class="comment">#IP地址</span></span><br><span class="line">report_MAC=<span class="variable">$MAC</span> <span class="comment">#MAC地址</span></span><br><span class="line">report_Gateway=<span class="string">&quot;<span class="variable">$GATEWAY</span>&quot;</span> <span class="comment">#默认网关</span></span><br><span class="line">report_DNS=<span class="string">&quot;<span class="variable">$DNS</span>&quot;</span> <span class="comment">#DNS</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getListenStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 监听检查 ############################&quot;</span></span><br><span class="line">TCPListen=$(ss -ntul | column -t)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$TCPListen</span>&quot;</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_Listen=<span class="string">&quot;<span class="subst">$(echo <span class="string">&quot;<span class="variable">$TCPListen</span>&quot;</span>| sed &#x27;1d&#x27; | awk &#x27;/tcp/ &#123;print $5&#125;&#x27; | awk -F: &#x27;&#123;print $NF&#125;&#x27; | sort | uniq | wc -l)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getCronStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 计划任务检查 ########################&quot;</span></span><br><span class="line">Crontab=0</span><br><span class="line"><span class="keyword">for</span> shell <span class="keyword">in</span> $(grep -v <span class="string">&quot;/sbin/nologin&quot;</span> /etc/shells);<span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(grep <span class="string">&quot;<span class="variable">$shell</span>&quot;</span> /etc/passwd| awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>);<span class="keyword">do</span></span><br><span class="line">crontab -l -u <span class="variable">$user</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">status=$?</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$status</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$user</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------&quot;</span></span><br><span class="line">crontab -l -u <span class="variable">$user</span></span><br><span class="line"><span class="built_in">let</span> Crontab=Crontab+$(crontab -l -u <span class="variable">$user</span> | <span class="built_in">wc</span> -l)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment">#计划任务</span></span><br><span class="line">find /etc/cron* -<span class="built_in">type</span> f | xargs -i <span class="built_in">ls</span> -l &#123;&#125; | column -t</span><br><span class="line"><span class="built_in">let</span> Crontab=Crontab+$(find /etc/cron* -<span class="built_in">type</span> f | <span class="built_in">wc</span> -l)</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_Crontab=<span class="string">&quot;<span class="variable">$Crontab</span>&quot;</span> <span class="comment">#计划任务数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getHowLongAgo</span></span>()&#123;</span><br><span class="line"><span class="comment"># 计算一个时间戳离现在有多久了</span></span><br><span class="line">datetime=<span class="string">&quot;$*&quot;</span></span><br><span class="line">[ -z <span class="string">&quot;<span class="variable">$datetime</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;错误的参数：getHowLongAgo() $*&quot;</span></span><br><span class="line">Timestamp=$(<span class="built_in">date</span> +%s -d <span class="string">&quot;<span class="variable">$datetime</span>&quot;</span>) <span class="comment">#转化为时间戳</span></span><br><span class="line">Now_Timestamp=$(<span class="built_in">date</span> +%s)</span><br><span class="line">Difference_Timestamp=$((<span class="variable">$Now_Timestamp</span>-<span class="variable">$Timestamp</span>))</span><br><span class="line">days=0;hours=0;minutes=0;</span><br><span class="line">sec_in_day=$((<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>));</span><br><span class="line">sec_in_hour=$((<span class="number">60</span>*<span class="number">60</span>));</span><br><span class="line">sec_in_minute=60</span><br><span class="line"><span class="keyword">while</span> (( $((<span class="variable">$Difference_Timestamp</span>-<span class="variable">$sec_in_day</span>)) &gt; 1 ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">let</span> Difference_Timestamp=Difference_Timestamp-sec_in_day</span><br><span class="line"><span class="built_in">let</span> days++</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">while</span> (( $((<span class="variable">$Difference_Timestamp</span>-<span class="variable">$sec_in_hour</span>)) &gt; 1 ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">let</span> Difference_Timestamp=Difference_Timestamp-sec_in_hour</span><br><span class="line"><span class="built_in">let</span> hours++</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$days</span> 天 <span class="variable">$hours</span> 小时前&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getUserLastLogin</span></span>()&#123;</span><br><span class="line"><span class="comment"># 获取用户最近一次登录的时间，含年份</span></span><br><span class="line"><span class="comment"># 很遗憾last命令不支持显示年份，只有&quot;last -t YYYYMMDDHHMMSS&quot;表示某个时间之间的登录，我</span></span><br><span class="line"><span class="comment"># 们只能用最笨的方法了，对比今天之前和今年元旦之前（或者去年之前和前年之前……）某个用户</span></span><br><span class="line"><span class="comment"># 登录次数，如果登录统计次数有变化，则说明最近一次登录是今年。</span></span><br><span class="line">username=<span class="variable">$1</span></span><br><span class="line">: <span class="variable">$&#123;username:=&quot;`whoami`&quot;&#125;</span></span><br><span class="line">thisYear=$(<span class="built_in">date</span> +%Y)</span><br><span class="line">oldesYear=$(last | <span class="built_in">tail</span> -n1 | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span>(( <span class="variable">$thisYear</span> &gt;= <span class="variable">$oldesYear</span>));<span class="keyword">do</span></span><br><span class="line">loginBeforeToday=$(last <span class="variable">$username</span> | grep <span class="variable">$username</span> | <span class="built_in">wc</span> -l)</span><br><span class="line">loginBeforeNewYearsDayOfThisYear=$(last <span class="variable">$username</span> -t <span class="variable">$thisYear</span><span class="string">&quot;0101000000&quot;</span> | grep <span class="variable">$username</span> | <span class="built_in">wc</span> -l)</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$loginBeforeToday</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;从未登录过&quot;</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$loginBeforeToday</span> -gt <span class="variable">$loginBeforeNewYearsDayOfThisYear</span> ];<span class="keyword">then</span></span><br><span class="line">lastDateTime=$(last -i <span class="variable">$username</span> | <span class="built_in">head</span> -n1 | awk <span class="string">&#x27;&#123;for(i=4;i&lt;(NF-2);i++)printf&quot;%s &quot;,$i&#125;&#x27;</span>)<span class="string">&quot; <span class="variable">$thisYear</span>&quot;</span> <span class="comment">#格式如: Sat Nov 2 20:33 2015</span></span><br><span class="line">lastDateTime=$(<span class="built_in">date</span> <span class="string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span> -d <span class="string">&quot;<span class="variable">$lastDateTime</span>&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$lastDateTime</span>&quot;</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">thisYear=$((thisYear-<span class="number">1</span>))</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getUserStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 用户检查 ############################&quot;</span></span><br><span class="line"><span class="comment">#/etc/passwd 最后修改时间</span></span><br><span class="line">pwdfile=<span class="string">&quot;<span class="subst">$(cat /etc/passwd)</span>&quot;</span></span><br><span class="line">Modify=$(<span class="built_in">stat</span> /etc/passwd | grep Modify | <span class="built_in">tr</span> <span class="string">&#x27;.&#x27;</span> <span class="string">&#x27; &#x27;</span> | awk <span class="string">&#x27;&#123;print $2,$3&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/etc/passwd 最后修改时间：<span class="variable">$Modify</span> (<span class="subst">$(getHowLongAgo $Modify)</span>)&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;特权用户&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------&quot;</span></span><br><span class="line">RootUser=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$pwdfile</span>&quot;</span> | awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>);<span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ $(<span class="built_in">id</span> -u <span class="variable">$user</span>) -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$user</span>&quot;</span></span><br><span class="line">RootUser=<span class="string">&quot;<span class="variable">$RootUser</span>,<span class="variable">$user</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;用户列表&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------&quot;</span></span><br><span class="line">USERs=0</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(</span></span></span><br><span class="line"><span class="subst"><span class="string">echo <span class="string">&quot;用户名 UID GID HOME SHELL 最后一次登录&quot;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">for shell in $(grep -v <span class="string">&quot;/sbin/nologin&quot;</span> /etc/shells)</span>;do</span></span><br><span class="line"><span class="string">for username in <span class="subst">$(grep <span class="string">&quot;<span class="variable">$shell</span>&quot;</span> /etc/passwd| awk -F: &#x27;&#123;print $1&#125;&#x27;)</span>;do</span></span><br><span class="line"><span class="string">userLastLogin=&quot;</span>$(getUserLastLogin <span class="variable">$username</span>)<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="variable">$pwdfile</span><span class="string">&quot; | grep -w &quot;</span><span class="variable">$username</span><span class="string">&quot; |grep -w &quot;</span><span class="variable">$shell</span><span class="string">&quot;| awk -F: -v lastlogin=&quot;</span>$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$userLastLogin</span>&quot;</span> | <span class="built_in">tr</span> <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;_&#x27;</span>)<span class="string">&quot; &#x27;&#123;print <span class="variable">$1</span>,<span class="variable">$3</span>,<span class="variable">$4</span>,<span class="variable">$6</span>,<span class="variable">$7</span>,lastlogin&#125;&#x27;</span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string">let USERs=USERs+<span class="subst">$(echo <span class="string">&quot;<span class="variable">$pwdfile</span>&quot;</span> | grep <span class="string">&quot;<span class="variable">$shell</span>&quot;</span>| wc -l)</span></span></span><br><span class="line"><span class="string">done</span></span><br><span class="line"><span class="string">)&quot;</span> | column -t</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;空密码用户&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;----------&quot;</span></span><br><span class="line">USEREmptyPassword=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> shell <span class="keyword">in</span> $(grep -v <span class="string">&quot;/sbin/nologin&quot;</span> /etc/shells);<span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$pwdfile</span>&quot;</span> | grep <span class="string">&quot;<span class="variable">$shell</span>&quot;</span> | <span class="built_in">cut</span> -d: -f1);<span class="keyword">do</span></span><br><span class="line">r=$(awk -F: <span class="string">&#x27;$2==&quot;!!&quot;&#123;print $1&#125;&#x27;</span> /etc/shadow | grep -w <span class="variable">$user</span>)</span><br><span class="line"><span class="keyword">if</span> [ ! -z <span class="variable">$r</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$r</span></span><br><span class="line">USEREmptyPassword=<span class="string">&quot;<span class="variable">$USEREmptyPassword</span>,&quot;</span><span class="variable">$r</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;相同ID的用户&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;------------&quot;</span></span><br><span class="line">USERTheSameUID=<span class="string">&quot;&quot;</span></span><br><span class="line">UIDs=$(<span class="built_in">cut</span> -d: -f3 /etc/passwd | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | awk <span class="string">&#x27;$1&gt;1&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> uid <span class="keyword">in</span> <span class="variable">$UIDs</span>;<span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$uid</span>&quot;</span>;</span><br><span class="line">USERTheSameUID=<span class="string">&quot;<span class="variable">$uid</span>&quot;</span></span><br><span class="line">r=$(awk -F: <span class="string">&#x27;ORS=&quot;&quot;;$3==&#x27;</span><span class="string">&quot;<span class="variable">$uid</span>&quot;</span><span class="string">&#x27;&#123;print &quot;:&quot;,$1&#125;&#x27;</span> /etc/passwd)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$r</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line">USERTheSameUID=<span class="string">&quot;<span class="variable">$USERTheSameUID</span> <span class="variable">$r</span>,&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_USERs=<span class="string">&quot;<span class="variable">$USERs</span>&quot;</span> <span class="comment">#用户</span></span><br><span class="line">report_USEREmptyPassword=$(<span class="built_in">echo</span> <span class="variable">$USEREmptyPassword</span> | sed <span class="string">&#x27;s/^,//&#x27;</span>) </span><br><span class="line">report_USERTheSameUID=$(<span class="built_in">echo</span> <span class="variable">$USERTheSameUID</span> | sed <span class="string">&#x27;s/,$//&#x27;</span>) </span><br><span class="line">report_RootUser=$(<span class="built_in">echo</span> <span class="variable">$RootUser</span> | sed <span class="string">&#x27;s/^,//&#x27;</span>) <span class="comment">#特权用户</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> getPasswordStatus &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 密码检查 ############################&quot;</span></span><br><span class="line">pwdfile=<span class="string">&quot;<span class="subst">$(cat /etc/passwd)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;密码过期检查&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;------------&quot;</span></span><br><span class="line">result=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> shell <span class="keyword">in</span> $(grep -v <span class="string">&quot;/sbin/nologin&quot;</span> /etc/shells);<span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$pwdfile</span>&quot;</span> | grep <span class="string">&quot;<span class="variable">$shell</span>&quot;</span> | <span class="built_in">cut</span> -d: -f1);<span class="keyword">do</span></span><br><span class="line">get_expiry_date=$(/usr/bin/chage -l <span class="variable">$user</span> | grep <span class="string">&#x27;Password expires&#x27;</span> | <span class="built_in">cut</span> -d: -f2)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$get_expiry_date</span> = <span class="string">&#x27; never&#x27;</span> || <span class="variable">$get_expiry_date</span> = <span class="string">&#x27;never&#x27;</span> ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%-15s 永不过期\n&quot;</span> <span class="variable">$user</span></span><br><span class="line">result=<span class="string">&quot;<span class="variable">$result</span>,<span class="variable">$user</span>:never&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">password_expiry_date=$(<span class="built_in">date</span> -d <span class="string">&quot;<span class="variable">$get_expiry_date</span>&quot;</span> <span class="string">&quot;+%s&quot;</span>)</span><br><span class="line">current_date=$(<span class="built_in">date</span> <span class="string">&quot;+%s&quot;</span>)</span><br><span class="line">diff=$((<span class="variable">$password_expiry_date</span>-<span class="variable">$current_date</span>))</span><br><span class="line"><span class="built_in">let</span> DAYS=$((<span class="variable">$diff</span>/(<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>)))</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%-15s %s天后过期\n&quot;</span> <span class="variable">$user</span> <span class="variable">$DAYS</span></span><br><span class="line">result=<span class="string">&quot;<span class="variable">$result</span>,<span class="variable">$user</span>:<span class="variable">$DAYS</span> days&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">report_PasswordExpiry=$(<span class="built_in">echo</span> <span class="variable">$result</span> | sed <span class="string">&#x27;s/^,//&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;密码策略检查&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;------------&quot;</span></span><br><span class="line">grep -v <span class="string">&quot;#&quot;</span> /etc/login.defs | grep -E <span class="string">&quot;PASS_MAX_DAYS|PASS_MIN_DAYS|PASS_MIN_LEN|PASS_WARN_AGE&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getSudoersStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ Sudoers检查 #########################&quot;</span></span><br><span class="line">conf=$(grep -v <span class="string">&quot;^#&quot;</span> /etc/sudoers| grep -v <span class="string">&quot;^Defaults&quot;</span> | sed <span class="string">&#x27;/^$/d&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$conf</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_Sudoers=<span class="string">&quot;<span class="subst">$(echo $conf | wc -l)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getInstalledStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 软件检查 ############################&quot;</span></span><br><span class="line">rpm -qa --last | <span class="built_in">head</span> | column -t </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getProcessStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 进程检查 ############################&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ $(ps -ef | grep defunct | grep -v grep | <span class="built_in">wc</span> -l) -ge 1 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;僵尸进程&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------&quot;</span></span><br><span class="line">ps -ef | <span class="built_in">head</span> -n1</span><br><span class="line">ps -ef | grep defunct | grep -v grep</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;内存占用TOP10&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;PID %MEM RSS COMMAND</span></span><br><span class="line"><span class="string"><span class="subst">$(ps aux | awk &#x27;&#123;print $2, $4, $6, $11&#125;&#x27; | sort -k3rn | head -n 10 )</span>&quot;</span>| column -t </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;CPU占用TOP10&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;------------&quot;</span></span><br><span class="line">top b -n1 | <span class="built_in">head</span> -17 | <span class="built_in">tail</span> -11</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_DefunctProsess=<span class="string">&quot;<span class="subst">$(ps -ef | grep defunct | grep -v grep|wc -l)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getJDKStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ JDK检查 #############################&quot;</span></span><br><span class="line">java -version 2&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">java -version 2&gt;&amp;1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;JAVA_HOME=\&quot;<span class="variable">$JAVA_HOME</span>\&quot;&quot;</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_JDK=<span class="string">&quot;<span class="subst">$(java -version 2&gt;&amp;1 | grep version | awk &#x27;&#123;print $1,$3&#125;&#x27; | tr -d &#x27;<span class="string">&quot;&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="subst"><span class="string">&#125;</span></span></span><br><span class="line"><span class="subst"><span class="string">function getSyslogStatus()</span>&#123;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="comment">############################ syslog检查 ##########################&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;服务状态：<span class="subst">$(getState rsyslog)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/etc/rsyslog.conf&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-----------------&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /etc/rsyslog.conf 2&gt;/dev/null | grep -v <span class="string">&quot;^#&quot;</span> | grep -v <span class="string">&quot;^\\$&quot;</span> | sed <span class="string">&#x27;/^$/d&#x27;</span> | column -t</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_Syslog=<span class="string">&quot;<span class="subst">$(getState rsyslog)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getFirewallStatus</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 防火墙检查 ##########################&quot;</span></span><br><span class="line"><span class="comment">#防火墙状态，策略等</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$centosVersion</span> &lt; 7 ]];<span class="keyword">then</span></span><br><span class="line"><span class="comment">#/etc/init.d/iptables status &gt;/dev/null 2&gt;&amp;1</span></span><br><span class="line">systemctl status firewalld &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">status=$?</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$status</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">s=<span class="string">&quot;active&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$status</span> -eq 3 ];<span class="keyword">then</span></span><br><span class="line">s=<span class="string">&quot;inactive&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$status</span> -eq 4 ];<span class="keyword">then</span></span><br><span class="line">s=<span class="string">&quot;permission denied&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">s=<span class="string">&quot;unknown&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">s=<span class="string">&quot;<span class="subst">$(getState iptables)</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;iptables: <span class="variable">$s</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/etc/sysconfig/iptables&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-----------------------&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /etc/sysconfig/iptables 2&gt;/dev/null</span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_Firewall=<span class="string">&quot;<span class="variable">$s</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getSNMPStatus</span></span>()&#123;</span><br><span class="line"><span class="comment">#SNMP服务状态，配置等</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ SNMP检查 ############################&quot;</span></span><br><span class="line">status=<span class="string">&quot;<span class="subst">$(getState snmpd)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;服务状态：<span class="variable">$status</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -e /etc/snmp/snmpd.conf ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/etc/snmp/snmpd.conf&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------------------&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /etc/snmp/snmpd.conf 2&gt;/dev/null | grep -v <span class="string">&quot;^#&quot;</span> | sed <span class="string">&#x27;/^$/d&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_SNMP=<span class="string">&quot;<span class="subst">$(getState snmpd)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getState</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$centosVersion</span> &lt; 7 ]];<span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ -e <span class="string">&quot;/etc/init.d/<span class="variable">$1</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ `/etc/init.d/<span class="variable">$1</span> status 2&gt;/dev/null | grep -E <span class="string">&quot;is running|正在运行&quot;</span> | <span class="built_in">wc</span> -l` -ge 1 ];<span class="keyword">then</span></span><br><span class="line">r=<span class="string">&quot;active&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r=<span class="string">&quot;inactive&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r=<span class="string">&quot;unknown&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="comment">#CentOS 7+</span></span><br><span class="line">r=<span class="string">&quot;<span class="subst">$(systemctl is-active $1 2&gt;&amp;1)</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$r</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getSSHStatus</span></span>()&#123;</span><br><span class="line"><span class="comment">#SSHD服务状态，配置,受信任主机等</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ SSH检查 #############################&quot;</span></span><br><span class="line"><span class="comment">#检查受信任主机</span></span><br><span class="line">pwdfile=<span class="string">&quot;<span class="subst">$(cat /etc/passwd)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;服务状态：<span class="subst">$(getState sshd)</span>&quot;</span></span><br><span class="line">Protocol_Version=$(<span class="built_in">cat</span> /etc/ssh/sshd_config | grep Protocol | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;SSH协议版本：<span class="variable">$Protocol_Version</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;信任主机&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------&quot;</span></span><br><span class="line">authorized=0</span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$pwdfile</span>&quot;</span> | grep /bin/bash | awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>);<span class="keyword">do</span></span><br><span class="line">authorize_file=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$pwdfile</span>&quot;</span> | grep -w <span class="variable">$user</span> | awk -F: <span class="string">&#x27;&#123;printf $6&quot;/.ssh/authorized_keys&quot;&#125;&#x27;</span>)</span><br><span class="line">authorized_host=$(<span class="built_in">cat</span> <span class="variable">$authorize_file</span> 2&gt;/dev/null | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span> | <span class="built_in">tr</span> <span class="string">&#x27;\n&#x27;</span> <span class="string">&#x27;,&#x27;</span> | sed <span class="string">&#x27;s/,$//&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ ! -z <span class="variable">$authorized_host</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$user</span> 授权 \&quot;<span class="variable">$authorized_host</span>\&quot; 无密码访问&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">let</span> authorized=authorized+$(<span class="built_in">cat</span> <span class="variable">$authorize_file</span> 2&gt;/dev/null | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>|<span class="built_in">wc</span> -l)</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;是否允许ROOT远程登录&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------------------&quot;</span></span><br><span class="line">config=$(<span class="built_in">cat</span> /etc/ssh/sshd_config | grep PermitRootLogin)</span><br><span class="line">firstChar=<span class="variable">$&#123;config:0:1&#125;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$firstChar</span> == <span class="string">&quot;#&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">PermitRootLogin=<span class="string">&quot;yes&quot;</span> <span class="comment">#默认是允许ROOT远程登录的</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">PermitRootLogin=$(<span class="built_in">echo</span> <span class="variable">$config</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;PermitRootLogin <span class="variable">$PermitRootLogin</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/etc/ssh/sshd_config&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------------------&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /etc/ssh/sshd_config | grep -v <span class="string">&quot;^#&quot;</span> | sed <span class="string">&#x27;/^$/d&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_SSHAuthorized=<span class="string">&quot;<span class="variable">$authorized</span>&quot;</span> <span class="comment">#SSH信任主机</span></span><br><span class="line">report_SSHDProtocolVersion=<span class="string">&quot;<span class="variable">$Protocol_Version</span>&quot;</span> <span class="comment">#SSH协议版本</span></span><br><span class="line">report_SSHDPermitRootLogin=<span class="string">&quot;<span class="variable">$PermitRootLogin</span>&quot;</span> <span class="comment">#允许root远程登录</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getNTPStatus</span></span>()&#123;</span><br><span class="line"><span class="comment">#NTP服务状态，当前时间，配置等</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ NTP检查 #############################&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -e /etc/ntp.conf ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;服务状态：<span class="subst">$(getState ntpd)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/etc/ntp.conf&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;-------------&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /etc/ntp.conf 2&gt;/dev/null | grep -v <span class="string">&quot;^#&quot;</span> | sed <span class="string">&#x27;/^$/d&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#报表信息</span></span><br><span class="line">report_NTP=<span class="string">&quot;<span class="subst">$(getState ntpd)</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">uploadHostDailyCheckReport</span></span>()&#123;</span><br><span class="line">json=<span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string">\&quot;DateTime\&quot;:\&quot;<span class="variable">$report_DateTime</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Hostname\&quot;:\&quot;<span class="variable">$report_Hostname</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;OSRelease\&quot;:\&quot;<span class="variable">$report_OSRelease</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Kernel\&quot;:\&quot;<span class="variable">$report_Kernel</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Language\&quot;:\&quot;<span class="variable">$report_Language</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;LastReboot\&quot;:\&quot;<span class="variable">$report_LastReboot</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Uptime\&quot;:\&quot;<span class="variable">$report_Uptime</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;CPUs\&quot;:\&quot;<span class="variable">$report_CPUs</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;CPUType\&quot;:\&quot;<span class="variable">$report_CPUType</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Arch\&quot;:\&quot;<span class="variable">$report_Arch</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;MemTotal\&quot;:\&quot;<span class="variable">$report_MemTotal</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;MemFree\&quot;:\&quot;<span class="variable">$report_MemFree</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;MemUsedPercent\&quot;:\&quot;<span class="variable">$report_MemUsedPercent</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;DiskTotal\&quot;:\&quot;<span class="variable">$report_DiskTotal</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;DiskFree\&quot;:\&quot;<span class="variable">$report_DiskFree</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;DiskUsedPercent\&quot;:\&quot;<span class="variable">$report_DiskUsedPercent</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;InodeTotal\&quot;:\&quot;<span class="variable">$report_InodeTotal</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;InodeFree\&quot;:\&quot;<span class="variable">$report_InodeFree</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;InodeUsedPercent\&quot;:\&quot;<span class="variable">$report_InodeUsedPercent</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;IP\&quot;:\&quot;<span class="variable">$report_IP</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;MAC\&quot;:\&quot;<span class="variable">$report_MAC</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Gateway\&quot;:\&quot;<span class="variable">$report_Gateway</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;DNS\&quot;:\&quot;<span class="variable">$report_DNS</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Listen\&quot;:\&quot;<span class="variable">$report_Listen</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Selinux\&quot;:\&quot;<span class="variable">$report_Selinux</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Firewall\&quot;:\&quot;<span class="variable">$report_Firewall</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;USERs\&quot;:\&quot;<span class="variable">$report_USERs</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;USEREmptyPassword\&quot;:\&quot;<span class="variable">$report_USEREmptyPassword</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;USERTheSameUID\&quot;:\&quot;<span class="variable">$report_USERTheSameUID</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;PasswordExpiry\&quot;:\&quot;<span class="variable">$report_PasswordExpiry</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;RootUser\&quot;:\&quot;<span class="variable">$report_RootUser</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Sudoers\&quot;:\&quot;<span class="variable">$report_Sudoers</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;SSHAuthorized\&quot;:\&quot;<span class="variable">$report_SSHAuthorized</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;SSHDProtocolVersion\&quot;:\&quot;<span class="variable">$report_SSHDProtocolVersion</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;SSHDPermitRootLogin\&quot;:\&quot;<span class="variable">$report_SSHDPermitRootLogin</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;DefunctProsess\&quot;:\&quot;<span class="variable">$report_DefunctProsess</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;SelfInitiatedService\&quot;:\&quot;<span class="variable">$report_SelfInitiatedService</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;SelfInitiatedProgram\&quot;:\&quot;<span class="variable">$report_SelfInitiatedProgram</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;RuningService\&quot;:\&quot;<span class="variable">$report_RuningService</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Crontab\&quot;:\&quot;<span class="variable">$report_Crontab</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;Syslog\&quot;:\&quot;<span class="variable">$report_Syslog</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;SNMP\&quot;:\&quot;<span class="variable">$report_SNMP</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;NTP\&quot;:\&quot;<span class="variable">$report_NTP</span>\&quot;,</span></span><br><span class="line"><span class="string">\&quot;JDK\&quot;:\&quot;<span class="variable">$report_JDK</span>\&quot;</span></span><br><span class="line"><span class="string">&#125;&quot;</span></span><br><span class="line"><span class="comment">#echo &quot;$json&quot; </span></span><br><span class="line">curl -l -H <span class="string">&quot;Content-type: application/json&quot;</span> -X POST -d <span class="string">&quot;<span class="variable">$json</span>&quot;</span> <span class="string">&quot;<span class="variable">$uploadHostDailyCheckReportApi</span>&quot;</span> 2&gt;/dev/null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getchage_file_24h</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;############################ 文件检查 #############################&quot;</span></span><br><span class="line">    check2=$(find / -name <span class="string">&#x27;*.sh&#x27;</span> -mtime -1)</span><br><span class="line">check21=$(find / -name <span class="string">&#x27;*.asp&#x27;</span> -mtime -1)</span><br><span class="line">check22=$(find / -name <span class="string">&#x27;*.php&#x27;</span> -mtime -1)</span><br><span class="line">check23=$(find / -name <span class="string">&#x27;*.aspx&#x27;</span> -mtime -1)</span><br><span class="line">check24=$(find / -name <span class="string">&#x27;*.jsp&#x27;</span> -mtime -1)</span><br><span class="line">check25=$(find / -name <span class="string">&#x27;*.html&#x27;</span> -mtime -1)</span><br><span class="line">check26=$(find / -name <span class="string">&#x27;*.htm&#x27;</span> -mtime -1)</span><br><span class="line">check9=$(find / -name core -<span class="built_in">exec</span> <span class="built_in">ls</span> -l &#123;&#125; \;)</span><br><span class="line">check10=$(<span class="built_in">cat</span> /etc/crontab)</span><br><span class="line">check12=$(<span class="built_in">ls</span> -alt /usr/bin | <span class="built_in">head</span> -10)</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">############################查看所有被修改过的文件返回最近24小时内的############################</span></span><br><span class="line"><span class="string">$&#123;check2&#125;</span></span><br><span class="line"><span class="string">$&#123;check21&#125;</span></span><br><span class="line"><span class="string">$&#123;check22&#125;</span></span><br><span class="line"><span class="string">$&#123;check23&#125;</span></span><br><span class="line"><span class="string">$&#123;check24&#125;</span></span><br><span class="line"><span class="string">$&#123;check25&#125;</span></span><br><span class="line"><span class="string">$&#123;check26&#125;</span></span><br><span class="line"><span class="string">$&#123;line&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">############################检查定时文件的完整性############################</span></span><br><span class="line"><span class="string">$&#123;check10&#125;</span></span><br><span class="line"><span class="string">$&#123;line&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">############################查看系统命令是否被替换############################</span></span><br><span class="line"><span class="string">$&#123;check12&#125;</span></span><br><span class="line"><span class="string">$&#123;line&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">check</span></span>()&#123;</span><br><span class="line">version</span><br><span class="line">getSystemStatus</span><br><span class="line">getCpuStatus</span><br><span class="line">getMemStatus</span><br><span class="line">getDiskStatus</span><br><span class="line">getNetworkStatus</span><br><span class="line">getListenStatus</span><br><span class="line">getProcessStatus</span><br><span class="line">getServiceStatus</span><br><span class="line">getAutoStartStatus</span><br><span class="line">getLoginStatus</span><br><span class="line">getCronStatus</span><br><span class="line">getUserStatus</span><br><span class="line">getPasswordStatus</span><br><span class="line">getSudoersStatus</span><br><span class="line">getJDKStatus</span><br><span class="line">getFirewallStatus</span><br><span class="line">getSSHStatus</span><br><span class="line">getSyslogStatus</span><br><span class="line">getSNMPStatus</span><br><span class="line">getNTPStatus</span><br><span class="line">getInstalledStatus</span><br><span class="line">getchage_file_24h</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#执行检查并保存检查结果</span></span><br><span class="line">check &gt; <span class="variable">$RESULTFILE</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;检查结果：<span class="variable">$RESULTFILE</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;`date &quot;</span>+%Y-%m-%d %H:%M:%S<span class="string">&quot;` 红帽平台巡检报告&quot;</span>  | mail -a <span class="variable">$RESULTFILE</span> -s <span class="string">&quot;红帽平台巡检报告&quot;</span> <span class="built_in">test</span>@163.com</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Shell脚本</category>
      </categories>
      <tags>
        <tag>Shell脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>sed命令详解</title>
    <url>/2024/01/28/sed-%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="sed-命令"><a href="#sed-命令" class="headerlink" title="sed 命令"></a>sed 命令</h1><p>功能强大的流式文本编辑器</p>
<h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p><strong>sed</strong> 是一种流编辑器，它是文本处理中非常重要的工具，能够完美的配合正则表达式使用，功能不同凡响。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</p>
<h2 id="sed的选项、命令、替换标记"><a href="#sed的选项、命令、替换标记" class="headerlink" title="sed的选项、命令、替换标记"></a>sed的选项、命令、替换标记</h2><p><strong>命令格式</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed [options] <span class="string">&#x27;command&#x27;</span> file(s)</span><br><span class="line">sed [options] -f scriptfile file(s)</span><br></pre></td></tr></table></figure>

<h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-e&lt;script&gt;或--expression=&lt;script&gt;：以选项中的指定的script来处理输入的文本文件；</span><br><span class="line">-f&lt;script文件&gt;或--file=&lt;script文件&gt;：以选项中指定的script文件来处理输入的文本文件；</span><br><span class="line">-h或--<span class="built_in">help</span>：显示帮助；</span><br><span class="line">-n或--quiet或——silent：仅显示script处理后的结果；</span><br><span class="line">-V或--version：显示版本信息。</span><br></pre></td></tr></table></figure>

<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>文件：指定待处理的文本文件列表。</p>
<h3 id="sed命令"><a href="#sed命令" class="headerlink" title="sed命令"></a>sed命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a\ <span class="comment"># 在当前行下面插入文本。</span></span><br><span class="line">i\ <span class="comment"># 在当前行上面插入文本。</span></span><br><span class="line">c\ <span class="comment"># 把选定的行改为新的文本。</span></span><br><span class="line">d <span class="comment"># 删除，删除选择的行。</span></span><br><span class="line">D <span class="comment"># 删除模板块的第一行。</span></span><br><span class="line">s <span class="comment"># 替换指定字符</span></span><br><span class="line">h <span class="comment"># 拷贝模板块的内容到内存中的缓冲区。</span></span><br><span class="line">H <span class="comment"># 追加模板块的内容到内存中的缓冲区。</span></span><br><span class="line">g <span class="comment"># 获得内存缓冲区的内容，并替代当前模板块中的文本。</span></span><br><span class="line">G <span class="comment"># 获得内存缓冲区的内容，并追加到当前模板块文本的后面。</span></span><br><span class="line">l <span class="comment"># 列表不能打印字符的清单。</span></span><br><span class="line">n <span class="comment"># 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。</span></span><br><span class="line">N <span class="comment"># 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。</span></span><br><span class="line">p <span class="comment"># 打印模板块的行。</span></span><br><span class="line">P <span class="comment"># (大写) 打印模板块的第一行。</span></span><br><span class="line">q <span class="comment"># 退出sed。</span></span><br><span class="line">b lable <span class="comment"># 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。</span></span><br><span class="line">r file <span class="comment"># 从file中读行。</span></span><br><span class="line">t label <span class="comment"># if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</span></span><br><span class="line">T label <span class="comment"># 错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</span></span><br><span class="line">w file <span class="comment"># 写并追加模板块到file末尾。  </span></span><br><span class="line">W file <span class="comment"># 写并追加模板块的第一行到file末尾。  </span></span><br><span class="line">! <span class="comment"># 表示后面的命令对所有没有被选定的行发生作用。  </span></span><br><span class="line">= <span class="comment"># 打印当前行号码。  </span></span><br><span class="line"><span class="comment"># # 把注释扩展到下一个换行符以前。  </span></span><br></pre></td></tr></table></figure>

<h3 id="sed替换标记"><a href="#sed替换标记" class="headerlink" title="sed替换标记"></a>sed替换标记</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">g <span class="comment"># 表示行内全面替换。  </span></span><br><span class="line">p <span class="comment"># 表示打印行。  </span></span><br><span class="line">w <span class="comment"># 表示把行写入一个文件。  </span></span><br><span class="line">x <span class="comment"># 表示互换模板块中的文本和缓冲区中的文本。  </span></span><br><span class="line">y <span class="comment"># 表示把一个字符翻译为另外的字符（但是不用于正则表达式）</span></span><br><span class="line">\1 <span class="comment"># 子串匹配标记</span></span><br><span class="line">&amp; <span class="comment"># 已匹配字符串标记</span></span><br></pre></td></tr></table></figure>

<h3 id="sed元字符集"><a href="#sed元字符集" class="headerlink" title="sed元字符集"></a>sed元字符集</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">^ <span class="comment"># 匹配行开始，如：/^sed/匹配所有以sed开头的行。</span></span><br><span class="line">$ <span class="comment"># 匹配行结束，如：/sed$/匹配所有以sed结尾的行。</span></span><br><span class="line">. <span class="comment"># 匹配一个非换行符的任意字符，如：/s.d/匹配s后接一个任意字符，最后是d。</span></span><br><span class="line">* <span class="comment"># 匹配0个或多个字符，如：/*sed/匹配所有模板是一个或多个空格后紧跟sed的行。</span></span><br><span class="line">[] <span class="comment"># 匹配一个指定范围内的字符，如/[sS]ed/匹配sed和sed。  </span></span><br><span class="line">[^] <span class="comment"># 匹配一个不在指定范围内的字符，如：/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。</span></span><br><span class="line">\(..\) <span class="comment"># 匹配子串，保存匹配的字符，如s/\(love\)able/\1rs，loveable被替换成lovers。</span></span><br><span class="line">&amp; <span class="comment"># 保存搜索字符用来替换其他字符，如s/love/ **&amp;** /，love这成 **love** 。</span></span><br><span class="line">\&lt; <span class="comment"># 匹配单词的开始，如:/\&lt;love/匹配包含以love开头的单词的行。</span></span><br><span class="line">\&gt; <span class="comment"># 匹配单词的结束，如/love\&gt;/匹配包含以love结尾的单词的行。</span></span><br><span class="line">x\&#123;m\&#125; <span class="comment"># 重复字符x，m次，如：/0\&#123;5\&#125;/匹配包含5个0的行。</span></span><br><span class="line">x\&#123;m,\&#125; <span class="comment"># 重复字符x，至少m次，如：/0\&#123;5,\&#125;/匹配至少有5个0的行。</span></span><br><span class="line">x\&#123;m,n\&#125; <span class="comment"># 重复字符x，至少m次，不多于n次，如：/0\&#123;5,10\&#125;/匹配5~10个0的行。  </span></span><br></pre></td></tr></table></figure>

<h2 id="sed用法实例"><a href="#sed用法实例" class="headerlink" title="sed用法实例"></a>sed用法实例</h2><h3 id="替换操作：s命令"><a href="#替换操作：s命令" class="headerlink" title="替换操作：s命令"></a>替换操作：s命令</h3><p>替换文本中的字符串：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;s/book/books/&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p><strong>-n选项</strong> 和 <strong>p命令</strong> 一起使用表示只打印那些发生替换的行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;s/test/TEST/p&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>直接编辑文件 <strong>选项-i</strong> ，会匹配file文件中每一行的所有book替换为books：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/book/books/g&#x27;</span> file</span><br></pre></td></tr></table></figure>

<h3 id="全面替换标记g"><a href="#全面替换标记g" class="headerlink" title="全面替换标记g"></a>全面替换标记g</h3><p>使用后缀 &#x2F;g 标记会替换每一行中的所有匹配：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;s/book/books/g&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>当需要从第N处匹配开始替换时，可以使用 &#x2F;Ng：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> sksksksksksk | sed <span class="string">&#x27;s/sk/SK/2g&#x27;</span></span><br><span class="line">skSKSKSKSKSK</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> sksksksksksk | sed <span class="string">&#x27;s/sk/SK/3g&#x27;</span></span><br><span class="line">skskSKSKSKSK</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> sksksksksksk | sed <span class="string">&#x27;s/sk/SK/4g&#x27;</span></span><br><span class="line">skskskSKSKSK</span><br></pre></td></tr></table></figure>

<h3 id="定界符"><a href="#定界符" class="headerlink" title="定界符"></a>定界符</h3><p>以上命令中字符 &#x2F; 在sed中作为定界符使用，也可以使用任意的定界符：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;s:test:TEXT:g&#x27;</span></span><br><span class="line">sed <span class="string">&#x27;s|test|TEXT|g&#x27;</span></span><br></pre></td></tr></table></figure>

<p>定界符出现在样式内部时，需要进行转义：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;s/\/bin/\/usr\/local\/bin/g&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="删除操作：d命令"><a href="#删除操作：d命令" class="headerlink" title="删除操作：d命令"></a>删除操作：d命令</h3><p>删除空白行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;/^$/d&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>删除文件的第2行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;2d&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>删除文件的第2行到末尾所有行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;2,$d&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>删除文件最后一行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;$d&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>删除文件中所有开头是test的行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;/^test/&#x27;</span>d file</span><br></pre></td></tr></table></figure>

<h3 id="已匹配字符串标记"><a href="#已匹配字符串标记" class="headerlink" title="已匹配字符串标记&amp;"></a>已匹配字符串标记&amp;</h3><p>正则表达式 \w+ 匹配每一个单词，使用 [&amp;] 替换它，&amp; 对应于之前所匹配到的单词：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> this is a <span class="built_in">test</span> line | sed <span class="string">&#x27;s/\w\+/[&amp;]/g&#x27;</span></span><br><span class="line">[this] [is] [a] [<span class="built_in">test</span>] [line]</span><br></pre></td></tr></table></figure>

<p>所有以192.168.0.1开头的行都会被替换成它自已加localhost：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;s/^192.168.0.1/&amp;localhost/&#x27;</span> file</span><br><span class="line">192.168.0.1localhost</span><br></pre></td></tr></table></figure>

<h3 id="子串匹配标记-1"><a href="#子串匹配标记-1" class="headerlink" title="子串匹配标记\1"></a>子串匹配标记\1</h3><p>匹配给定样式的其中一部分：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> this is digit 7 <span class="keyword">in</span> a number | sed <span class="string">&#x27;s/digit \([0-9]\)/\1/&#x27;</span></span><br><span class="line">this is 7 <span class="keyword">in</span> a number</span><br></pre></td></tr></table></figure>

<p>命令中 digit 7，被替换成了 7。样式匹配到的子串是 7，(..) 用于匹配子串，对于匹配到的第一个子串就标记为 <strong>\1</strong> ，依此类推匹配到的第二个结果就是 <strong>\2</strong> ，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> aaa BBB | sed <span class="string">&#x27;s/\([a-z]\+\) \([A-Z]\+\)/\2 \1/&#x27;</span></span><br><span class="line">BBB aaa</span><br></pre></td></tr></table></figure>

<p>love被标记为1，所有loveable会被替换成lovers，并打印出来：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;s/\(love\)able/\1rs/p&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>通过替换获取ip：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig ens32 | sed -n <span class="string">&#x27;/inet /p&#x27;</span> | sed <span class="string">&#x27;s/inet \([0-9.]\+\).*/\1/&#x27;</span></span><br><span class="line">192.168.75.126</span><br></pre></td></tr></table></figure>

<h3 id="大小写转换U-L"><a href="#大小写转换U-L" class="headerlink" title="大小写转换U&#x2F;L"></a>大小写转换U&#x2F;L</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">\u：	首字母转换为大写</span><br><span class="line">\U：  全部转换为大写</span><br><span class="line">\l：	 首字母转换为小写</span><br><span class="line">\L：	 全部转换为小写</span><br></pre></td></tr></table></figure>

<p>首字母转换为大写：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@node6 ~]<span class="comment"># sed &#x27;s/^[a-z]\+/\u&amp;/&#x27; passwd </span></span><br><span class="line">Root:x:0:0:root:/root:/bin/bash</span><br><span class="line">Bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">Daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">Adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">Lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">Sync:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br></pre></td></tr></table></figure>

<p>匹配到的字符全部转换为大写：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@node6 ~]<span class="comment"># sed &#x27;s/^[a-z]\+/\U&amp;/&#x27; passwd </span></span><br><span class="line">ROOT:x:0:0:root:/root:/bin/bash</span><br><span class="line">BIN:x:1:1:bin:/bin:/sbin/nologin</span><br></pre></td></tr></table></figure>

<h3 id="组合多个表达式"><a href="#组合多个表达式" class="headerlink" title="组合多个表达式"></a>组合多个表达式</h3><ol>
<li>替换文本中的多个字符串：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;s/old_string/new_string/g&#x27;</span> -e <span class="string">&#x27;s/another_old_string/another_new_string/g&#x27;</span> file.txt</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>删除文本中的多个行：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;1d&#x27;</span> -e <span class="string">&#x27;/pattern/d&#x27;</span> file.txt</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>在文本中插入多个行：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;1i\inserted_line1&#x27;</span> -e <span class="string">&#x27;2i\inserted_line2&#x27;</span> file.txt</span><br></pre></td></tr></table></figure>

<p>其中，-e 表示指定一个表达式，多个表达式之间用 -e 分隔。每个表达式可以是一个 sed 命令，例如 s、d、i 等。</p>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>sed表达式可以使用单引号来引用，但是如果表达式内部包含变量字符串，就需要使用双引号。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">test</span>=hello</span><br><span class="line"><span class="built_in">echo</span> hello WORLD | sed <span class="string">&quot;s/<span class="variable">$test</span>/HELLO&quot;</span></span><br><span class="line">HELLO WORLD</span><br></pre></td></tr></table></figure>

<h3 id="选定行的范围：-（逗号）"><a href="#选定行的范围：-（逗号）" class="headerlink" title="选定行的范围：,（逗号）"></a>选定行的范围：,（逗号）</h3><p>所有在模板test和check所确定的范围内的行都被打印：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;/test/,/check/p&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>打印从第5行开始到第一个包含以test开始的行之间的所有行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;5,/^test/p&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>对于模板test和west之间的行，每行的末尾用字符串aaa bbb替换：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;/test/,/west/s/$/aaa bbb/&#x27;</span> file</span><br></pre></td></tr></table></figure>

<h3 id="多点编辑：e命令"><a href="#多点编辑：e命令" class="headerlink" title="多点编辑：e命令"></a>多点编辑：e命令</h3><p>-e选项允许在同一行里执行多条命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;1,5d&#x27;</span> -e <span class="string">&#x27;s/test/check/&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>上面sed表达式的第一条命令删除1至5行，第二条命令用check替换test。命令的执行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果。</p>
<p>和 -e 等价的命令是 –expression：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed --expression=<span class="string">&#x27;s/test/check/&#x27;</span> --expression=<span class="string">&#x27;/love/d&#x27;</span> file</span><br></pre></td></tr></table></figure>

<h3 id="从文件读入：r命令"><a href="#从文件读入：r命令" class="headerlink" title="从文件读入：r命令"></a>从文件读入：r命令</h3><p>file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;/test/r file&#x27;</span> filename</span><br></pre></td></tr></table></figure>

<h3 id="写入文件：w命令"><a href="#写入文件：w命令" class="headerlink" title="写入文件：w命令"></a>写入文件：w命令</h3><p>在example中所有包含test的行都被写入file里：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;/test/w file&#x27;</span> example</span><br></pre></td></tr></table></figure>

<p>追加（行下）：a\命令</p>
<p>将 this is a test line 追加到 以test 开头的行后面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;/^test/a\this is a test line&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>在 test.conf 文件第2行之后插入 this is a test line：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;2a\this is a test line&#x27;</span> test.conf</span><br></pre></td></tr></table></figure>

<h3 id="插入（行上）：i-命令"><a href="#插入（行上）：i-命令" class="headerlink" title="插入（行上）：i\命令"></a>插入（行上）：i\命令</h3><p>将 this is a test line 追加到以test开头的行前面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;/^test/i\this is a test line&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>在test.conf文件第5行之前插入this is a test line：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;5i\this is a test line&#x27;</span> test.conf</span><br></pre></td></tr></table></figure>

<h3 id="替换指定行：c-命令"><a href="#替换指定行：c-命令" class="headerlink" title="替换指定行：c\命令"></a>替换指定行：c\命令</h3><p>把root开头的行替换新内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@node6 ~]<span class="comment"># sed &#x27;/^root/c this is new line!&#x27; passwd </span></span><br><span class="line">this is new line!</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br></pre></td></tr></table></figure>

<p>如果是指定范围替换，需要注意，sed不是每行进行替换，而是把整个范围作为整体替换：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@node6 ~]<span class="comment"># nl passwd | sed &#x27;1,5c\   this is dangerous!&#x27;</span></span><br><span class="line">     this is dangerous!</span><br><span class="line">     6	<span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">     7	shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br></pre></td></tr></table></figure>

<p>如果想实现对第一行到第五行统一替换为相同内容，可以用下面的命令实现：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@node5 ~]<span class="comment"># sed &#x27;1&#123;:a;s/.*/lutxixia/;n;6!ba&#125;&#x27; passwd </span></span><br><span class="line">lutxixia</span><br><span class="line">lutxixia</span><br><span class="line">lutxixia</span><br><span class="line">lutxixia</span><br><span class="line">lutxixia</span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line"></span><br><span class="line">其中：</span><br><span class="line">:a  	是设置一个循环标签</span><br><span class="line">s/.*/lutixia/	是用lutixia字符替换匹配到的每行内容</span><br><span class="line">n	是读取下一行</span><br><span class="line">6!	是读到第六行退出循环，终止操作,如果没有，则继续循环。</span><br><span class="line">ba	是如果没有到第六行就跳转到a继续循环</span><br></pre></td></tr></table></figure>

<h3 id="下一个：n命令"><a href="#下一个：n命令" class="headerlink" title="下一个：n命令"></a>下一个：n命令</h3><p>如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb，并打印该行，然后继续：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;/test/&#123; n; s/aa/bb/; &#125;&#x27;</span> file</span><br></pre></td></tr></table></figure>

<h3 id="变形：y命令"><a href="#变形：y命令" class="headerlink" title="变形：y命令"></a>变形：y命令</h3><p>把1~10行内所有abcde转变为大写，注意，正则表达式元字符不能使用这个命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;1,10y/abcde/ABCDE/&#x27;</span> file</span><br></pre></td></tr></table></figure>

<h3 id="退出：q命令"><a href="#退出：q命令" class="headerlink" title="退出：q命令"></a>退出：q命令</h3><p>打印完前10行后，退出sed:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;10q&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>直到找到第一个匹配项，退出sed：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@node4 ~]<span class="comment"># sed  &#x27;/nginx/q&#x27; nginx.yml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nginx</span><br></pre></td></tr></table></figure>

<h3 id="保持和获取：h命令和G命令"><a href="#保持和获取：h命令和G命令" class="headerlink" title="保持和获取：h命令和G命令"></a>保持和获取：h命令和G命令</h3><p>在sed处理文件的时候，每一行都被保存在一个叫模式空间的临时缓冲区中，除非行被删除或者输出被取消，否则所有被处理的行都将 打印在屏幕上。接着模式空间被清空，并存入新的一行等待处理。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;/test/h&#x27;</span> -e <span class="string">&#x27;$G&#x27;</span> file</span><br></pre></td></tr></table></figure>

<p>在这个例子里，匹配test的行被找到后，将存入模式空间，h命令将其复制并存入一个称为保持缓存区的特殊缓冲区内。第二条语句的意思是，当到达最后一行后，G命令取出保持缓冲区的行，然后把它放回模式空间中，且追加到现在已经存在于模式空间中的行的末尾。在这个例子中就是追加到最后一行。简单来说，任何包含test的行都被复制并追加到该文件的末尾。</p>
<h3 id="保持和互换：h命令和x命令"><a href="#保持和互换：h命令和x命令" class="headerlink" title="保持和互换：h命令和x命令"></a>保持和互换：h命令和x命令</h3><p>互换模式空间和保持缓冲区的内容。也就是把包含test与check的行互换：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;/test/h&#x27;</span> -e <span class="string">&#x27;/check/x&#x27;</span> file</span><br></pre></td></tr></table></figure>

<h3 id="脚本scriptfile"><a href="#脚本scriptfile" class="headerlink" title="脚本scriptfile"></a>脚本scriptfile</h3><p>sed脚本是一个sed的命令清单，启动sed时以-f选项引导脚本文件名。sed对于脚本中输入的命令非常挑剔，在命令的末尾不能有任何空白或文本，如果在一行中有多个命令，要用分号分隔。以#开头的行为注释行，且不能跨行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed [options] -f scriptfile file(s)</span><br></pre></td></tr></table></figure>

<h3 id="打印奇数行或偶数行"><a href="#打印奇数行或偶数行" class="headerlink" title="打印奇数行或偶数行"></a>打印奇数行或偶数行</h3><p>方法1：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;p;n&#x27;</span> test.txt  <span class="comment">#奇数行</span></span><br><span class="line">sed -n <span class="string">&#x27;n;p&#x27;</span> test.txt  <span class="comment">#偶数行</span></span><br></pre></td></tr></table></figure>

<p>方法2：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;1~2p&#x27;</span> test.txt  <span class="comment">#奇数行</span></span><br><span class="line">sed -n <span class="string">&#x27;2~2p&#x27;</span> test.txt  <span class="comment">#偶数行</span></span><br></pre></td></tr></table></figure>

<h3 id="打印匹配字符串的下一行"><a href="#打印匹配字符串的下一行" class="headerlink" title="打印匹配字符串的下一行"></a>打印匹配字符串的下一行</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep -A 1 SCC URFILE</span><br><span class="line">sed -n <span class="string">&#x27;/SCC/&#123;n;p&#125;&#x27;</span> URFILE</span><br><span class="line">awk <span class="string">&#x27;/SCC/&#123;getline; print&#125;&#x27;</span> URFILE</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>sed</tag>
      </tags>
  </entry>
  <entry>
    <title>team绑定双网卡</title>
    <url>/2024/01/13/team%E7%BB%91%E5%AE%9A%E5%8F%8C%E7%BD%91%E5%8D%A1/</url>
    <content><![CDATA[<h1 id="team绑定双网卡"><a href="#team绑定双网卡" class="headerlink" title="team绑定双网卡"></a>team绑定双网卡</h1><p>注意：虚拟机里做，一定要额外添加两块网卡才行，总共三块网卡</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看所有的网络连接</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection show</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建接口team，连接名team0，接口agg-eth0，工作模式为activebackup</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection add type team con-name team0 ifname agg-eth0 config &#x27;&#123;&quot;runner&quot;:&#123;&quot;name&quot;:&quot;activebackup&quot;&#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下为team0接口配置IP信息</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection modify team0 ipv4.addresses &quot;192.168.80.100/24&quot;</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection modify team0 ipv4.gateway &quot;192.168.80.2&quot;</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection modify team0 ipv4.dns &quot;192.168.80.2&quot;</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection modify team0 ipv4.method manual</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 ens38、ens37 加入agg-eth0</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection add type team-slave con-name team0-port1 ifname ens38 master agg-eth0</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection add type team-slave con-name team0-port2 ifname ens37 master agg-eth0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 激活 team0、team0-port1、team0-port2</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection up team0  </span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection up team0-port1</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection up team0-port2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 agg-eth0 网卡绑定的信息</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># teamdctl agg-eth0 state</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行此命令，并使用ping测试网络连通性，停掉一个，看会不会断，再启用，停掉另外一个测试。再复制一个窗口，一直ping自己的DNS，再用上面的命令看看是哪个网卡在工作</span></span><br><span class="line">[root@rhel7 ~]<span class="comment"># nmcli connection down team0-port1  </span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
        <category>team</category>
      </categories>
      <tags>
        <tag>双网卡绑定</tag>
        <tag>team</tag>
      </tags>
  </entry>
  <entry>
    <title>show-busy-java-threads</title>
    <url>/2024/05/01/show-busy-java-threads/</url>
    <content><![CDATA[<h1 id="show-busy-java-threads"><a href="#show-busy-java-threads" class="headerlink" title="show-busy-java-threads"></a><strong>show-busy-java-threads</strong></h1><h2 id="原版脚本"><a href="#原版脚本" class="headerlink" title="原版脚本"></a>原版脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># @Function</span></span><br><span class="line"><span class="comment"># Find out the highest cpu consumed threads of java, and print the stack of these threads.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># @Usage</span></span><br><span class="line"><span class="comment">#   $ ./show-busy-java-threads.sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">readonly</span> PROG=`<span class="built_in">basename</span> <span class="variable">$0</span>`</span><br><span class="line"><span class="built_in">readonly</span> -a COMMAND_LINE=(<span class="string">&quot;<span class="variable">$0</span>&quot;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">usage</span></span>() &#123;</span><br><span class="line">    <span class="built_in">cat</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">Usage: $&#123;PROG&#125; [OPTION]...</span></span><br><span class="line"><span class="string">Find out the highest cpu consumed threads of java, and print the stack of these threads.</span></span><br><span class="line"><span class="string">Example: $&#123;PROG&#125; -c 10</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Options:</span></span><br><span class="line"><span class="string">    -p, --pid       find out the highest cpu consumed threads from the specifed java process,</span></span><br><span class="line"><span class="string">                    default from all java process.</span></span><br><span class="line"><span class="string">    -c, --count     set the thread count to show, default is 5</span></span><br><span class="line"><span class="string">    -h, --help      display this help and exit</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">    <span class="built_in">exit</span> <span class="variable">$1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">readonly</span> ARGS=`getopt -n <span class="string">&quot;<span class="variable">$PROG</span>&quot;</span> -a -o c:p:h -l count:,pid:,<span class="built_in">help</span> -- <span class="string">&quot;<span class="variable">$@</span>&quot;</span>`</span><br><span class="line">[ $? -ne 0 ] &amp;&amp; usage 1</span><br><span class="line"><span class="built_in">eval</span> <span class="built_in">set</span> -- <span class="string">&quot;<span class="variable">$&#123;ARGS&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">    -c|--count)</span><br><span class="line">        count=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">        <span class="built_in">shift</span> 2</span><br><span class="line">        ;;</span><br><span class="line">    -p|--pid)</span><br><span class="line">        pid=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">        <span class="built_in">shift</span> 2</span><br><span class="line">        ;;</span><br><span class="line">    -h|--<span class="built_in">help</span>)</span><br><span class="line">        usage</span><br><span class="line">        ;;</span><br><span class="line">    --)</span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">count=<span class="variable">$&#123;count:-5&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">redEcho</span></span>() &#123;</span><br><span class="line">    [ -c /dev/stdout ] &amp;&amp; &#123;</span><br><span class="line">        <span class="comment"># if stdout is console, turn on color output.</span></span><br><span class="line">        <span class="built_in">echo</span> -ne <span class="string">&quot;\033[1;31m&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;\033[0m&quot;</span></span><br><span class="line">    &#125; || <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">yellowEcho</span></span>() &#123;</span><br><span class="line">    [ -c /dev/stdout ] &amp;&amp; &#123;</span><br><span class="line">        <span class="comment"># if stdout is console, turn on color output.</span></span><br><span class="line">        <span class="built_in">echo</span> -ne <span class="string">&quot;\033[1;33m&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;\033[0m&quot;</span></span><br><span class="line">    &#125; || <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">blueEcho</span></span>() &#123;</span><br><span class="line">    [ -c /dev/stdout ] &amp;&amp; &#123;</span><br><span class="line">        <span class="comment"># if stdout is console, turn on color output.</span></span><br><span class="line">        <span class="built_in">echo</span> -ne <span class="string">&quot;\033[1;36m&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;\033[0m&quot;</span></span><br><span class="line">    &#125; || <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check the existence of jstack command!</span></span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">which</span> jstack &amp;&gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">    [ -z <span class="string">&quot;<span class="variable">$JAVA_HOME</span>&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">        redEcho <span class="string">&quot;Error: jstack not found on PATH!&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    &#125;</span><br><span class="line">    ! [ -f <span class="string">&quot;<span class="variable">$JAVA_HOME</span>/bin/jstack&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">        redEcho <span class="string">&quot;Error: jstack not found on PATH and <span class="variable">$JAVA_HOME</span>/bin/jstack file does NOT exists!&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    &#125;</span><br><span class="line">    ! [ -x <span class="string">&quot;<span class="variable">$JAVA_HOME</span>/bin/jstack&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">        redEcho <span class="string">&quot;Error: jstack not found on PATH and <span class="variable">$JAVA_HOME</span>/bin/jstack is NOT executalbe!&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">readonly</span> uuid=`<span class="built_in">date</span> +%s`_<span class="variable">$&#123;RANDOM&#125;</span>_$$</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">cleanupWhenExit</span></span>() &#123;</span><br><span class="line">    <span class="built_in">rm</span> /tmp/<span class="variable">$&#123;uuid&#125;</span>_* &amp;&gt; /dev/null</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;cleanupWhenExit&quot;</span> EXIT</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">printStackOfThreads</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> line</span><br><span class="line">    <span class="built_in">local</span> count=1</span><br><span class="line">    <span class="keyword">while</span> IFS=<span class="string">&quot; &quot;</span> <span class="built_in">read</span> -a line ; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">local</span> pid=<span class="variable">$&#123;line[0]&#125;</span></span><br><span class="line">        <span class="built_in">local</span> threadId=<span class="variable">$&#123;line[1]&#125;</span></span><br><span class="line">        <span class="built_in">local</span> threadId0x=<span class="string">&quot;0x`printf %x <span class="variable">$&#123;threadId&#125;</span>`&quot;</span></span><br><span class="line">        <span class="built_in">local</span> user=<span class="variable">$&#123;line[2]&#125;</span></span><br><span class="line">        <span class="built_in">local</span> pcpu=<span class="variable">$&#123;line[4]&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">local</span> jstackFile=/tmp/<span class="variable">$&#123;uuid&#125;</span>_<span class="variable">$&#123;pid&#125;</span></span><br><span class="line"></span><br><span class="line">        [ ! -f <span class="string">&quot;<span class="variable">$&#123;jstackFile&#125;</span>&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;user&#125;</span>&quot;</span> == <span class="string">&quot;<span class="variable">$&#123;USER&#125;</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">                    jstack <span class="variable">$&#123;pid&#125;</span> &gt; <span class="variable">$&#123;jstackFile&#125;</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">if</span> [ <span class="variable">$UID</span> == 0 ]; <span class="keyword">then</span></span><br><span class="line">                        sudo -u <span class="variable">$&#123;user&#125;</span> jstack <span class="variable">$&#123;pid&#125;</span> &gt; <span class="variable">$&#123;jstackFile&#125;</span></span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        redEcho <span class="string">&quot;[<span class="subst">$((count++)</span>)] Fail to jstack Busy(<span class="variable">$&#123;pcpu&#125;</span>%) thread(<span class="variable">$&#123;threadId&#125;</span>/<span class="variable">$&#123;threadId0x&#125;</span>) stack of java process(<span class="variable">$&#123;pid&#125;</span>) under user(<span class="variable">$&#123;user&#125;</span>).&quot;</span></span><br><span class="line">                        redEcho <span class="string">&quot;User of java process(<span class="variable">$user</span>) is not current user(<span class="variable">$USER</span>), need sudo to run again:&quot;</span></span><br><span class="line">                        yellowEcho <span class="string">&quot;    sudo <span class="variable">$&#123;COMMAND_LINE[@]&#125;</span>&quot;</span></span><br><span class="line">                        <span class="built_in">echo</span></span><br><span class="line">                        <span class="built_in">continue</span></span><br><span class="line">                    <span class="keyword">fi</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">            &#125; || &#123;</span><br><span class="line">                redEcho <span class="string">&quot;[<span class="subst">$((count++)</span>)] Fail to jstack Busy(<span class="variable">$&#123;pcpu&#125;</span>%) thread(<span class="variable">$&#123;threadId&#125;</span>/<span class="variable">$&#123;threadId0x&#125;</span>) stack of java process(<span class="variable">$&#123;pid&#125;</span>) under user(<span class="variable">$&#123;user&#125;</span>).&quot;</span></span><br><span class="line">                <span class="built_in">echo</span></span><br><span class="line">                <span class="built_in">rm</span> <span class="variable">$&#123;jstackFile&#125;</span></span><br><span class="line">                <span class="built_in">continue</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        blueEcho <span class="string">&quot;[<span class="subst">$((count++)</span>)] Busy(<span class="variable">$&#123;pcpu&#125;</span>%) thread(<span class="variable">$&#123;threadId&#125;</span>/<span class="variable">$&#123;threadId0x&#125;</span>) stack of java process(<span class="variable">$&#123;pid&#125;</span>) under user(<span class="variable">$&#123;user&#125;</span>):&quot;</span></span><br><span class="line">        sed <span class="string">&quot;/nid=<span class="variable">$&#123;threadId0x&#125;</span> /,/^$/p&quot;</span> -n <span class="variable">$&#123;jstackFile&#125;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ps -Leo pid,lwp,user,<span class="built_in">comm</span>,pcpu --no-headers | &#123;</span><br><span class="line">    [ -z <span class="string">&quot;<span class="variable">$&#123;pid&#125;</span>&quot;</span> ] &amp;&amp;</span><br><span class="line">    awk <span class="string">&#x27;$4==&quot;java&quot;&#123;print $0&#125;&#x27;</span> ||</span><br><span class="line">    awk -v <span class="string">&quot;pid=<span class="variable">$&#123;pid&#125;</span>&quot;</span> <span class="string">&#x27;$1==pid,$4==&quot;java&quot;&#123;print $0&#125;&#x27;</span></span><br><span class="line">&#125; | <span class="built_in">sort</span> -k5 -r -n | <span class="built_in">head</span> --lines <span class="string">&quot;<span class="variable">$&#123;count&#125;</span>&quot;</span> | printStackOfThreads</span><br></pre></td></tr></table></figure>



<h2 id="注释版"><a href="#注释版" class="headerlink" title="注释版"></a>注释版</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># @Function</span></span><br><span class="line"><span class="comment"># 查找占用CPU最多的Java线程，并打印这些线程的堆栈。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># @Usage</span></span><br><span class="line"><span class="comment">#   $ ./show-busy-java-threads.sh</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义脚本名和命令行参数数组</span></span><br><span class="line"><span class="built_in">readonly</span> PROG=`<span class="built_in">basename</span> <span class="variable">$0</span>`</span><br><span class="line"><span class="built_in">readonly</span> -a COMMAND_LINE=(<span class="string">&quot;<span class="variable">$0</span>&quot;</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用说明函数</span></span><br><span class="line"><span class="function"><span class="title">usage</span></span>() &#123;</span><br><span class="line">    <span class="built_in">cat</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">Usage: $&#123;PROG&#125; [OPTION]...</span></span><br><span class="line"><span class="string">查找占用CPU最多的Java线程，并打印这些线程的堆栈。</span></span><br><span class="line"><span class="string">示例: $&#123;PROG&#125; -c 10</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">选项:</span></span><br><span class="line"><span class="string">    -p, --pid       从指定的Java进程中查找CPU使用最高的线程，</span></span><br><span class="line"><span class="string">                    默认从所有Java进程中查找。</span></span><br><span class="line"><span class="string">    -c, --count     设置要显示的线程数，默认为5</span></span><br><span class="line"><span class="string">    -h, --help      显示此帮助信息并退出</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">    <span class="built_in">exit</span> <span class="variable">$1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析命令行参数</span></span><br><span class="line"><span class="built_in">readonly</span> ARGS=`getopt -n <span class="string">&quot;<span class="variable">$PROG</span>&quot;</span> -a -o c:p:h -l count:,pid:,<span class="built_in">help</span> -- <span class="string">&quot;<span class="variable">$@</span>&quot;</span>`</span><br><span class="line">[ $? -ne 0 ] &amp;&amp; usage 1</span><br><span class="line"><span class="built_in">eval</span> <span class="built_in">set</span> -- <span class="string">&quot;<span class="variable">$&#123;ARGS&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环处理每个选项</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">    -c|--count)</span><br><span class="line">        count=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">        <span class="built_in">shift</span> 2</span><br><span class="line">        ;;</span><br><span class="line">    -p|--pid)</span><br><span class="line">        pid=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">        <span class="built_in">shift</span> 2</span><br><span class="line">        ;;</span><br><span class="line">    -h|--<span class="built_in">help</span>)</span><br><span class="line">        usage</span><br><span class="line">        ;;</span><br><span class="line">    --)</span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">count=<span class="variable">$&#123;count:-5&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印颜色函数</span></span><br><span class="line"><span class="function"><span class="title">redEcho</span></span>() &#123;</span><br><span class="line">    [ -c /dev/stdout ] &amp;&amp; &#123;</span><br><span class="line">        <span class="built_in">echo</span> -ne <span class="string">&quot;\033[1;31m&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;\033[0m&quot;</span></span><br><span class="line">    &#125; || <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">yellowEcho</span></span>() &#123;</span><br><span class="line">    [ -c /dev/stdout ] &amp;&amp; &#123;</span><br><span class="line">        <span class="built_in">echo</span> -ne <span class="string">&quot;\033[1;33m&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;\033[0m&quot;</span></span><br><span class="line">    &#125; || <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">blueEcho</span></span>() &#123;</span><br><span class="line">    [ -c /dev/stdout ] &amp;&amp; &#123;</span><br><span class="line">        <span class="built_in">echo</span> -ne <span class="string">&quot;\033[1;36m&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;\033[0m&quot;</span></span><br><span class="line">    &#125; || <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查jstack命令是否存在</span></span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">which</span> jstack &amp;&gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">    [ -z <span class="string">&quot;<span class="variable">$JAVA_HOME</span>&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">        redEcho <span class="string">&quot;错误: 路径上未找到jstack！&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    &#125;</span><br><span class="line">    ! [ -f <span class="string">&quot;<span class="variable">$JAVA_HOME</span>/bin/jstack&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">        redEcho <span class="string">&quot;错误: 路径上未找到jstack并且<span class="variable">$JAVA_HOME</span>/bin/jstack文件不存在！&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    &#125;</span><br><span class="line">    ! [ -x <span class="string">&quot;<span class="variable">$JAVA_HOME</span>/bin/jstack&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">        redEcho <span class="string">&quot;错误: 路径上未找到jstack并且<span class="variable">$JAVA_HOME</span>/bin/jstack不可执行！&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建唯一标识符</span></span><br><span class="line"><span class="built_in">readonly</span> uuid=`<span class="built_in">date</span> +%s`_<span class="variable">$&#123;RANDOM&#125;</span>_$$</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出时清理临时文件的函数</span></span><br><span class="line"><span class="function"><span class="title">cleanupWhenExit</span></span>() &#123;</span><br><span class="line">    <span class="built_in">rm</span> /tmp/<span class="variable">$&#123;uuid&#125;</span>_* &amp;&gt; /dev/null</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;cleanupWhenExit&quot;</span> EXIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印线程堆栈的函数</span></span><br><span class="line"><span class="function"><span class="title">printStackOfThreads</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> line</span><br><span class="line">    <span class="built_in">local</span> count=1</span><br><span class="line">    <span class="keyword">while</span> IFS=<span class="string">&quot; &quot;</span> <span class="built_in">read</span> -a line ; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">local</span> pid=<span class="variable">$&#123;line[0]&#125;</span></span><br><span class="line">        <span class="built_in">local</span> threadId=<span class="variable">$&#123;line[1]&#125;</span></span><br><span class="line">        <span class="built_in">local</span> threadId0x=<span class="string">&quot;0x`printf %x <span class="variable">$&#123;threadId&#125;</span>`&quot;</span></span><br><span class="line">        <span class="built_in">local</span> user=<span class="variable">$&#123;line[2]&#125;</span></span><br><span class="line">        <span class="built_in">local</span> pcpu=<span class="variable">$&#123;line[4]&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">local</span> jstackFile=/tmp/<span class="variable">$&#123;uuid&#125;</span>_<span class="variable">$&#123;pid&#125;</span></span><br><span class="line"></span><br><span class="line">        [ ! -f <span class="string">&quot;<span class="variable">$&#123;jstackFile&#125;</span>&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;user&#125;</span>&quot;</span> == <span class="string">&quot;<span class="variable">$&#123;USER&#125;</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">                    jstack <span class="variable">$&#123;pid&#125;</span> &gt; <span class="variable">$&#123;jstackFile&#125;</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">if</span> [ <span class="variable">$UID</span> == 0 ]; <span class="keyword">then</span></span><br><span class="line">                        sudo -u <span class="variable">$&#123;user&#125;</span> jstack <span class="variable">$&#123;pid&#125;</span> &gt; <span class="variable">$&#123;jstackFile&#125;</span></span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        redEcho <span class="string">&quot;[<span class="subst">$((count++)</span>)]  获取忙碌(<span class="variable">$&#123;pcpu&#125;</span>%)线程(<span class="variable">$&#123;threadId&#125;</span>/<span class="variable">$&#123;threadId0x&#125;</span>)堆栈的java进程(<span class="variable">$&#123;pid&#125;</span>)失败。&quot;</span></span><br><span class="line">                        redEcho <span class="string">&quot;Java进程的用户(<span class="variable">$user</span>)并不是当前用户(<span class="variable">$USER</span>)，需要使用sudo再次运行：&quot;</span></span><br><span class="line">                        yellowEcho <span class="string">&quot;    sudo <span class="variable">$&#123;COMMAND_LINE[@]&#125;</span>&quot;</span></span><br><span class="line">                        <span class="built_in">echo</span></span><br><span class="line">                        <span class="built_in">continue</span></span><br><span class="line">                    <span class="keyword">fi</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">            &#125; || &#123;</span><br><span class="line">                redEcho <span class="string">&quot;[<span class="subst">$((count++)</span>)]  获取忙碌(<span class="variable">$&#123;pcpu&#125;</span>%)线程(<span class="variable">$&#123;threadId&#125;</span>/<span class="variable">$&#123;threadId0x&#125;</span>)堆栈的java进程(<span class="variable">$&#123;pid&#125;</span>)失败。&quot;</span></span><br><span class="line">                <span class="built_in">echo</span></span><br><span class="line">                <span class="built_in">rm</span> <span class="variable">$&#123;jstackFile&#125;</span></span><br><span class="line">                <span class="built_in">continue</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        blueEcho <span class="string">&quot;[<span class="subst">$((count++)</span>)] 忙碌(<span class="variable">$&#123;pcpu&#125;</span>%)线程(<span class="variable">$&#123;threadId&#125;</span>/<span class="variable">$&#123;threadId0x&#125;</span>)的堆栈信息，java进程(<span class="variable">$&#123;pid&#125;</span>)，用户(<span class="variable">$&#123;user&#125;</span>):&quot;</span></span><br><span class="line">        sed <span class="string">&quot;/nid=<span class="variable">$&#123;threadId0x&#125;</span> /,/^$/p&quot;</span> -n <span class="variable">$&#123;jstackFile&#125;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主命令，查找并打印高CPU使用线程的堆栈</span></span><br><span class="line">ps -Leo pid,lwp,user,<span class="built_in">comm</span>,pcpu --no-headers | &#123;</span><br><span class="line">    [ -z <span class="string">&quot;<span class="variable">$&#123;pid&#125;</span>&quot;</span> ] &amp;&amp;</span><br><span class="line">    awk <span class="string">&#x27;$4==&quot;java&quot;&#123;print $0&#125;&#x27;</span> ||</span><br><span class="line">    awk -v <span class="string">&quot;pid=<span class="variable">$&#123;pid&#125;</span>&quot;</span> <span class="string">&#x27;$1==pid,$4==&quot;java&quot;&#123;print $0&#125;&#x27;</span></span><br><span class="line">&#125; | <span class="built_in">sort</span> -k5 -r -n | <span class="built_in">head</span> --lines <span class="string">&quot;<span class="variable">$&#123;count&#125;</span>&quot;</span> | printStackOfThreads</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Shell脚本</category>
      </categories>
      <tags>
        <tag>Shell脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>常见环境依赖安装</title>
    <url>/2024/01/22/%E5%90%84%E7%A7%8D%E7%8E%AF%E5%A2%83%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<h2 id="常见环境依赖安装"><a href="#常见环境依赖安装" class="headerlink" title="常见环境依赖安装"></a>常见环境依赖安装</h2><h3 id="1-Python3环境"><a href="#1-Python3环境" class="headerlink" title="1.Python3环境"></a>1.Python3环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install yum-utils wget</span><br><span class="line"></span><br><span class="line">yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum groupinstall <span class="string">&quot;Development Tools&quot;</span> -y</span><br><span class="line"></span><br><span class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel</span><br><span class="line"></span><br><span class="line">wget https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz</span><br><span class="line"></span><br><span class="line">tar xJf Python-3.10.9.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> Python-3.10.9</span><br><span class="line"></span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line">make -j4 &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">python3.10 --version</span><br></pre></td></tr></table></figure>

<h3 id="2-gcc11-环境"><a href="#2-gcc11-环境" class="headerlink" title="2.gcc11+环境"></a>2.gcc11+环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install bzip2 gcc gcc-c++ kernel-devel</span><br><span class="line">wget http://ftp.gnu.org/gnu/gcc/gcc-11.2.0/gcc-11.2.0.tar.gz</span><br><span class="line">tar -zxvf gcc-11.2.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> gcc-11.2.0</span><br><span class="line">./contrib/download_prerequisites</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build/</span><br><span class="line">../configure -enable-checking=release -enable-languages=c,c++ -disable-multilib</span><br><span class="line">make -j4 &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h3 id="3-make4-3环境"><a href="#3-make4-3环境" class="headerlink" title="3.make4.3环境"></a>3.make4.3环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install make gcc -y</span><br><span class="line">wget https://mirrors.aliyun.com/gnu/make/make-4.3.tar.gz</span><br><span class="line">tar -zxf make-4.3.tar.gz </span><br><span class="line"><span class="built_in">cd</span> make-4.3/</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">../configure --prefix=/usr &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h3 id="4-bison环境"><a href="#4-bison环境" class="headerlink" title="4.bison环境"></a>4.bison环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install m4 -y</span><br><span class="line">wget https://ftp.gnu.org/gnu/bison/bison-3.8.2.tar.gz</span><br><span class="line">tar xvf bison-3.8.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> bison-3.8.2</span><br><span class="line">./configure --prefix=/usr/local/bison</span><br><span class="line">make -j 2 &amp;&amp; make install</span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/profile &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">export PATH=/usr/local/bison/bin:$PATH</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">. /etc/profile</span><br></pre></td></tr></table></figure>

<h3 id="5-glibc2-31"><a href="#5-glibc2-31" class="headerlink" title="5.glibc2.31"></a>5.glibc2.31</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#这个要依赖上面的环境</span></span><br><span class="line">wget https://mirrors.aliyun.com/gnu/glibc/glibc-2.31.tar.gz</span><br><span class="line">tar -zxf glibc-2.31.tar.gz</span><br><span class="line"><span class="built_in">cd</span> glibc-2.31/</span><br><span class="line"><span class="built_in">cat</span> INSTALL | grep -E <span class="string">&quot;newer|later&quot;</span></span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">../configure  --prefix=/usr --disable-profile --enable-add-ons --with-headers=/usr/include --with-binutils=/usr/bin --disable-sanity-checks --disable-werror</span><br><span class="line">make -j2</span><br><span class="line">make install</span><br><span class="line">strings /lib64/libc.so.6 | grep ^GLIBC</span><br><span class="line">make localedata/install-locales</span><br></pre></td></tr></table></figure>

<h3 id="6-修复rpm数据库"><a href="#6-修复rpm数据库" class="headerlink" title="6.修复rpm数据库"></a>6.修复rpm数据库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -f /var/lib/rpm/__db*</span><br><span class="line">rpm --rebuilddb</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个视情况而定</span></span><br><span class="line">sudo <span class="built_in">ln</span> -s /lib64/libtinfo.so.5 /lib64/libtinfo.so.6</span><br></pre></td></tr></table></figure>

<h3 id="7-java8环境"><a href="#7-java8环境" class="headerlink" title="7.java8环境"></a>7.java8环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#去官网下载安装包</span></span><br><span class="line">https://www.oracle.com/java/technologies/downloads/<span class="comment">#java8</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /opt/src</span><br><span class="line"><span class="built_in">mkdir</span> -p /opt/app/java</span><br><span class="line"><span class="built_in">cd</span> /opt/src</span><br><span class="line">tar -zxvf jdk-8u391-linux-x64.tar.gz -C /opt/app/java</span><br><span class="line"></span><br><span class="line">[root@server1 ~]<span class="comment"># vim /etc/profile</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/app/java/jdk1.8.0_391</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"></span><br><span class="line">[root@server1 ~]<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure>

<h3 id="8-Ruby环境"><a href="#8-Ruby环境" class="headerlink" title="8.Ruby环境"></a>8.Ruby环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#方式一：yum安装，可以设置特定版本</span></span><br><span class="line">yum install -y centos-release-scl-rh</span><br><span class="line">yum install -y rh-ruby30</span><br><span class="line">scl <span class="built_in">enable</span> rh-ruby30 bash</span><br><span class="line">ruby -v</span><br><span class="line"></span><br><span class="line"><span class="comment">#方式二：二进制包安装</span></span><br><span class="line">wget https://cache.ruby-lang.org/pub/ruby/3.0/ruby-3.0.6.tar.gz</span><br><span class="line">tar -zxvf  ruby-3.0.6.tar.gz</span><br><span class="line"><span class="built_in">cd</span> ruby-3.0.6</span><br><span class="line">./configure --prefix=/opt/ruby</span><br><span class="line">make -j4 &amp;&amp; make install</span><br><span class="line"><span class="built_in">ln</span> -s /opt/ruby/bin/ruby /usr/bin/ruby</span><br><span class="line"><span class="built_in">ln</span> -s /opt/ruby/bin/gem /usr/bin/gem</span><br></pre></td></tr></table></figure>

<h3 id="9-lua环境"><a href="#9-lua环境" class="headerlink" title="9.lua环境"></a>9.lua环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install libtermcap-devel ncurses-devel libevent-devel readline-devel -y</span><br><span class="line">wget https://www.lua.org/ftp/lua-5.4.6.tar.gz</span><br><span class="line">tar zxvf lua-5.4.6.tar.gz</span><br><span class="line"><span class="built_in">cd</span> lua-5.4.6</span><br><span class="line"></span><br><span class="line">make linux <span class="built_in">test</span></span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个看情况而定</span></span><br><span class="line"><span class="comment">#ln -s /usr/local/bin/lua /usr/bin/lua</span></span><br><span class="line"><span class="comment">#ln -s /usr/local/bin/luac /usr/bin/luac</span></span><br><span class="line"></span><br><span class="line">lua -v</span><br></pre></td></tr></table></figure>

<h3 id="10-node-js环境"><a href="#10-node-js环境" class="headerlink" title="10.node.js环境"></a>10.node.js环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#官网地址：https://nodejs.org/en</span></span><br><span class="line">wget https://nodejs.org/dist/v20.11.1/node-v20.11.1-linux-x64.tar.xz</span><br><span class="line">tar -xJf node-v20.11.1-linux-x64.tar.xz</span><br><span class="line"><span class="built_in">mv</span> node-v20.11.1-linux-x64 /usr/local/nodejs</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=/usr/local/nodejs/bin:$PATH&#x27;</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">node -v</span><br></pre></td></tr></table></figure>



<h3 id="11-gcc依赖的四个包"><a href="#11-gcc依赖的四个包" class="headerlink" title="11.gcc依赖的四个包"></a>11.gcc依赖的四个包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#也可以全部手动编译所需四个包</span></span><br><span class="line"><span class="comment">#1.GMP编译安装（gcc的依赖包）</span></span><br><span class="line">wget https://ftp.gnu.org/gnu/gmp/gmp-6.3.0.tar.xz</span><br><span class="line">tar xvf gmp-6.3.0.tar.xz</span><br><span class="line"><span class="built_in">cd</span> gmp-6.3.0</span><br><span class="line">./configure --prefix=/usr/local/gmp-6.3</span><br><span class="line">make -j 2 &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.MPFR编译安装（gcc的依赖包）</span></span><br><span class="line">wget https://ftp.gnu.org/gnu/mpfr/mpfr-4.2.1.tar.gz</span><br><span class="line">tar xzvf mpfr-4.2.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mpfr-4.2.1</span><br><span class="line">./configure --prefix=/usr/local/mpfr-4.2.1 --with-gmp=/usr/local/gmp-6.3</span><br><span class="line">make -j 2 &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.MPC编译安装（gcc的依赖包）</span></span><br><span class="line">wget https://ftp.gnu.org/gnu/mpc/mpc-1.3.1.tar.gz</span><br><span class="line">tar xzvf mpc-1.3.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mpc-1.3.1</span><br><span class="line">./configure --prefix=/usr/local/mpc-1.3.1 --with-gmp=/usr/local/gmp-6.3 --with-mpfr=/usr/local/mpfr-4.2.1</span><br><span class="line">make -j 2 &amp;&amp; make install</span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/profile &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">export LD_LIBRARY_PATH=/usr/local/mpc-1.3.1/lib:/usr/local/gmp-6.3/lib:/usr/local/mpfr-4.2.1/lib</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.ISL编译安装</span></span><br><span class="line">wget http://isl.gforge.inria.fr/isl-0.18.tar.xz</span><br><span class="line">tar -xjvf isl-0.18.tar.xz</span><br><span class="line"><span class="built_in">cd</span> isl-0.18</span><br><span class="line">./configure --prefix=/usr/local/isl-0.18  --with-gmp=/usr/local/gmp-6.3.0</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加动态链接库,编辑如下</span></span><br><span class="line">vim /etc/ld.so.conf</span><br><span class="line">include ld.so.conf.d/*.conf</span><br><span class="line">/lib</span><br><span class="line">/lib64</span><br><span class="line">/usr/lib</span><br><span class="line">/usr/lib64</span><br><span class="line">/usr/local/lib</span><br><span class="line">/usr/local/lib64</span><br><span class="line">/usr/local/gmp-6.1.0/lib</span><br><span class="line">/usr/local/mpc-1.0.3/lib</span><br><span class="line">/usr/local/mpfr-3.1.4/lib</span><br><span class="line"></span><br><span class="line"><span class="comment">#备注： 重新搜索当前系统上所有库文件搜索路径下的库文件,并生成缓存</span></span><br><span class="line">ldconfig -v</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>环境依赖</tag>
      </tags>
  </entry>
  <entry>
    <title>安装Tomcat</title>
    <url>/2024/01/25/%E5%AE%89%E8%A3%85Tomcat/</url>
    <content><![CDATA[<h2 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h2><h3 id="jdk环境"><a href="#jdk环境" class="headerlink" title="jdk环境"></a>jdk环境</h3><p>这里以jdk8环境为例，但是需要账号登陆，wget无法直接使用，需要自行上传安装包到机器中</p>
<p>下载地址：<code>https://www.oracle.com/java/technologies/downloads/archive/</code></p>
<ul>
<li>创建存放目录</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /opt/src</span><br><span class="line"><span class="built_in">mkdir</span> -p /opt/app/java</span><br></pre></td></tr></table></figure>

<ul>
<li>解压压缩包文件到软件目录</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/src</span><br><span class="line">tar -zxvf jdk-8u391-linux-x64.tar.gz -C /opt/app/java</span><br></pre></td></tr></table></figure>

<ul>
<li>查看一下是否解压成功</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># ls /opt/app/java</span></span><br><span class="line">jdk1.8.0_391</span><br></pre></td></tr></table></figure>

<ul>
<li>添加环境变量</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># vim /etc/profile</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/app/java/jdk1.8.0_391</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"></span><br><span class="line">[root@server1 ~]<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure>

<ul>
<li>验证一下版本信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># java -version</span></span><br><span class="line">java version <span class="string">&quot;1.8.0_391&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_391-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.391-b13, mixed mode)</span><br></pre></td></tr></table></figure>

<h3 id="tomcat的安装"><a href="#tomcat的安装" class="headerlink" title="tomcat的安装"></a>tomcat的安装</h3><ul>
<li>下载解压tomcat</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/app</span><br><span class="line">wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.86/bin/apache-tomcat-9.0.86.tar.gz</span><br><span class="line">tar -zxvf apache-tomcat-9.0.86.tar.gz</span><br></pre></td></tr></table></figure>

<ul>
<li>进入bin目录下</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/app/apache-tomcat-9.0.86/bin</span><br></pre></td></tr></table></figure>

<ul>
<li>启动</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./startup.sh</span><br><span class="line"><span class="comment">#输出如下：</span></span><br><span class="line">Using CATALINA_BASE:   /opt/app/apache-tomcat-9.0.86</span><br><span class="line">Using CATALINA_HOME:   /opt/app/apache-tomcat-9.0.86</span><br><span class="line">Using CATALINA_TMPDIR: /opt/app/apache-tomcat-9.0.86/temp</span><br><span class="line">Using JRE_HOME:        /opt/app/java/jdk1.8.0_391</span><br><span class="line">Using CLASSPATH:       /opt/app/apache-tomcat-9.0.86/bin/bootstrap.jar:/opt/app/apache-tomcat-9.0.86/bin/tomcat-juli.jar</span><br><span class="line">Using CATALINA_OPTS:</span><br><span class="line">Tomcat started.</span><br></pre></td></tr></table></figure>

<ul>
<li>查看tomcat进程</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server1 ~]<span class="comment"># ps aux |grep tomcat</span></span><br><span class="line">root       4285  0.4 12.1 2999672 226480 pts/0  Sl   21:06   0:11 /opt/app/java/jdk1.8.0_391/bin/java -Djava.util.logging.config.file=/root/apache-tomcat-9.0.86/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /root/apache-tomcat-9.0.86/bin/bootstrap.jar:/root/apache-tomcat-9.0.86/bin/tomcat-juli.jar -Dcatalina.base=/root/apache-tomcat-9.0.86 -Dcatalina.home=/root/apache-tomcat-9.0.86 -Djava.io.tmpdir=/root/apache-tomcat-9.0.86/temp org.apache.catalina.startup.Bootstrap start</span><br><span class="line">root       4396  0.0  0.0 112812   976 pts/0    S+   21:48   0:00 grep --color=auto tomcat</span><br></pre></td></tr></table></figure>

<ul>
<li>访问</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">通过 ip:8080访问网页</span><br></pre></td></tr></table></figure>

<h3 id="tomcat配置"><a href="#tomcat配置" class="headerlink" title="tomcat配置"></a>tomcat配置</h3><p>Tomcat的主要目录结构大致如下：</p>
<ol>
<li><code>bin/</code>：此目录包含了用于启动和停止Tomcat的脚本。例如，<code>startup.sh</code>用于在Unix&#x2F;Linux系统上启动Tomcat，而<code>shutdown.sh</code>则用于停止Tomcat。</li>
<li><code>conf/</code>：此目录包含了Tomcat的配置文件，如<code>server.xml</code>，在这些文件中可以对Tomcat的行为做出具体的配置。</li>
<li><code>lib/</code>：此目录存储了Tomcat运行所需的Java库文件。</li>
<li><code>logs/</code>：此目录包含了Tomcat运行时产生的日志文件。</li>
<li><code>temp/</code>：此目录用于存储Tomcat运行时产生的临时文件。</li>
<li><code>webapps/</code>：这是Tomcat默认的应用部署目录，把你的应用（一般是WAR文件）放在这里，Tomcat就会自动部署并启动这个应用。</li>
<li><code>work/</code>：这个目录用于存储Tomcat的工作文件，比如JSP文件编译后产生的Servlet等。</li>
<li><code>LICENSE</code>, <code>RUNNING.txt</code>, <code>README.md</code>等：这些文件包含了关于Tomcat的版权、运行指南、读我等信息。</li>
</ol>
<h4 id="修改端口号"><a href="#修改端口号" class="headerlink" title="修改端口号"></a>修改端口号</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /opt/app/apache-tomcat-9.0.86/conf/server.xml</span><br><span class="line"><span class="comment">#修改如下段，修改成没被占用的端口：</span></span><br><span class="line">  &lt;Connector port=<span class="string">&quot;8088&quot;</span> protocol=<span class="string">&quot;HTTP/1.1&quot;</span></span><br><span class="line">               connectionTimeout=<span class="string">&quot;20000&quot;</span></span><br><span class="line">               redirectPort=<span class="string">&quot;8443&quot;</span></span><br><span class="line">               maxParameterCount=<span class="string">&quot;1000&quot;</span></span><br><span class="line">               /&gt;</span><br><span class="line">               </span><br><span class="line"><span class="comment">#修改完重启tomcat</span></span><br><span class="line"><span class="built_in">cd</span> /opt/app/apache-tomcat-9.0.86/bin</span><br><span class="line">./shutdown.sh</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>域控管理常用脚本</title>
    <url>/2024/05/01/%E5%9F%9F%E6%8E%A7%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h2 id="域控管理常用脚本"><a href="#域控管理常用脚本" class="headerlink" title="域控管理常用脚本"></a>域控管理常用脚本</h2><h3 id="1-批量创建用户-永不过期版"><a href="#1-批量创建用户-永不过期版" class="headerlink" title="1.批量创建用户(永不过期版)"></a>1.批量创建用户(永不过期版)</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入 CSV 文件，注意csv文件的编码和多余行，这个版本的账户默认为永不过期</span></span><br><span class="line"><span class="variable">$csvPath</span> = <span class="string">&quot;C:\user.csv&quot;</span></span><br><span class="line"><span class="variable">$users</span> = <span class="built_in">Import-Csv</span> <span class="variable">$csvPath</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置域控信息</span></span><br><span class="line"><span class="variable">$domainController</span> = <span class="string">&quot;testad.com&quot;</span></span><br><span class="line"><span class="variable">$ou</span> = <span class="string">&quot;OU=IT部门,OU=强盛集团,DC=testad,DC=com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环遍历 CSV 文件中的每一行</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span> <span class="keyword">in</span> <span class="variable">$users</span>) &#123;</span><br><span class="line">    <span class="comment"># 从 CSV 中获取用户信息</span></span><br><span class="line">    <span class="variable">$username</span> = <span class="variable">$user</span>.Username</span><br><span class="line">    <span class="variable">$firstname</span> = <span class="variable">$user</span>.FirstName</span><br><span class="line">    <span class="variable">$lastname</span> = <span class="variable">$user</span>.LastName</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$user</span>.Password</span><br><span class="line">    <span class="variable">$pager</span> = <span class="variable">$user</span>.Pager  <span class="comment"># 假设 CSV 有一个名为 Pager 的列</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 将密码转换为安全字符串</span></span><br><span class="line">    <span class="variable">$securePassword</span> = <span class="built_in">ConvertTo-SecureString</span> <span class="literal">-String</span> <span class="variable">$password</span> <span class="literal">-AsPlainText</span> <span class="literal">-Force</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 拼接姓名得到显示名称</span></span><br><span class="line">    <span class="variable">$displayName</span> = <span class="string">&quot;<span class="variable">$lastname</span><span class="variable">$firstname</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置邮箱地址</span></span><br><span class="line">    <span class="variable">$emailAddress</span> = <span class="string">&quot;<span class="variable">$username</span>@<span class="variable">$domainController</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建用户，添加显示名称和邮箱</span></span><br><span class="line">    <span class="built_in">New-ADUser</span> <span class="literal">-SamAccountName</span> <span class="variable">$username</span> `</span><br><span class="line">               <span class="literal">-UserPrincipalName</span> <span class="string">&quot;<span class="variable">$username</span>@<span class="variable">$domainController</span>&quot;</span> `</span><br><span class="line">               <span class="literal">-Name</span> <span class="string">&quot;<span class="variable">$lastname</span><span class="variable">$firstname</span>&quot;</span> `</span><br><span class="line">               <span class="literal">-GivenName</span> <span class="variable">$firstname</span> `</span><br><span class="line">               <span class="literal">-Surname</span> <span class="variable">$lastname</span> `</span><br><span class="line">               <span class="literal">-DisplayName</span> <span class="variable">$displayName</span> `</span><br><span class="line">               <span class="literal">-EmailAddress</span> <span class="variable">$emailAddress</span> `</span><br><span class="line">               <span class="literal">-AccountPassword</span> <span class="variable">$securePassword</span> `</span><br><span class="line">               <span class="literal">-CannotChangePassword</span> <span class="variable">$false</span> `</span><br><span class="line">               <span class="literal">-PasswordNeverExpires</span> <span class="variable">$false</span> `</span><br><span class="line">               <span class="literal">-Enabled</span> <span class="variable">$true</span> `</span><br><span class="line">               <span class="literal">-OtherAttributes</span> <span class="selector-tag">@</span>&#123;<span class="string">&#x27;pager&#x27;</span>=<span class="variable">$pager</span>&#125; `</span><br><span class="line">               <span class="literal">-Path</span> <span class="variable">$ou</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>对应CSV文件结构</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Username</th>
<th align="center">LastName</th>
<th align="center">FirstName</th>
<th align="center">Password</th>
<th align="center">Pager</th>
</tr>
</thead>
</table>
<h3 id="2-批量创建用户-指定过期时间"><a href="#2-批量创建用户-指定过期时间" class="headerlink" title="2.批量创建用户(指定过期时间)"></a>2.批量创建用户(指定过期时间)</h3><ul>
<li>注意修改自己的OU等信息</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下面是可以指定账户过期时间的版本</span></span><br><span class="line"><span class="comment"># 导入 CSV 文件</span></span><br><span class="line"><span class="variable">$csvPath</span> = <span class="string">&quot;C:\user.csv&quot;</span></span><br><span class="line"><span class="variable">$users</span> = <span class="built_in">Import-Csv</span> <span class="variable">$csvPath</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置域控信息</span></span><br><span class="line"><span class="variable">$domainController</span> = <span class="string">&quot;testad.com&quot;</span></span><br><span class="line"><span class="variable">$ou</span> = <span class="string">&quot;OU=外部公司,DC=testad,DC=com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环遍历 CSV 文件中的每一行</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span> <span class="keyword">in</span> <span class="variable">$users</span>) &#123;</span><br><span class="line">    <span class="comment"># 从 CSV 中获取用户信息</span></span><br><span class="line">    <span class="variable">$username</span> = <span class="variable">$user</span>.Username</span><br><span class="line">    <span class="variable">$firstname</span> = <span class="variable">$user</span>.FirstName</span><br><span class="line">    <span class="variable">$lastname</span> = <span class="variable">$user</span>.LastName</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$user</span>.Password</span><br><span class="line">    <span class="variable">$pager</span> = <span class="variable">$user</span>.Pager <span class="comment"># 假设 CSV 有一个名为 Pager 的列</span></span><br><span class="line">    <span class="variable">$accountExpirationDate</span> = <span class="variable">$user</span>.ExpirationDate <span class="comment"># 从 CSV 读取账户过期时间</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 将密码转换为安全字符串</span></span><br><span class="line">    <span class="variable">$securePassword</span> = <span class="built_in">ConvertTo-SecureString</span> <span class="literal">-String</span> <span class="variable">$password</span> <span class="literal">-AsPlainText</span> <span class="literal">-Force</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 拼接姓名得到显示名称</span></span><br><span class="line">    <span class="variable">$displayName</span> = <span class="string">&quot;<span class="variable">$lastname</span><span class="variable">$firstname</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置邮箱地址</span></span><br><span class="line">    <span class="variable">$emailAddress</span> = <span class="string">&quot;<span class="variable">$username</span>@<span class="variable">$domainController</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$accountExpirationDate</span> = <span class="variable">$user</span>.ExpirationDate</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (![<span class="built_in">string</span>]::IsNullOrEmpty(<span class="variable">$accountExpirationDate</span>)) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment"># 转换为 DateTime 对象</span></span><br><span class="line">        <span class="variable">$expirationDate</span> = [<span class="built_in">datetime</span>]::ParseExact(<span class="variable">$accountExpirationDate</span>, <span class="string">&#x27;yyyy-MM-dd&#x27;</span>, <span class="variable">$null</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 添一天确保在指定时区的次日结束过期</span></span><br><span class="line">        <span class="variable">$expirationDate</span> = <span class="variable">$expirationDate</span>.AddDays(<span class="number">1</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        <span class="built_in">Write-Warning</span> <span class="string">&quot;无法解析用户 <span class="variable">$username</span> 的过期日期: &#x27;<span class="variable">$accountExpirationDate</span>&#x27;&quot;</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建用户，添加显示名称、邮箱和账户过期时间</span></span><br><span class="line">    <span class="built_in">New-ADUser</span> <span class="literal">-SamAccountName</span> <span class="variable">$username</span> `</span><br><span class="line">               <span class="literal">-UserPrincipalName</span> <span class="string">&quot;<span class="variable">$username</span>@<span class="variable">$domainController</span>&quot;</span> `</span><br><span class="line">               <span class="literal">-Name</span> <span class="string">&quot;<span class="variable">$displayName</span>&quot;</span> `</span><br><span class="line">               <span class="literal">-GivenName</span> <span class="variable">$firstname</span> `</span><br><span class="line">               <span class="literal">-Surname</span> <span class="variable">$lastname</span> `</span><br><span class="line">               <span class="literal">-DisplayName</span> <span class="variable">$displayName</span> `</span><br><span class="line">               <span class="literal">-EmailAddress</span> <span class="variable">$emailAddress</span> `</span><br><span class="line">               <span class="literal">-AccountPassword</span> <span class="variable">$securePassword</span> `</span><br><span class="line">               <span class="literal">-PasswordNeverExpires</span> <span class="variable">$false</span> `</span><br><span class="line">               <span class="literal">-CannotChangePassword</span> <span class="variable">$false</span> `</span><br><span class="line">               <span class="literal">-AccountExpirationDate</span> <span class="variable">$expirationDate</span> `</span><br><span class="line">               <span class="literal">-Enabled</span> <span class="variable">$true</span> `</span><br><span class="line">               <span class="literal">-OtherAttributes</span> <span class="selector-tag">@</span>&#123;<span class="string">&#x27;pager&#x27;</span>=<span class="variable">$pager</span>&#125; `</span><br><span class="line">               <span class="literal">-Path</span> <span class="variable">$ou</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>对应CSV文件结构</li>
</ul>
<table>
<thead>
<tr>
<th align="center">Username</th>
<th align="center">LastName</th>
<th align="center">FirstName</th>
<th align="center">Password</th>
<th align="center">Pager</th>
<th align="center">ExpirationDate</th>
</tr>
</thead>
</table>
<h3 id="3-批量修改账户过期时间"><a href="#3-批量修改账户过期时间" class="headerlink" title="3.批量修改账户过期时间"></a>3.批量修改账户过期时间</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"><span class="built_in">Import-Csv</span> <span class="string">&quot;C:\modify.csv&quot;</span> | <span class="built_in">ForEach-Object</span> &#123;</span><br><span class="line">    <span class="comment"># 解析日期并加上一天</span></span><br><span class="line">    <span class="variable">$expiredate</span> = [<span class="built_in">DateTime</span>]::ParseExact(<span class="variable">$_</span>.expiredate, <span class="string">&quot;yyyy-MM-dd&quot;</span>, <span class="variable">$null</span>).AddDays(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">Set-ADUser</span> <span class="variable">$_</span>.username <span class="literal">-AccountExpirationDate</span> <span class="variable">$expiredate</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>对应CSV文件结构</li>
</ul>
<table>
<thead>
<tr>
<th align="center">username</th>
<th align="center">expiredate</th>
</tr>
</thead>
</table>
<h3 id="4-指定账户永不过期"><a href="#4-指定账户永不过期" class="headerlink" title="4.指定账户永不过期"></a>4.指定账户永不过期</h3><ul>
<li>有一个username列</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"><span class="built_in">Import-Csv</span> <span class="string">&quot;C:\modify.csv&quot;</span> | <span class="built_in">ForEach-Object</span> &#123;</span><br><span class="line">    <span class="comment"># 设置用户账户为永不过期</span></span><br><span class="line">    <span class="built_in">Set-ADUser</span> <span class="variable">$_</span>.username <span class="literal">-AccountExpirationDate</span> <span class="variable">$null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-批量修改密码"><a href="#5-批量修改密码" class="headerlink" title="5.批量修改密码"></a>5.批量修改密码</h3><ul>
<li>csv要有一个sAMAccountName和password列</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$userlist</span> = <span class="built_in">Import-Csv</span> <span class="literal">-Path</span> <span class="string">&quot;C:\user.csv&quot;</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span> <span class="keyword">in</span> <span class="variable">$userlist</span>) &#123;</span><br><span class="line">    dsmod user (dsquery user <span class="literal">-samid</span> <span class="variable">$user</span>.sAMAccountName) <span class="literal">-pwd</span> <span class="variable">$user</span>.password</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-设置密码是否永不过期"><a href="#6-设置密码是否永不过期" class="headerlink" title="6.设置密码是否永不过期"></a>6.设置密码是否永不过期</h3><ul>
<li>单个用户或者全部</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"><span class="built_in">Get-ADUser</span> <span class="literal">-Filter</span> <span class="string">&#x27;Name -like &quot;*&quot;&#x27;</span> | <span class="built_in">Set-ADUser</span> <span class="literal">-PasswordNeverExpires</span> <span class="variable">$false</span></span><br></pre></td></tr></table></figure>

<ul>
<li>指定用户</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">Username</span><br><span class="line">user1</span><br><span class="line">user2</span><br><span class="line">user3</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"><span class="variable">$users</span> = <span class="built_in">Import-Csv</span> <span class="literal">-Path</span> <span class="string">&quot;C:\users.csv&quot;</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span> <span class="keyword">in</span> <span class="variable">$users</span>) &#123;</span><br><span class="line">    <span class="built_in">Get-ADUser</span> <span class="literal">-Identity</span> <span class="variable">$user</span>.Username | <span class="built_in">Set-ADUser</span> <span class="literal">-PasswordNeverExpires</span> <span class="variable">$false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="7-批量删除用户"><a href="#7-批量删除用户" class="headerlink" title="7.批量删除用户"></a>7.批量删除用户</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"><span class="built_in">Import-Csv</span> <span class="string">&quot;C:\deleteusers.csv&quot;</span> | <span class="built_in">ForEach-Object</span> &#123;</span><br><span class="line">    <span class="comment"># 删除用户账户</span></span><br><span class="line">    <span class="built_in">Remove-ADUser</span> <span class="literal">-Identity</span> <span class="variable">$_</span>.username <span class="literal">-Confirm</span>:<span class="variable">$False</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="8-批量修改用户登录名"><a href="#8-批量修改用户登录名" class="headerlink" title="8.批量修改用户登录名"></a>8.批量修改用户登录名</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"><span class="built_in">Import-Csv</span> <span class="string">&quot;C:\username.csv&quot;</span> | <span class="built_in">ForEach-Object</span> &#123;</span><br><span class="line">    <span class="comment"># 获取当前用户的详细信息</span></span><br><span class="line">    <span class="variable">$user</span> = <span class="built_in">Get-ADUser</span> <span class="literal">-Filter</span> <span class="string">&quot;SamAccountName -eq &#x27;<span class="variable">$</span>(<span class="variable">$_</span>.OldUsername)&#x27;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$user</span>) &#123;</span><br><span class="line">        <span class="comment"># 如果用户存在，则同时更新其 sAMAccountName、UserPrincipalName 和 mail</span></span><br><span class="line">        <span class="built_in">Set-ADUser</span> <span class="literal">-Identity</span> <span class="variable">$user</span> <span class="literal">-SamAccountName</span> <span class="variable">$_</span>.NewSamAccountName <span class="literal">-UserPrincipalName</span> <span class="variable">$_</span>.NewUserPrincipalName <span class="literal">-EmailAddress</span> <span class="variable">$_</span>.NewUserPrincipalName</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;Updated usernames and email for <span class="variable">$</span>(<span class="variable">$user</span>.Name): sAMAccountName to <span class="variable">$</span>(<span class="variable">$_</span>.NewSamAccountName), UserPrincipalName and EmailAddress to <span class="variable">$</span>(<span class="variable">$_</span>.NewUserPrincipalName)&quot;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;User <span class="variable">$</span>(<span class="variable">$_</span>.OldUsername) not found.&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>结构如下</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">OldUsername,NewSamAccountName,NewUserPrincipalName</span><br><span class="line">zhangdaniu,lierniu,lierniu@domain.com</span><br></pre></td></tr></table></figure>

<h3 id="9-批量允许用户可修改密码"><a href="#9-批量允许用户可修改密码" class="headerlink" title="9.批量允许用户可修改密码"></a>9.批量允许用户可修改密码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置成true,原来状态是不允许的，就可以变成允许，因为域控写的是，“用户不能更改密码”</span></span><br><span class="line">Username,CanChangePassword</span><br><span class="line">pjt_zhanglinyan,<span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入Active Directory模块</span></span><br><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定CSV文件路径</span></span><br><span class="line"><span class="variable">$csvPath</span> = <span class="string">&quot;C:\passwd.csv&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从CSV文件读取用户数据</span></span><br><span class="line"><span class="variable">$users</span> = <span class="built_in">Import-Csv</span> <span class="literal">-Path</span> <span class="variable">$csvPath</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span> <span class="keyword">in</span> <span class="variable">$users</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment"># 获取AD用户对象</span></span><br><span class="line">        <span class="variable">$adUser</span> = <span class="built_in">Get-ADUser</span> <span class="literal">-Identity</span> <span class="variable">$user</span>.Username <span class="literal">-Properties</span> CannotChangePassword</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 根据CSV文件设置&#x27;CannotChangePassword&#x27;属性</span></span><br><span class="line">        <span class="variable">$canChangePassword</span> = <span class="keyword">if</span> (<span class="variable">$user</span>.CanChangePassword <span class="operator">-eq</span> <span class="string">&#x27;true&#x27;</span>) &#123;<span class="variable">$false</span>&#125; <span class="keyword">else</span> &#123;<span class="variable">$true</span>&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 更新AD用户对象的属性</span></span><br><span class="line">        <span class="built_in">Set-ADUser</span> <span class="literal">-Identity</span> <span class="variable">$user</span>.Username <span class="literal">-CannotChangePassword</span> <span class="variable">$canChangePassword</span></span><br><span class="line">        </span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;已更新用户 <span class="variable">$</span>(<span class="variable">$user</span>.Username) 的密码修改设置。&quot;</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;无法更新用户 <span class="variable">$</span>(<span class="variable">$user</span>.Username) 的设置。错误: <span class="variable">$_</span>&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="10-批量禁用域账户"><a href="#10-批量禁用域账户" class="headerlink" title="10.批量禁用域账户"></a>10.批量禁用域账户</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入Active Directory模块，如果未安装可能需要先安装RSAT工具</span></span><br><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定CSV文件路径</span></span><br><span class="line"><span class="variable">$csvPath</span> = <span class="string">&quot;C:\aban.csv&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从CSV文件中读取用户名</span></span><br><span class="line"><span class="variable">$users</span> = <span class="built_in">Import-Csv</span> <span class="literal">-Path</span> <span class="variable">$csvPath</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历每一个用户名，并尝试禁用对应的AD账户</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span> <span class="keyword">in</span> <span class="variable">$users</span>) &#123;</span><br><span class="line">    <span class="comment"># 获取AD用户对象</span></span><br><span class="line">    <span class="variable">$adUser</span> = <span class="built_in">Get-ADUser</span> <span class="literal">-Filter</span> <span class="string">&quot;SamAccountName -eq &#x27;<span class="variable">$</span>(<span class="variable">$user</span>.Username)&#x27;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 如果用户存在，则禁用账户</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$adUser</span>) &#123;</span><br><span class="line">        <span class="built_in">Disable-ADAccount</span> <span class="literal">-Identity</span> <span class="variable">$adUser</span></span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;User <span class="variable">$</span>(<span class="variable">$user</span>.Username) has been disabled.&quot;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;User <span class="variable">$</span>(<span class="variable">$user</span>.Username) not found.&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="11-批量添加部门属性"><a href="#11-批量添加部门属性" class="headerlink" title="11.批量添加部门属性"></a>11.批量添加部门属性</h3><ul>
<li>csv结构</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UserName,Department</span><br><span class="line">user1,HR</span><br><span class="line">user2,Finance</span><br><span class="line">user3,IT</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将这里的路径替换为你的CSV文件的绝对路径</span></span><br><span class="line"><span class="variable">$csvPath</span> = <span class="string">&quot;C:\你的文件夹路径\file.csv&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取CSV文件</span></span><br><span class="line"><span class="variable">$users</span> = <span class="built_in">Import-Csv</span> <span class="literal">-Path</span> <span class="variable">$csvPath</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历CSV文件中的每一行，为用户更新Department属性</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span> <span class="keyword">in</span> <span class="variable">$users</span>) &#123;</span><br><span class="line">    <span class="comment"># 获取用户的Distinguished Name (DN)</span></span><br><span class="line">    <span class="variable">$userDN</span> = <span class="built_in">Get-ADUser</span> <span class="literal">-Filter</span> <span class="string">&quot;SamAccountName -eq &#x27;<span class="variable">$</span>(<span class="variable">$user</span>.UserName)&#x27;&quot;</span> | <span class="built_in">Select-Object</span> <span class="literal">-ExpandProperty</span> DistinguishedName</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$userDN</span>) &#123;</span><br><span class="line">        <span class="comment"># 更新用户的Department属性</span></span><br><span class="line">        <span class="built_in">Set-ADUser</span> <span class="literal">-Identity</span> <span class="variable">$userDN</span> <span class="literal">-Department</span> <span class="variable">$user</span>.Department</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;已更新 <span class="variable">$</span>(<span class="variable">$user</span>.UserName) 的部门为: <span class="variable">$</span>(<span class="variable">$user</span>.Department)&quot;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">Write-Host</span> <span class="string">&quot;未找到用户 <span class="variable">$</span>(<span class="variable">$user</span>.UserName) 。&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="12-查询用户密码到期时间"><a href="#12-查询用户密码到期时间" class="headerlink" title="12.查询用户密码到期时间"></a>12.查询用户密码到期时间</h3><ul>
<li>单个用户</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 确保您已经导入Active Directory模块</span></span><br><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取用户的用户名</span></span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;YourUsername&quot;</span> <span class="comment"># 将YourUsername替换成实际的用户名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询并显示密码到期时间</span></span><br><span class="line"><span class="built_in">Get-AdUser</span> <span class="variable">$username</span> <span class="literal">-Properties</span> <span class="string">&quot;DisplayName&quot;</span>, <span class="string">&quot;msDS-UserPasswordExpiryTimeComputed&quot;</span> |</span><br><span class="line"><span class="built_in">Select-Object</span> <span class="literal">-Property</span> <span class="string">&quot;DisplayName&quot;</span>, <span class="selector-tag">@</span>&#123;Name=<span class="string">&quot;PasswordExpiryDate&quot;</span>;Expression=&#123;[<span class="built_in">datetime</span>]::FromFileTime(<span class="variable">$_</span>.<span class="string">&quot;msDS-UserPasswordExpiryTimeComputed&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>还可以查询全部用户的，账号太多不建议这么做</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> ActiveDirectory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询整个域中的所有用户的密码到期时间以及密码是否永不过期，并对没有DisplayName的使用sAMAccountName填充</span></span><br><span class="line"><span class="built_in">Get-AdUser</span> <span class="literal">-Filter</span> * <span class="literal">-Properties</span> <span class="string">&quot;DisplayName&quot;</span>, <span class="string">&quot;msDS-UserPasswordExpiryTimeComputed&quot;</span>, <span class="string">&quot;PasswordNeverExpires&quot;</span>, <span class="string">&quot;sAMAccountName&quot;</span> |</span><br><span class="line"><span class="built_in">Select-Object</span> <span class="literal">-Property</span> <span class="selector-tag">@</span>&#123;Name=<span class="string">&quot;DisplayName&quot;</span>;Expression=&#123;</span><br><span class="line">    <span class="keyword">if</span> ([<span class="built_in">string</span>]::IsNullOrWhiteSpace(<span class="variable">$_</span>.DisplayName)) &#123;</span><br><span class="line">        <span class="variable">$_</span>.sAMAccountName  <span class="comment"># 如果DisplayName为空，则使用sAMAccountName作为替代</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$_</span>.DisplayName</span><br><span class="line">    &#125;</span><br><span class="line">&#125;&#125;,</span><br><span class="line"><span class="selector-tag">@</span>&#123;Name=<span class="string">&quot;PasswordExpiryDate&quot;</span>;Expression=&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_</span>.PasswordNeverExpires) &#123;</span><br><span class="line">        <span class="string">&quot;永不过期&quot;</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        [<span class="built_in">datetime</span>]::FromFileTime(<span class="variable">$_</span>.<span class="string">&quot;msDS-UserPasswordExpiryTimeComputed&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;&#125;,</span><br><span class="line"><span class="selector-tag">@</span>&#123;Name=<span class="string">&quot;PasswordNeverExpires&quot;</span>;Expression=&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_</span>.PasswordNeverExpires) &#123;</span><br><span class="line">        <span class="string">&quot;是&quot;</span> </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="string">&quot;否&quot;</span> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;&#125; |</span><br><span class="line"><span class="built_in">Sort-Object</span> PasswordExpiryDate | <span class="built_in">Format-Table</span> <span class="literal">-AutoSize</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>WinServer</category>
        <category>域控</category>
      </categories>
      <tags>
        <tag>域控</tag>
        <tag>powershell</tag>
        <tag>AD</tag>
      </tags>
  </entry>
  <entry>
    <title>install_chrony_client</title>
    <url>/2024/03/03/%E5%AE%89%E8%A3%85chrony%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h2 id="安装chrony客户端"><a href="#安装chrony客户端" class="headerlink" title="安装chrony客户端"></a>安装chrony客户端</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#**********************************************************************************************</span></span><br><span class="line"><span class="comment">#FileName:      install_chrony_client.sh</span></span><br><span class="line"><span class="comment">#Description:   install_chrony_client for CentOS 7/8 &amp; Ubuntu 18.04/20.04 &amp; Rocky 8</span></span><br><span class="line"><span class="comment">#*********************************************************************************************</span></span><br><span class="line">COLOR=<span class="string">&quot;echo -e \\033[01;31m&quot;</span></span><br><span class="line">END=<span class="string">&#x27;\033[0m&#x27;</span></span><br><span class="line">SERVERS=(<span class="string">&quot;172.31.1.8&quot;</span> <span class="string">&quot;172.31.1.9&quot;</span> <span class="string">&quot;172.31.1.10&quot;</span>)  <span class="comment"># 这里添加多个服务器地址</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">os</span></span>()&#123;</span><br><span class="line">    OS_ID=$(sed -rn <span class="string">&#x27;/^NAME=/s@.*=&quot;([[:alpha:]]+).*&quot;$@\1@p&#x27;</span> /etc/os-release)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check_chrony_installed</span></span>()&#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;OS_ID&#125;</span>&quot;</span> == <span class="string">&quot;CentOS&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$&#123;OS_ID&#125;</span>&quot;</span> == <span class="string">&quot;Rocky&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        rpm -q chrony &amp;&gt; /dev/null &amp;&amp; &#123; <span class="variable">$&#123;COLOR&#125;</span><span class="string">&quot;chrony 已经安装&quot;</span><span class="variable">$&#123;END&#125;</span>; <span class="built_in">exit</span> 0; &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        dpkg -l | grep -qw chrony &amp;&amp; &#123; <span class="variable">$&#123;COLOR&#125;</span><span class="string">&quot;chrony 已经安装&quot;</span><span class="variable">$&#123;END&#125;</span>; <span class="built_in">exit</span> 0; &#125;</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">configure_chrony</span></span>()&#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;OS_ID&#125;</span>&quot;</span> == <span class="string">&quot;CentOS&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$&#123;OS_ID&#125;</span>&quot;</span> == <span class="string">&quot;Rocky&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        CHRONY_CONF=<span class="string">&quot;/etc/chrony.conf&quot;</span></span><br><span class="line">        sed -i -e <span class="string">&#x27;/^pool.*/d&#x27;</span> -e <span class="string">&#x27;/^server.*/d&#x27;</span> /etc/chrony.conf</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        CHRONY_CONF=<span class="string">&quot;/etc/chrony/chrony.conf&quot;</span></span><br><span class="line">        sed -i -e <span class="string">&#x27;/^pool.*/d&#x27;</span> /etc/chrony/chrony.conf</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> SERVER <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;SERVERS[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;server <span class="variable">$&#123;SERVER&#125;</span> iburst&quot;</span> &gt;&gt; <span class="variable">$&#123;CHRONY_CONF&#125;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">install_chrony</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Installing chrony on <span class="variable">$&#123;OS_ID&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;OS_ID&#125;</span>&quot;</span> == <span class="string">&quot;CentOS&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$&#123;OS_ID&#125;</span>&quot;</span> == <span class="string">&quot;Rocky&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        yum -y install chrony</span><br><span class="line">        configure_chrony</span><br><span class="line">        systemctl <span class="built_in">enable</span> --now chronyd</span><br><span class="line">        systemctl is-active chronyd || &#123; <span class="variable">$&#123;COLOR&#125;</span><span class="string">&quot;chrony 启动失败,退出!&quot;</span><span class="variable">$&#123;END&#125;</span>; <span class="built_in">exit</span> 1; &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        apt -y install chrony</span><br><span class="line">        configure_chrony</span><br><span class="line">        systemctl <span class="built_in">enable</span> --now chronyd</span><br><span class="line">        systemctl is-active chronyd || &#123; <span class="variable">$&#123;COLOR&#125;</span><span class="string">&quot;chrony 启动失败,退出!&quot;</span><span class="variable">$&#123;END&#125;</span>; <span class="built_in">exit</span> 1; &#125;</span><br><span class="line">        systemctl restart chronyd</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="variable">$&#123;COLOR&#125;</span><span class="string">&quot;chrony 安装完成&quot;</span><span class="variable">$&#123;END&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">show_status</span></span>()&#123;</span><br><span class="line">    systemctl restart chronyd</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;请耐心等待5秒，时间服务器同步中！&quot;</span></span><br><span class="line">    <span class="built_in">sleep</span> 5</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;当前使用的时间服务器：&quot;</span></span><br><span class="line">    chronyc sources</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    os</span><br><span class="line">    check_chrony_installed</span><br><span class="line">    install_chrony</span><br><span class="line">    show_status</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Shell脚本</category>
      </categories>
      <tags>
        <tag>Shell脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>install_chrony_server</title>
    <url>/2024/03/04/%E5%AE%89%E8%A3%85chrony%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%84%9A%E6%9C%AC%20/</url>
    <content><![CDATA[<h2 id="安装chrony服务端"><a href="#安装chrony服务端" class="headerlink" title="安装chrony服务端"></a>安装chrony服务端</h2><ul>
<li>感觉和安装客户端步骤差不多，如果想在内网其他机器中做一台时间服务器可以用这个</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#**********************************************************************************************</span></span><br><span class="line"><span class="comment"># FileName:      install_chrony_server.sh</span></span><br><span class="line"><span class="comment"># Description:   install_chrony_server for CentOS 7/8 &amp; Ubuntu 18.04/20.04 &amp; Rocky 8</span></span><br><span class="line"><span class="comment">#*********************************************************************************************</span></span><br><span class="line">COLOR=<span class="string">&quot;echo -e \\033[01;31m&quot;</span></span><br><span class="line">END=<span class="string">&#x27;\033[0m&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">os</span></span>()&#123;</span><br><span class="line">    OS_ID=`sed -rn <span class="string">&#x27;/^NAME=/s@.*=&quot;([[:alpha:]]+).*&quot;$@\1@p&#x27;</span> /etc/os-release`</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Detected OS: <span class="variable">$&#123;OS_ID&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">is_installed</span></span>()&#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">command</span> -v chronyd &amp;&gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">return</span> 0</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">return</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">install_chrony</span></span>()&#123;</span><br><span class="line">    <span class="keyword">if</span> is_installed; <span class="keyword">then</span></span><br><span class="line">        <span class="variable">$&#123;COLOR&#125;</span><span class="string">&quot;chrony已安装，跳过安装过程&quot;</span><span class="variable">$&#123;END&#125;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$&#123;OS_ID&#125;</span> == <span class="string">&quot;CentOS&quot;</span> -o <span class="variable">$&#123;OS_ID&#125;</span> == <span class="string">&quot;Rocky&quot;</span> ] &amp;&gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;安装 chrony 中...&quot;</span></span><br><span class="line">            yum -y install chrony</span><br><span class="line">            <span class="variable">$&#123;COLOR&#125;</span><span class="string">&quot;chrony安装完成&quot;</span><span class="variable">$&#123;END&#125;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;安装 chrony 中...&quot;</span></span><br><span class="line">            apt -y install chrony</span><br><span class="line">            <span class="variable">$&#123;COLOR&#125;</span><span class="string">&quot;chrony安装完成&quot;</span><span class="variable">$&#123;END&#125;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">configure_chrony</span></span>()&#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$&#123;OS_ID&#125;</span> == <span class="string">&quot;CentOS&quot;</span> -o <span class="variable">$&#123;OS_ID&#125;</span> == <span class="string">&quot;Rocky&quot;</span> ] &amp;&gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;配置 chrony 中...&quot;</span></span><br><span class="line">        sed -i -e <span class="string">&#x27;/^pool.*/d&#x27;</span> -e <span class="string">&#x27;/^server.*/d&#x27;</span> -e <span class="string">&#x27;/^# Please consider .*/a\server ntp.aliyun.com iburst\nserver time1.cloud.tencent.com iburst\nserver ntp.tuna.tsinghua.edu.cn iburst&#x27;</span> -e <span class="string">&#x27;s@^#allow.*@allow 0.0.0.0/0@&#x27;</span> -e <span class="string">&#x27;s@^#local.*@local stratum 10@&#x27;</span> /etc/chrony.conf</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;配置 chrony 中...&quot;</span></span><br><span class="line">        sed -i -e <span class="string">&#x27;/^pool.*/d&#x27;</span> -e <span class="string">&#x27;/^# See http:.*/a\server ntp.aliyun.com iburst\nserver time1.cloud.tencent.com iburst\nserver ntp.tuna.tsinghua.edu.cn iburst&#x27;</span> /etc/chrony/chrony.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;allow 0.0.0.0/0&quot;</span> &gt;&gt; /etc/chrony/chrony.conf</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;local stratum 10&quot;</span> &gt;&gt; /etc/chrony/chrony.conf</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;启动并启用 chronyd 服务中...&quot;</span></span><br><span class="line">    systemctl <span class="built_in">enable</span> --now chronyd</span><br><span class="line">    systemctl is-active chronyd &amp;&gt; /dev/null ||  &#123; <span class="variable">$&#123;COLOR&#125;</span><span class="string">&quot;chrony 启动失败,退出!&quot;</span><span class="variable">$&#123;END&#125;</span> ; <span class="built_in">exit</span>; &#125;</span><br><span class="line">    <span class="variable">$&#123;COLOR&#125;</span><span class="string">&quot;chrony 配置完成&quot;</span><span class="variable">$&#123;END&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">show_status</span></span>()&#123;</span><br><span class="line">    systemctl restart chronyd</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;请耐心等待5秒，时间服务器同步中！&quot;</span></span><br><span class="line">    <span class="built_in">sleep</span> 5</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;当前使用的时间服务器：&quot;</span></span><br><span class="line">    chronyc sources</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;当前同步状态：&quot;</span></span><br><span class="line">    chronyc tracking</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    os</span><br><span class="line">    install_chrony</span><br><span class="line">    configure_chrony</span><br><span class="line">    show_status</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Shell脚本</category>
      </categories>
      <tags>
        <tag>Shell脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>install_docker</title>
    <url>/2024/03/06/%E5%AE%89%E8%A3%85docker%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -o nounset</span><br><span class="line"><span class="comment">#set -o errexit</span></span><br><span class="line"><span class="comment">#set -o xtrace</span></span><br><span class="line"></span><br><span class="line">RED=<span class="string">&#x27;\033[0;31m&#x27;</span></span><br><span class="line">GREEN=<span class="string">&#x27;\033[32;1m&#x27;</span></span><br><span class="line">YELLOW=<span class="string">&#x27;\033[33;1m&#x27;</span></span><br><span class="line">NC=<span class="string">&#x27;\033[0m&#x27;</span> <span class="comment"># No Color</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># default version, can be overridden by cmd line options</span></span><br><span class="line">REGISTRY_MIRROR=<span class="variable">$&#123;REGISTRY_MIRROR:-&quot;CN&quot;&#125;</span></span><br><span class="line">DOCKER_VERSION=<span class="variable">$&#123;VERSION:-&quot;20.10.9&quot;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $(<span class="built_in">arch</span>) == <span class="string">&quot;x86_64&quot;</span> ] || [ $(<span class="built_in">arch</span>) == <span class="string">&quot;amd64&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    DOCKER_VER=<span class="variable">$&#123;DOCKER_VERSION&#125;</span></span><br><span class="line"><span class="keyword">elif</span> [ $(<span class="built_in">arch</span>) == <span class="string">&quot;aarch64&quot;</span> ] || [ $(<span class="built_in">arch</span>) == <span class="string">&quot;arm64&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    DOCKER_VER=arm-<span class="variable">$&#123;DOCKER_VERSION&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># default version, can be overridden by cmd line options</span></span><br><span class="line">REGISTRY_MIRROR=<span class="variable">$&#123;REGISTRY_MIRROR:-&quot;CN&quot;&#125;</span></span><br><span class="line">DOCKER_VERSION=<span class="variable">$&#123;VERSION:-&quot;20.10.9&quot;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">arch</span>=$(<span class="built_in">uname</span> -m)</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$arch</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">    x86_64 | amd64)</span><br><span class="line">        DOCKER_VER=<span class="variable">$&#123;DOCKER_VERSION&#125;</span></span><br><span class="line">        DOCKER_URL=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/static/stable/x86_64/docker-<span class="variable">$&#123;DOCKER_VER&#125;</span>.tgz&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">    aarch64 | arm64)</span><br><span class="line">        DOCKER_VER=<span class="string">&quot;arm64-<span class="variable">$&#123;DOCKER_VERSION&#125;</span>&quot;</span></span><br><span class="line">        DOCKER_URL=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/static/stable/aarch64/docker-<span class="variable">$&#123;DOCKER_VER&#125;</span>.tgz&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;RED&#125;</span>[ERROR] Unsupported architecture: <span class="variable">$arch</span> <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">install_docker</span></span>() &#123;</span><br><span class="line">    <span class="comment"># check if a container runtime is already installed</span></span><br><span class="line">    systemctl status docker | grep Active | grep -q running &amp;&amp; &#123;</span><br><span class="line">        docker_version=$(sudo docker version | grep -A 10 Server | grep Version | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">        docker_ver_major=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$docker_version</span>&quot;</span> | awk -F <span class="string">&quot;.&quot;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">        docker_ver_minor=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$docker_version</span>&quot;</span> | awk -F <span class="string">&quot;.&quot;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$docker_ver_major</span>&quot;</span> == <span class="string">&quot;1&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$docker_ver_minor</span>&quot;</span> == <span class="string">&quot;12&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;RED&#125;</span>[ERROR] If your host has Dokcer installed, please make sure that the version cannot be less than 1.13.x <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;YELLOW&#125;</span>[WARN] Docker has been installed on the host <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sudo <span class="built_in">mkdir</span> -p /usr/local/bin /etc/docker /opt/docker/down</span><br><span class="line">    <span class="keyword">if</span> [[ -f <span class="string">&quot;/opt/docker/down/docker-<span class="variable">$&#123;DOCKER_VER&#125;</span>.tgz&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;GREEN&#125;</span>[INFO] docker binaries already existed <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;GREEN&#125;</span>[INFO] downloading docker binaries <span class="variable">$&#123;DOCKER_VER&#125;</span> <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">if</span> [[ -e /usr/bin/curl ]]; <span class="keyword">then</span></span><br><span class="line">            curl -C- -O --retry 3 <span class="string">&quot;<span class="variable">$&#123;DOCKER_URL&#125;</span>&quot;</span> || &#123;</span><br><span class="line">                <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;RED&#125;</span>[ERROR] downloading docker failed <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            wget -c <span class="string">&quot;<span class="variable">$DOCKER_URL</span>&quot;</span> || &#123;</span><br><span class="line">                <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;RED&#125;</span>[ERROR] downloading docker failed <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        sudo <span class="built_in">mv</span> ./docker-<span class="variable">$&#123;DOCKER_VER&#125;</span>.tgz /opt/docker/down</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    sudo bash -c <span class="string">&#x27;tar zxf /opt/docker/down/docker-*.tgz -C /opt/docker/down &amp;&amp;</span></span><br><span class="line"><span class="string">        mv /opt/docker/down/docker/* /usr/local/bin &amp;&amp;</span></span><br><span class="line"><span class="string">        ln -sf /usr/local/bin/docker /bin/docker &amp;&amp; rm -rf /opt/docker/down&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;GREEN&#125;</span>[INFO] generate docker service file <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">    sudo bash -c <span class="string">&#x27;cat &gt;/etc/systemd/system/docker.service &lt;&lt;EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Docker Application Container Engine</span></span><br><span class="line"><span class="string">Documentation=http://docs.docker.io</span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">OOMScoreAdjust=-1000</span></span><br><span class="line"><span class="string">Environment=&quot;PATH=/usr/local/bin:/bin:/sbin:/usr/bin:/usr/sbin&quot;</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/bin/dockerd</span></span><br><span class="line"><span class="string">ExecStartPost=/sbin/iptables -I FORWARD -s 0.0.0.0/0 -j ACCEPT</span></span><br><span class="line"><span class="string">ExecReload=/bin/kill -s HUP \$MAINPID</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">RestartSec=5</span></span><br><span class="line"><span class="string">LimitNOFILE=infinity</span></span><br><span class="line"><span class="string">LimitNPROC=infinity</span></span><br><span class="line"><span class="string">LimitCORE=infinity</span></span><br><span class="line"><span class="string">Delegate=yes</span></span><br><span class="line"><span class="string">KillMode=process</span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># configuration for dockerd</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;GREEN&#125;</span>[INFO] generate docker config file <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$REGISTRY_MIRROR</span>&quot;</span> == CN ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;GREEN&#125;</span>[INFO] prepare register mirror for <span class="variable">$&#123;REGISTRY_MIRROR&#125;</span> <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">        sudo bash -c <span class="string">&#x27;cat &gt;/etc/docker/daemon.json &lt;&lt;EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;registry-mirrors&quot;: [</span></span><br><span class="line"><span class="string">    &quot;https://docker.mirrors.tuna.tsinghua.edu.cn&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://registry.docker-cn.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.mirrors.ustc.edu.cn&quot;</span></span><br><span class="line"><span class="string">  ],</span></span><br><span class="line"><span class="string">  &quot;max-concurrent-downloads&quot;: 10,</span></span><br><span class="line"><span class="string">  &quot;max-concurrent-uploads&quot;: 10,</span></span><br><span class="line"><span class="string">  &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">  &quot;log-level&quot;: &quot;warn&quot;,</span></span><br><span class="line"><span class="string">  &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;max-size&quot;: &quot;10m&quot;,</span></span><br><span class="line"><span class="string">    &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">  &quot;data-root&quot;: &quot;/var/lib/docker&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF&#x27;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;GREEN&#125;</span>[INFO] standard config without registry mirrors <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">        sudo bash -c <span class="string">&#x27;cat &gt;/etc/docker/daemon.json &lt;&lt;EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;max-concurrent-downloads&quot;: 10,</span></span><br><span class="line"><span class="string">  &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">  &quot;log-level&quot;: &quot;warn&quot;,</span></span><br><span class="line"><span class="string">  &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;max-size&quot;: &quot;10m&quot;,</span></span><br><span class="line"><span class="string">    &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">  &quot;data-root&quot;: &quot;/var/lib/docker&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF&#x27;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> [[ -e /etc/centos-release || -e /etc/redhat-release ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;GREEN&#125;</span>[INFO] turn off selinux in CentOS/Redhat <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">        sudo setenforce 0</span><br><span class="line">        sudo sed -ir <span class="string">&quot;s/^SELINUX=.*/SELINUX=disabled/&quot;</span> /etc/selinux/config</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;GREEN&#125;</span>[INFO] Enable and start docker <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">    sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">    sudo systemctl daemon-reload &amp;&amp; sudo systemctl restart docker &amp;&amp; <span class="built_in">sleep</span> 8 &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;GREEN&#125;</span>[INFO] Docker installed successfully <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">check_iptables</span></span>() &#123;</span><br><span class="line">    os_type=$(<span class="built_in">cat</span> /etc/os-release | grep <span class="string">&quot;^ID=&quot;</span> | awk -F= <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="built_in">tr</span> -d [:punct:])</span><br><span class="line">    os_version_id=$(<span class="built_in">cat</span> /etc/os-release | grep <span class="string">&quot;VERSION_ID=&quot;</span> | awk -F= <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="built_in">tr</span> -d [:punct:])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([[ -e /usr/sbin/iptables ]] || [[ -e /sbin/iptables ]]); <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;GREEN&#125;</span>[INFO] iptables already installed <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$os_type</span> <span class="keyword">in</span></span><br><span class="line">        debian)</span><br><span class="line">            <span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$os_version_id</span>&quot;</span> == <span class="string">&quot;11&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;RED&#125;</span>[ERROR] iptables not installed, Please install iptables manually &#x27;apt-get update &amp;&amp; apt install -y iptables-persistent&#x27;, Execute the script again after the installation is complete.<span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line">        *)</span><br><span class="line">            <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;RED&#125;</span>[ERROR] Installation of iptables via script is not supported, Please install iptables manually <span class="variable">$&#123;NC&#125;</span>&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># check iptables</span></span><br><span class="line">check_iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># install docker</span></span><br><span class="line">install_docker</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Shell脚本</category>
      </categories>
      <tags>
        <tag>Shell脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>SFTP搭建</title>
    <url>/2024/01/31/%E6%90%AD%E5%BB%BASFTP/</url>
    <content><![CDATA[<h3 id="SFTP搭建流程"><a href="#SFTP搭建流程" class="headerlink" title="SFTP搭建流程"></a>SFTP搭建流程</h3><ul>
<li>准备工作：检查openssh版本<br>使用系统自带的internal-sftp搭建sftp，因为需要用到chroot，所以openssh 版本不能低于4.8p1<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@rocky2 testftp]<span class="comment"># ssh -V</span></span><br><span class="line">OpenSSH_8.0p1, OpenSSL 1.1.1k  FIPS 25 Mar 2021</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">###第一步：创建用户分组sftp</span></span><br><span class="line">groupadd sftp</span><br><span class="line"></span><br><span class="line"><span class="comment">### 第二步：添加用户testftp至分组sftp</span></span><br><span class="line">useradd -g sftp -s /sbin/nologin zjsftp</span><br><span class="line"></span><br><span class="line"><span class="comment">### 第三步：修改zjsftp用户的密码</span></span><br><span class="line">passwd zjsftp</span><br><span class="line">zhangjian@123456</span><br><span class="line"></span><br><span class="line"><span class="comment">### 第四步：创建一个目录，来专门存放sftp相关文件</span></span><br><span class="line"><span class="built_in">mkdir</span> /sftp</span><br><span class="line"></span><br><span class="line"><span class="comment">### 第五步：在第四步创建的目录下，再创建一个与用户名同名的文件夹</span></span><br><span class="line">[root@rocky2 ~]<span class="comment"># cd /sftp</span></span><br><span class="line">[root@rocky2 sftp]<span class="comment"># mkdir testftp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 第六步：修改sshd_config的配置文件</span></span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">Subsystem       sftp    /usr/libexec/openssh/sftp-server</span><br><span class="line"></span><br><span class="line"><span class="comment">#在配置文件最后添加</span></span><br><span class="line">Match Group sftp</span><br><span class="line">ChrootDirectory /sftp/%u</span><br><span class="line">ForceCommand internal-sftp</span><br><span class="line">AllowTcpForwarding no</span><br><span class="line">X11Forwarding no</span><br><span class="line"></span><br><span class="line"><span class="comment">### 第七步：设定Chroot目录权限</span></span><br><span class="line"><span class="built_in">chown</span> root:sftp /sftp</span><br><span class="line"><span class="built_in">chown</span> root:sftp /sftp/testftp</span><br><span class="line"><span class="built_in">chmod</span> 755 /sftp</span><br><span class="line"><span class="built_in">chmod</span> 755 /sftp/testftp</span><br><span class="line"></span><br><span class="line"><span class="comment">### 第八步：在/sftp/testftp目录下，创建一个文件夹files,并设置该文件夹的拥有者为对应的用户，并设置该文件夹的拥有者有7的权限。这样该用户可以在files目录下进行任何操作(上传、下载、删除、创建等操作)</span></span><br><span class="line">[root@rocky2 sftp]<span class="comment"># cd testftp</span></span><br><span class="line">[root@rocky2 testftp]<span class="comment"># ll</span></span><br><span class="line">总用量 0</span><br><span class="line">[root@rocky2 testftp]<span class="comment"># mkdir files</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置权限</span></span><br><span class="line"><span class="built_in">chown</span> zjsftp /sftp/zjsftp/files</span><br><span class="line"><span class="built_in">chmod</span> 755 /sftp/zjsftp/files</span><br><span class="line"></span><br><span class="line"><span class="comment">### 第九步：重启sshd配置</span></span><br><span class="line">systemctl restart sshd</span><br><span class="line"></span><br><span class="line"><span class="comment">### 第十步：连接SFTP，验证一下</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>SFTP</tag>
      </tags>
  </entry>
  <entry>
    <title>无网设置multipath多路径</title>
    <url>/2023/12/16/%E6%97%A0%E7%BD%91%E8%AE%BE%E7%BD%AEmultipath%E5%B0%8F%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h1 id="无网设置multipath小知识"><a href="#无网设置multipath小知识" class="headerlink" title="无网设置multipath小知识"></a>无网设置multipath小知识</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看一下镜像有没有连接，这里是sr0</span></span><br><span class="line">lsblk -l</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> /mnt/redhat</span><br><span class="line">mount -t iso9660 /dev/sr0 /mnt/redhat</span><br><span class="line"></span><br><span class="line">vim /etc/yum.repos.d/local.repo</span><br><span class="line">[<span class="built_in">local</span>]</span><br><span class="line">name=Local Repository </span><br><span class="line">baseurl=file:///mnt/redhat</span><br><span class="line">enabled=1 </span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install device-mapper-multipath -y</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>监控Mysql脚本</title>
    <url>/2024/01/15/%E7%9B%91%E6%8E%A7mysql%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h1 id="监控Mysql脚本"><a href="#监控Mysql脚本" class="headerlink" title="监控Mysql脚本"></a>监控Mysql脚本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义MySQL用户名、密码和主机</span></span><br><span class="line">MYSQL_USER=<span class="string">&quot;root&quot;</span></span><br><span class="line">MYSQL_PASSWORD=<span class="string">&quot;123456&quot;</span></span><br><span class="line">MYSQL_HOST=<span class="string">&quot;localhost&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测MySQL服务是否运行</span></span><br><span class="line"><span class="keyword">if</span> ! pgrep mysqld &gt;/dev/null 2&gt;&amp;1 ; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 如果MySQL服务未运行，则尝试启动服务</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;MySQL is not running, attempting to start...&quot;</span></span><br><span class="line">    systemctl start mysqld</span><br><span class="line">    <span class="built_in">sleep</span> 5</span><br><span class="line">    <span class="comment"># 再次检查MySQL服务是否已经运行</span></span><br><span class="line">    <span class="keyword">if</span> ! pgrep mysqld &gt;/dev/null 2&gt;&amp;1 ; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Failed to start MySQL.&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;MySQL started successfully.&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查能否连接到MySQL服务器</span></span><br><span class="line"><span class="keyword">if</span> ! mysqladmin ping -h <span class="string">&quot;<span class="variable">$MYSQL_HOST</span>&quot;</span> -u <span class="string">&quot;<span class="variable">$MYSQL_USER</span>&quot;</span> -p<span class="string">&quot;<span class="variable">$MYSQL_PASSWORD</span>&quot;</span> &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Could not connect to MySQL server. Attempting to restart MySQL.&quot;</span></span><br><span class="line">    /etc/init.d/mysql restart</span><br><span class="line">    <span class="built_in">sleep</span> 5</span><br><span class="line">    <span class="keyword">if</span> ! mysqladmin ping -h <span class="string">&quot;<span class="variable">$MYSQL_HOST</span>&quot;</span> -u <span class="string">&quot;<span class="variable">$MYSQL_USER</span>&quot;</span> -p<span class="string">&quot;<span class="variable">$MYSQL_PASSWORD</span>&quot;</span> &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Failed to restart MySQL.&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;MySQL restarted successfully.&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;MySQL is running.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>监控</tag>
        <tag>Mysql</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>系统健康检查脚本（基础版）</title>
    <url>/2024/05/04/%E7%B3%BB%E7%BB%9F%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5%E8%84%9A%E6%9C%AC%EF%BC%88%E5%9F%BA%E7%A1%80%E7%89%88%EF%BC%89/</url>
    <content><![CDATA[<h2 id="系统健康检查脚本"><a href="#系统健康检查脚本" class="headerlink" title="系统健康检查脚本"></a>系统健康检查脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">##---------- 目的 : 快速检查并报告 Linux 系统的健康状态。----------##</span></span><br><span class="line"><span class="comment">##---------- 测试环境 : RHEL8/7/6/, SLES/SLED 15/12/11, Ubuntu20/18/16, CentOS-----------## </span></span><br><span class="line"><span class="comment">##---------- Boss6(Debian) 及其变体。它可能也适用于其他变体，但未经测试。 -----##</span></span><br><span class="line"><span class="comment">##-----注意: 此脚本需要 root 权限，否则可以使用 sudo 运行脚本 -------##</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 mpstat 命令是否存在，如果不存在则安装 sysstat 软件包</span></span><br><span class="line"><span class="built_in">command</span> -v mpstat &gt;/dev/null 2&gt;&amp;1 || &#123; </span><br><span class="line">  <span class="built_in">echo</span> &gt;&amp;2 <span class="string">&quot;mpstat 命令未找到，正在尝试安装 sysstat 软件包...&quot;</span>; </span><br><span class="line"></span><br><span class="line">  <span class="comment"># 判断发行版并使用相应的包管理器安装</span></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">command</span> -v apt-get &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">    sudo apt-get update &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">    sudo apt-get install -y sysstat &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">  <span class="keyword">elif</span> <span class="built_in">command</span> -v yum &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">    sudo yum install -y sysstat &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">  <span class="keyword">elif</span> <span class="built_in">command</span> -v dnf &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">    sudo dnf install -y sysstat &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> &gt;&amp;2 <span class="string">&quot;不支持的软件包管理器，请手动安装 sysstat 软件包.&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">echo</span> &gt;&amp;2 <span class="string">&quot;sysstat 软件包安装完成.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#------使用的变量------#</span></span><br><span class="line">S=<span class="string">&quot;************************************&quot;</span></span><br><span class="line">D=<span class="string">&quot;-------------------------------------&quot;</span></span><br><span class="line">COLOR=<span class="string">&quot;y&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取挂载点信息，过滤出ext4、ext3、xfs等文件系统，并排序</span></span><br><span class="line">MOUNT=$(mount|egrep -iw <span class="string">&quot;ext4|ext3|xfs|gfs|gfs2|btrfs&quot;</span>|grep -v <span class="string">&quot;loop&quot;</span>|<span class="built_in">sort</span> -u -t<span class="string">&#x27; &#x27;</span> -k1,2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件系统使用情况，过滤掉tmpfs等临时文件系统，并排序</span></span><br><span class="line">FS_USAGE=$(<span class="built_in">df</span> -PThl -x tmpfs -x iso9660 -x devtmpfs -x squashfs|awk <span class="string">&#x27;!seen[$1]++&#x27;</span>|<span class="built_in">sort</span> -k6n|<span class="built_in">tail</span> -n +2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取inode使用情况，过滤掉tmpfs等临时文件系统，并排序</span></span><br><span class="line">IUSAGE=$(<span class="built_in">df</span> -iPThl -x tmpfs -x iso9660 -x devtmpfs -x squashfs|awk <span class="string">&#x27;!seen[$1]++&#x27;</span>|<span class="built_in">sort</span> -k6n|<span class="built_in">tail</span> -n +2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置颜色变量</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$COLOR</span> == y ]; <span class="keyword">then</span></span><br><span class="line">&#123;</span><br><span class="line"> GCOLOR=<span class="string">&quot;\e[47;32m ------ OK/健康 \e[0m&quot;</span> <span class="comment"># 绿色</span></span><br><span class="line"> WCOLOR=<span class="string">&quot;\e[43;31m ------ 警告 \e[0m&quot;</span> <span class="comment"># 黄色</span></span><br><span class="line"> CCOLOR=<span class="string">&quot;\e[47;31m ------ 严重 \e[0m&quot;</span> <span class="comment"># 红色</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"> GCOLOR=<span class="string">&quot; ------ OK/健康 &quot;</span></span><br><span class="line"> WCOLOR=<span class="string">&quot; ------ 警告 &quot;</span></span><br><span class="line"> CCOLOR=<span class="string">&quot; ------ 严重 &quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$S</span>&quot;</span> <span class="comment"># 打印分隔符</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\t系统健康状态&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$S</span>&quot;</span> <span class="comment"># 打印分隔符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------打印操作系统详细信息--------#</span></span><br><span class="line"><span class="comment"># 获取主机名</span></span><br><span class="line">hostname -f &amp;&gt; /dev/null &amp;&amp; <span class="built_in">printf</span> <span class="string">&quot;主机名 : <span class="subst">$(hostname -f)</span>&quot;</span> || <span class="built_in">printf</span> <span class="string">&quot;主机名 : <span class="subst">$(hostname -s)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取操作系统版本信息</span></span><br><span class="line"><span class="built_in">echo</span> -en <span class="string">&quot;\n操作系统 : &quot;</span></span><br><span class="line">[ -f /etc/os-release ] &amp;&amp; <span class="built_in">echo</span> $(egrep -w <span class="string">&quot;NAME|VERSION&quot;</span> /etc/os-release|awk -F= <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span>|sed <span class="string">&#x27;s/&quot;//g&#x27;</span>) || <span class="built_in">cat</span> /etc/system-release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取内核版本</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;内核版本 :&quot;</span> $(<span class="built_in">uname</span> -r)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取操作系统架构</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;系统架构 :&quot;</span>$(<span class="built_in">arch</span> | grep x86_64 &amp;&gt; /dev/null) &amp;&amp; <span class="built_in">printf</span> <span class="string">&quot; 64 位操作系统\n&quot;</span>  || <span class="built_in">printf</span> <span class="string">&quot; 32 位操作系统\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------打印系统运行时间-------#</span></span><br><span class="line">UPTIME=$(<span class="built_in">uptime</span>) <span class="comment"># 获取系统运行时间</span></span><br><span class="line"><span class="built_in">echo</span> -en <span class="string">&quot;系统运行时间 : &quot;</span></span><br><span class="line"><span class="comment"># 判断运行时间是否超过一天</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$UPTIME</span>|grep day &amp;&gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? != 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="comment"># 未超过一天，则判断是否超过一小时</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$UPTIME</span>|grep -w min &amp;&gt; /dev/null &amp;&amp; <span class="built_in">echo</span> -en <span class="string">&quot;<span class="subst">$(echo $UPTIME|awk &#x27;&#123;print $2<span class="string">&quot; by &quot;</span>$3&#125;&#x27;|sed -e &#x27;s/,.*//g&#x27;)</span> 分钟&quot;</span> \</span><br><span class="line"> || <span class="built_in">echo</span> -en <span class="string">&quot;<span class="subst">$(echo $UPTIME|awk &#x27;&#123;print $2<span class="string">&quot; by &quot;</span>$3<span class="string">&quot; &quot;</span>$4&#125;&#x27;|sed -e &#x27;s/,.*//g&#x27;)</span> 小时&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="comment"># 超过一天，则打印天数和小时数</span></span><br><span class="line">  <span class="built_in">echo</span> -en $(<span class="built_in">echo</span> <span class="variable">$UPTIME</span>|awk <span class="string">&#x27;&#123;print $2&quot; by &quot;$3&quot; &quot;$4&quot; &quot;$5&quot; 小时&quot;&#125;&#x27;</span>|sed -e <span class="string">&#x27;s/,//g&#x27;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印当前系统日期和时间</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n当前系统日期 &amp; 时间 : &quot;</span>$(<span class="built_in">date</span> +%c)</span><br><span class="line"></span><br><span class="line"><span class="comment">#--------检查是否有只读文件系统--------#</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n正在检查只读文件系统&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="comment"># 检查是否有挂载为只读模式的文件系统</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$MOUNT</span>&quot;</span>|grep -w ro &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot;\n.....找到只读文件系统&quot;</span>|| <span class="built_in">echo</span> -e <span class="string">&quot;.....未找到只读文件系统。 &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------检查当前挂载的文件系统--------#</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n\n正在检查当前挂载的文件系统&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;$D<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="comment"># 打印所有挂载的文件系统</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$MOUNT</span>&quot;</span>|column -t</span><br><span class="line"></span><br><span class="line"><span class="comment">#--------检查所有挂载文件系统的磁盘使用情况--------#</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n\n正在检查挂载文件系统的磁盘使用情况&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;$D<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;( 0-85% = OK/健康,  85-95% = 警告,  95-100% = 严重 )&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;$D<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;挂载文件系统使用率 (已用百分比):\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件系统名称和使用率</span></span><br><span class="line">COL1=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FS_USAGE</span>&quot;</span>|awk <span class="string">&#x27;&#123;print $1 &quot; &quot;$7&#125;&#x27;</span>)</span><br><span class="line">COL2=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FS_USAGE</span>&quot;</span>|awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span>|sed -e <span class="string">&#x27;s/%//g&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据使用率设置颜色</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$COL2</span>&quot;</span>); <span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$i</span> -ge 95 ]; <span class="keyword">then</span></span><br><span class="line">    COL3=<span class="string">&quot;<span class="subst">$(echo -e $i<span class="string">&quot;% <span class="variable">$CCOLOR</span>\n<span class="variable">$COL3</span>&quot;</span>)</span>&quot;</span> <span class="comment"># 使用率大于等于95%，设置为红色</span></span><br><span class="line">  <span class="keyword">elif</span> [[ <span class="variable">$i</span> -ge 85 &amp;&amp; <span class="variable">$i</span> -lt 95 ]]; <span class="keyword">then</span></span><br><span class="line">    COL3=<span class="string">&quot;<span class="subst">$(echo -e $i<span class="string">&quot;% <span class="variable">$WCOLOR</span>\n<span class="variable">$COL3</span>&quot;</span>)</span>&quot;</span> <span class="comment"># 使用率大于等于85%小于95%，设置为黄色</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    COL3=<span class="string">&quot;<span class="subst">$(echo -e $i<span class="string">&quot;% <span class="variable">$GCOLOR</span>\n<span class="variable">$COL3</span>&quot;</span>)</span>&quot;</span> <span class="comment"># 使用率小于85%，设置为绿色</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序并打印结果</span></span><br><span class="line">COL3=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$COL3</span>&quot;</span>|<span class="built_in">sort</span> -k1n)</span><br><span class="line"><span class="built_in">paste</span>  &lt;(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$COL1</span>&quot;</span>) &lt;(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$COL3</span>&quot;</span>) -d<span class="string">&#x27; &#x27;</span>|column -t</span><br><span class="line"></span><br><span class="line"><span class="comment">#--------检查是否有僵尸进程--------#</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n\n正在检查僵尸进程&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="comment"># 查找状态为Z的进程</span></span><br><span class="line">ps -eo <span class="built_in">stat</span>|grep -w Z 1&gt;&amp;2 &gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? == 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="comment"># 如果找到僵尸进程，则打印数量和详细信息</span></span><br><span class="line">  <span class="built_in">echo</span> -e <span class="string">&quot;系统上的僵尸进程数量为 :&quot;</span> $(ps -eo <span class="built_in">stat</span>|grep -w Z|<span class="built_in">wc</span> -l)</span><br><span class="line">  <span class="built_in">echo</span> -e <span class="string">&quot;\n  找到的每个僵尸进程的详细信息   &quot;</span></span><br><span class="line">  <span class="built_in">echo</span> -e <span class="string">&quot;  <span class="variable">$D</span>&quot;</span></span><br><span class="line">  ZPROC=$(ps -eo <span class="built_in">stat</span>,pid|grep -w Z|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ZPROC</span>&quot;</span>); <span class="keyword">do</span></span><br><span class="line">      ps -o pid,ppid,user,<span class="built_in">stat</span>,args -p <span class="variable">$i</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="comment"># 否则打印未找到僵尸进程</span></span><br><span class="line"> <span class="built_in">echo</span> -e <span class="string">&quot;系统上未找到僵尸进程。&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------检查inode使用情况--------#</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n\n正在检查 INode 使用情况&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;$D<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;( 0-85% = OK/健康,  85-95% = 警告,  95-100% = 严重 )&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;$D<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;INode 使用率 (已用百分比):\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件系统名称和inode使用率</span></span><br><span class="line">COL11=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$IUSAGE</span>&quot;</span>|awk <span class="string">&#x27;&#123;print $1&quot; &quot;$7&#125;&#x27;</span>)</span><br><span class="line">COL22=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$IUSAGE</span>&quot;</span>|awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span>|sed -e <span class="string">&#x27;s/%//g&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据inode使用率设置颜色</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$COL22</span>&quot;</span>); <span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> [[ <span class="variable">$i</span> = *[[:digit:]]* ]]; <span class="keyword">then</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$i</span> -ge 95 ]; <span class="keyword">then</span></span><br><span class="line">    COL33=<span class="string">&quot;<span class="subst">$(echo -e $i<span class="string">&quot;% <span class="variable">$CCOLOR</span>\n<span class="variable">$COL33</span>&quot;</span>)</span>&quot;</span> <span class="comment"># 使用率大于等于95%，设置为红色</span></span><br><span class="line">  <span class="keyword">elif</span> [[ <span class="variable">$i</span> -ge 85 &amp;&amp; <span class="variable">$i</span> -lt 95 ]]; <span class="keyword">then</span></span><br><span class="line">    COL33=<span class="string">&quot;<span class="subst">$(echo -e $i<span class="string">&quot;% <span class="variable">$WCOLOR</span>\n<span class="variable">$COL33</span>&quot;</span>)</span>&quot;</span> <span class="comment"># 使用率大于等于85%小于95%，设置为黄色</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    COL33=<span class="string">&quot;<span class="subst">$(echo -e $i<span class="string">&quot;% <span class="variable">$GCOLOR</span>\n<span class="variable">$COL33</span>&quot;</span>)</span>&quot;</span> <span class="comment"># 使用率小于85%，设置为绿色</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    COL33=<span class="string">&quot;<span class="subst">$(echo -e $i<span class="string">&quot;% (Inode 百分比详细信息不可用)\n<span class="variable">$COL33</span>&quot;</span>)</span>&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序并打印结果</span></span><br><span class="line">COL33=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$COL33</span>&quot;</span>|<span class="built_in">sort</span> -k1n)</span><br><span class="line"><span class="built_in">paste</span>  &lt;(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$COL11</span>&quot;</span>) &lt;(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$COL33</span>&quot;</span>) -d<span class="string">&#x27; &#x27;</span>|column -t</span><br><span class="line"></span><br><span class="line"><span class="comment">#--------检查SWAP使用情况--------#</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n\n正在检查 SWAP 详细信息&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="comment"># 打印总SWAP内存大小</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;总 SWAP 内存 (MiB) : &quot;</span>$(grep -w SwapTotal /proc/meminfo|awk <span class="string">&#x27;&#123;print $2/1024&#125;&#x27;</span>)<span class="string">&quot;, (GiB) : &quot;</span>\</span><br><span class="line">$(grep -w SwapTotal /proc/meminfo|awk <span class="string">&#x27;&#123;print $2/1024/1024&#125;&#x27;</span>)</span><br><span class="line"><span class="comment"># 打印空闲SWAP内存大小</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;空闲 SWAP 内存 (MiB) : &quot;</span>$(grep -w SwapFree /proc/meminfo|awk <span class="string">&#x27;&#123;print $2/1024&#125;&#x27;</span>)<span class="string">&quot;, (GiB) : &quot;</span>\</span><br><span class="line">$(grep -w SwapFree /proc/meminfo|awk <span class="string">&#x27;&#123;print $2/1024/1024&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#--------检查处理器使用情况 (当前数据)--------#</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n\n正在检查处理器使用情况&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n当前处理器使用情况汇总 :\n&quot;</span></span><br><span class="line"><span class="comment"># 打印处理器使用情况</span></span><br><span class="line">mpstat|<span class="built_in">tail</span> -2</span><br><span class="line"></span><br><span class="line"><span class="comment">#--------检查负载均衡 (当前数据)--------#</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n\n正在检查负载均衡&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="comment"># 打印负载均衡情况</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;当前负载均衡 : <span class="subst">$(uptime|grep -o <span class="string">&quot;load average.*&quot;</span>|awk &#x27;&#123;print $3<span class="string">&quot; &quot;</span> $4<span class="string">&quot; &quot;</span> $5&#125;&#x27;)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#------打印最近3次重启事件 (如果可用)----#</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n\n最近 3 次重启事件&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;$D<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="comment"># 打印最近3次重启事件</span></span><br><span class="line">last -x 2&gt; /dev/null|grep reboot 1&gt; /dev/null &amp;&amp; /usr/bin/last -x 2&gt; /dev/null|grep reboot|<span class="built_in">head</span> -3 || \</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;没有记录重启事件。&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#------打印最近3次关机事件 (如果可用)-----#</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n\n最近 3 次关机事件&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;$D<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="comment"># 打印最近3次关机事件</span></span><br><span class="line">last -x 2&gt; /dev/null|grep shutdown 1&gt; /dev/null &amp;&amp; /usr/bin/last -x 2&gt; /dev/null|grep shutdown|<span class="built_in">head</span> -3 || \</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;没有记录关机事件。&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------打印占用内存和CPU资源最多的5个进程线程---------#</span></span><br><span class="line"><span class="comment">#--------排除当前运行的程序hwlist----------#</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n\n占用内存资源最多的 5 个进程&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;$D<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="comment"># 打印占用内存资源最多的5个进程</span></span><br><span class="line">ps -eo pmem,pid,ppid,user,<span class="built_in">stat</span>,args --<span class="built_in">sort</span>=-pmem|grep -v $$|<span class="built_in">head</span> -6|sed <span class="string">&#x27;s/$/\n/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n占用 CPU 资源最多的 5 个进程&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;$D<span class="variable">$D</span>&quot;</span></span><br><span class="line"><span class="comment"># 打印占用CPU资源最多的5个进程</span></span><br><span class="line">ps -eo pcpu,pid,ppid,user,<span class="built_in">stat</span>,args --<span class="built_in">sort</span>=-pcpu|grep -v $$|<span class="built_in">head</span> -6|sed <span class="string">&#x27;s/$/\n/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印提示信息</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;注意:- 如果以上任何字段标记为 \&quot;blank\&quot; 或 \&quot;NONE\&quot; 或 \&quot;UNKNOWN\&quot; 或 \&quot;Not Available\&quot; 或 \&quot;Not Specified\&quot;</span></span><br><span class="line"><span class="string">这意味着系统中没有这些字段的值，或者该值可能不可用，</span></span><br><span class="line"><span class="string">或者由于获取详细信息时出错而被抑制。&quot;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>部分效果截图<br><img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/PixPin_2024-05-28_16-16-51.png"></li>
</ul>
]]></content>
      <categories>
        <category>Shell脚本</category>
      </categories>
      <tags>
        <tag>Shell脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>编译Zabbix6.0.5</title>
    <url>/2024/01/20/%E7%BC%96%E8%AF%91zabbix6.0.5/</url>
    <content><![CDATA[<h1 id="编译Zabbix6-0-5"><a href="#编译Zabbix6-0-5" class="headerlink" title="编译Zabbix6.0.5"></a>编译Zabbix6.0.5</h1><h3 id="pgsql数据库配置"><a href="#pgsql数据库配置" class="headerlink" title="pgsql数据库配置"></a>pgsql数据库配置</h3><p>环境为Nginx1.24+PHP7.4+PGSQL13.7+Zabbix6.0.5</p>
<ul>
<li>1.安装编译工具和依赖项，有跳过这步骤</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf install -y gcc make wget openssl-devel libevent-devel libxml2-devel libcurl-devel libevent-devel pcre-devel libuuid-devel libtool-ltdl-devel postgresql-devel</span><br><span class="line"></span><br><span class="line">dnf install php-bcmath -y</span><br><span class="line">dnf install php-sockets -y</span><br></pre></td></tr></table></figure>

<ul>
<li>2.下载和解压 Zabbix 源代码</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://cdn.zabbix.com/zabbix/sources/stable/6.0/zabbix-6.0.5.tar.gz</span><br><span class="line">tar -zxvf zabbix-6.0.5.tar.gz &amp;&amp; <span class="built_in">cd</span> zabbix-6.0.5</span><br></pre></td></tr></table></figure>

<ul>
<li>3.登录到postgres，创建Zabbix数据库</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE zabbix;</span><br><span class="line">CREATE USER zabbix;</span><br><span class="line">ALTER USER zabbix WITH ENCRYPTED PASSWORD <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON DATABASE zabbix TO zabbix;</span><br></pre></td></tr></table></figure>

<ul>
<li>4.给Zabbix配置时序数据库timescaledb</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">postgres=<span class="comment"># \c zabbix</span></span><br><span class="line">You are now connected to database <span class="string">&quot;zabbix&quot;</span> as user <span class="string">&quot;postgres&quot;</span>.</span><br><span class="line">zabbix=<span class="comment"># CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;</span></span><br><span class="line">WARNING:</span><br><span class="line">WELCOME TO</span><br><span class="line"> _____ _                               _     ____________</span><br><span class="line">|_   _(_)                             | |    |  _  \ ___ \</span><br><span class="line">  | |  _ _ __ ___   ___  ___  ___ __ _| | ___| | | | |_/ /</span><br><span class="line">  | | | |  _ ` _ \ / _ \/ __|/ __/ _` | |/ _ \ | | | ___ \</span><br><span class="line">  | | | | | | | | |  __/\__ \ (_| (_| | |  __/ |/ /| |_/ /</span><br><span class="line">  |_| |_|_| |_| |_|\___||___/\___\__,_|_|\___|___/ \____/</span><br><span class="line">               Running version 2.11.1</span><br><span class="line">For more information on TimescaleDB, please visit the following links:</span><br><span class="line"></span><br><span class="line"> 1. Getting started: https://docs.timescale.com/timescaledb/latest/getting-started</span><br><span class="line"> 2. API reference documentation: https://docs.timescale.com/api/latest</span><br><span class="line"> 3. How TimescaleDB is designed: https://docs.timescale.com/timescaledb/latest/overview/core-concepts</span><br><span class="line"></span><br><span class="line">Note: TimescaleDB collects anonymous reports to better understand and assist our <span class="built_in">users</span>.</span><br><span class="line">For more information and how to <span class="built_in">disable</span>, please see our docs https://docs.timescale.com/timescaledb/latest/how-to-guides/configuration/telemetry.</span><br><span class="line"></span><br><span class="line">CREATE EXTENSION</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看插件</span></span><br><span class="line">zabbix=<span class="comment"># \dx</span></span><br><span class="line">                                                List of installed extensions</span><br><span class="line">    Name     | Version |   Schema   |                                      Description</span><br><span class="line">-------------+---------+------------+---------------------------------------------------------------------------------------</span><br><span class="line"> plpgsql     | 1.0     | pg_catalog | PL/pgSQL procedural language</span><br><span class="line"> timescaledb | 2.11.1  | public     | Enables scalable inserts and complex queries <span class="keyword">for</span> time-series data (Community Edition)</span><br><span class="line">(2 rows)</span><br></pre></td></tr></table></figure>

<ul>
<li>5.还是postgres用户状态下，把源码包复制到家目录，导入 Zabbix 数据库模式和数据</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#表在源码包里面，依次导入三个表，不然可能会出错</span></span><br><span class="line"><span class="built_in">cd</span> database/postgresql</span><br><span class="line">psql -d zabbix -U zabbix -f schema.sql</span><br><span class="line">psql -d zabbix -U zabbix -f images.sql</span><br><span class="line">psql -d zabbix -U zabbix -f data.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#导入时序表，成功会出现下面信息</span></span><br><span class="line">bash-4.4$ psql -d zabbix -U zabbix -f timescaledb.sql</span><br><span class="line">psql:timescaledb.sql:69: NOTICE:  PostgreSQL version 13.7 is valid</span><br><span class="line">psql:timescaledb.sql:69: NOTICE:  TimescaleDB extension is detected</span><br><span class="line">psql:timescaledb.sql:69: NOTICE:  TimescaleDB version 2.11.1 is valid</span><br><span class="line">psql:timescaledb.sql:69: WARNING:  column <span class="built_in">type</span> <span class="string">&quot;character varying&quot;</span> used <span class="keyword">for</span> <span class="string">&quot;source&quot;</span> does not follow best practices</span><br><span class="line">HINT:  Use datatype TEXT instead.</span><br><span class="line">psql:timescaledb.sql:69: WARNING:  column <span class="built_in">type</span> <span class="string">&quot;character varying&quot;</span> used <span class="keyword">for</span> <span class="string">&quot;value&quot;</span> does not follow best practices</span><br><span class="line">HINT:  Use datatype TEXT instead.</span><br><span class="line">psql:timescaledb.sql:69: NOTICE:  TimescaleDB is configured successfully</span><br><span class="line">DO</span><br></pre></td></tr></table></figure>

<h3 id="Zabbix安装与配置"><a href="#Zabbix安装与配置" class="headerlink" title="Zabbix安装与配置"></a>Zabbix安装与配置</h3><ul>
<li>安装依赖</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf --enablerepo=powertools install OpenIPMI-devel -y </span><br><span class="line">dnf install make wget chrony gcc curl-devel net-snmp-devel libxml2-devel.i686 libevent-devel pcre-devel -y</span><br></pre></td></tr></table></figure>

<ul>
<li>创建zabbix用户</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd -s /sbin/nologin -M zabbix</span><br></pre></td></tr></table></figure>

<ul>
<li>.配置编译参数并编译安装，在刚刚解压好的源码包中执行</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure -prefix=/usr/local/zabbix --enable-server --enable-agent --with-postgresql --with-openssl --with-libxml2 --with-libcurl --with-uuid --with-libevent</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R zabbix.zabbix /usr/local/zabbix</span><br></pre></td></tr></table></figure>

<ul>
<li>配置Zabbix-server数据库连接</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@rocky1 zabbix]<span class="comment"># cd /usr/local/zabbix/etc/</span></span><br><span class="line">[root@rocky1 etc]<span class="comment"># vim zabbix_server.conf</span></span><br><span class="line">DBPassword=123456</span><br><span class="line">DBPort=5432</span><br><span class="line">DBHost=192.168.80.10</span><br><span class="line">LogFile=/var/log/zabbix_server.log  <span class="comment">#指定日志位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#去创建一下这个</span></span><br><span class="line"><span class="built_in">touch</span> /var/log/zabbix_server.log  </span><br><span class="line"><span class="built_in">chown</span> zabbix.zabbix /var/log/zabbix_server.log</span><br></pre></td></tr></table></figure>

<ul>
<li>创建Zabbix Server的systemctl 服务管理文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/zabbix-server.service</span><br><span class="line">[Unit]  </span><br><span class="line">Description=Zabbix Server with PostgreSQL DB  </span><br><span class="line">After=syslog.target network.target postgresql-13.service</span><br><span class="line"></span><br><span class="line">[Service]  </span><br><span class="line">Type=simple  </span><br><span class="line">ExecStart=/usr/local/zabbix/sbin/zabbix_server -f  </span><br><span class="line">User=zabbix</span><br><span class="line"></span><br><span class="line">[Install]  </span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<ul>
<li>创建Zabbix Agent启动脚本</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /lib/systemd/system/zabbix-agent.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Zabbix Agent</span><br><span class="line">After=syslog.target</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Environment=<span class="string">&quot;CONFFILE=/usr/local/zabbix/etc/zabbix_agentd.conf&quot;</span> EnvironmentFile=-/etc/sysconfig/zabbix-agent</span><br><span class="line">Type=forking</span><br><span class="line">Restart=on-failure</span><br><span class="line">PIDFile=/tmp/zabbix_agentd.pid</span><br><span class="line">KillMode=control-group</span><br><span class="line">ExecStart=/usr/local/zabbix/sbin/zabbix_agentd</span><br><span class="line">ExecStop=/bin/kill -SIGTERM <span class="variable">$MAINPID</span></span><br><span class="line">RestartSec=10s</span><br><span class="line">User=zabbix</span><br><span class="line">Group=zabbix</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<ul>
<li>使用以下命令启动Zabbix Server及Zabbix Agent</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --now zabbix-server</span><br><span class="line">systemctl <span class="built_in">enable</span> --now zabbix-agent</span><br></pre></td></tr></table></figure>

<h3 id="修改-nginx-配置"><a href="#修改-nginx-配置" class="headerlink" title="修改 nginx 配置"></a>修改 nginx 配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#要注意一下，主配置有没有包含到子配置文件，忘了包含踩坑了</span></span><br><span class="line">vim /apps/nginx/conf.d/zabbix.conf</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name test.zabbix.com;</span><br><span class="line">  location / &#123;</span><br><span class="line">    root /var/www/zabbix;</span><br><span class="line">    index index.php;</span><br><span class="line">  &#125;</span><br><span class="line">  location ~ \.php$ &#123;</span><br><span class="line">    fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">    fastcgi_index index.php;</span><br><span class="line">    fastcgi_param SCRIPT_FILENAME /var/www/zabbix<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">    include fastcgi_params;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="修改-php-配置"><a href="#修改-php-配置" class="headerlink" title="修改 php 配置"></a>修改 php 配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /apps/php/etc/php-fpm.d/www.conf</span><br><span class="line">user = nginx</span><br><span class="line">group = nginx</span><br><span class="line"></span><br><span class="line">vim /apps/php/lib/php.ini</span><br><span class="line">memory_limit = 128M</span><br><span class="line">post_max_size = 16M</span><br><span class="line">upload_max_filesize = 2M</span><br><span class="line">max_execution_time = 300</span><br><span class="line">max_input_time = 300</span><br><span class="line">session.auto_start = 0</span><br><span class="line">mbstring.func_overload = 0</span><br><span class="line">date.timezone = Asia/Shanghai</span><br></pre></td></tr></table></figure>

<h3 id="创建目录和测试文件"><a href="#创建目录和测试文件" class="headerlink" title="创建目录和测试文件"></a>创建目录和测试文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /var/www/zabbix</span><br><span class="line"><span class="built_in">chown</span> -R nginx.nginx /var/www/zabbix</span><br><span class="line">vim /var/www/zabbix/index.php</span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now nginx php-fpm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#浏览器访问这个，电脑hosts修改一下,有时候得多等一下或者强制重启nginx，不然好像访问不通</span></span><br><span class="line">http://test.zabbix.com/index.php</span><br></pre></td></tr></table></figure>

<h3 id="最终web相关配置"><a href="#最终web相关配置" class="headerlink" title="最终web相关配置"></a>最终web相关配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#把源码包里ui目录下所有文件复制到指定的文件夹里</span></span><br><span class="line">[root@rocky1 www]<span class="comment"># cp -r -a /root/zabbix-6.0.5/ui/* /var/www/zabbix</span></span><br></pre></td></tr></table></figure>

<h4 id="小坑"><a href="#小坑" class="headerlink" title="小坑"></a>小坑</h4><p>重启后不知道为啥，Zabbix显示未设置数据库类型<br>排查以后发现，zabbix.conf.php文件变成了空白的，从源码里复制一份模板进去根据自己需求修改</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /apps/packages/zabbix-6.0.5/ui/conf/zabbix.conf.php.example /var/www/zabbix/conf/zabbix.conf.php</span><br><span class="line"></span><br><span class="line">vim /var/www/zabbix/conf/zabbix.conf.php</span><br><span class="line"></span><br><span class="line">systemctl restart zabbix-server</span><br></pre></td></tr></table></figure>

<ul>
<li>安装中文语言包、检查PHP模块，主要注意一定不能在php.ini中禁用proc_open函数，否则会导致pdo_pgsql()函数不可用</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum reinstall glibc-common -y</span><br><span class="line">yum install langpacks-zh_CN.noarch -y</span><br><span class="line"></span><br><span class="line">[root@rocky1 ~]<span class="comment"># cd /apps/packages/zabbix-6.0.5/ui/</span></span><br><span class="line">[root@rocky1 ui]<span class="comment"># locale -a</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-130165.oss-cn-shanghai.aliyuncs.com/img/zabbix.png"></p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>编译安装PHP7.4</title>
    <url>/2024/01/16/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85php7.4/</url>
    <content><![CDATA[<h1 id="编译安装PHP7-4"><a href="#编译安装PHP7-4" class="headerlink" title="编译安装PHP7.4"></a>编译安装PHP7.4</h1><h2 id="依赖环境准备"><a href="#依赖环境准备" class="headerlink" title="依赖环境准备"></a>依赖环境准备</h2><ul>
<li>下载安装编译工具</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum groupinstall <span class="string">&#x27;Development Tools&#x27;</span> -y</span><br></pre></td></tr></table></figure>

<ul>
<li>安装依赖包，否则可能会报错</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update -y</span><br><span class="line">yum install zlib-devel -y</span><br><span class="line">yum install libxml2-devel -y</span><br><span class="line">yum install libcurl-devel -y</span><br><span class="line">yum install openssl-devel -y</span><br><span class="line">yum install libjpeg-devel -y</span><br><span class="line">yum install libpng-devel -y</span><br><span class="line">yum install freetype-devel -y</span><br><span class="line">yum install libpq-devel -y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">yum install bzip2-devel -y</span><br><span class="line">yum install sqlite-devel -y</span><br><span class="line">yum install libcurl-devel -y</span><br><span class="line">yum install libpng-devel -y</span><br><span class="line">yum install automake -y</span><br><span class="line">yum install autoconf -y</span><br><span class="line">yum install libtool -y</span><br><span class="line">yum install libicu-devel -y</span><br><span class="line">yum install gmp-devel -y</span><br><span class="line">yum install libzip-devel -y</span><br><span class="line">yum -y install postgresql-devel</span><br><span class="line"></span><br><span class="line"><span class="comment">#报错：configure: error: Cannot find ldap.h </span></span><br><span class="line">yum install openldap.i686 -y</span><br><span class="line">yum install openldap-devel.i686 -y</span><br><span class="line">yum install openldap-devel -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#遇到oniguruma的报错，要安装6.9以上版本的才行</span></span><br><span class="line">wget https://github.com/kkos/oniguruma/releases/download/v6.9.8/onig-6.9.8.tar.gz</span><br><span class="line">tar -xzvf oniguruma-6.9.4.tar.gz &amp;&amp; <span class="built_in">cd</span> oniguruma-6.9.4</span><br><span class="line">./autogen.sh &amp;&amp; ./configure --prefix=/usr</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">##较低版本的系统，libzip是低版本的，要安装高版本libzip</span></span><br><span class="line">yum install bzip2-devel</span><br><span class="line">wget https://libzip.org/download/libzip-1.7.3.tar.gz</span><br><span class="line">tar -xvzf libzip-1.7.3.tar.gz </span><br><span class="line"><span class="built_in">cd</span> libzip-1.7.3</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=/usr/libs</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=/usr/libs/lib64/pkgconfig:<span class="variable">$PKG_CONFIG_PATH</span></span><br></pre></td></tr></table></figure>

<h2 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h2><ul>
<li>下载php7.4源码与安装</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@rocky1 src]<span class="comment"># cd /usr/local/src &amp;&amp; wget https://www.php.net/distributions/php-7.4.30.tar.gz</span></span><br><span class="line">[root@rocky1 src]<span class="comment"># tar xzvf php-7.4.30.tar.gz &amp;&amp; cd php-7.4.30</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户</span></span><br><span class="line">useradd -r php -s /sbin/nologin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#在php-7.4.30目录下预编译</span></span><br><span class="line">./configure --prefix=/apps/php --with-fpm-user=php --with-fpm-group=php  --with-curl --enable-gd --enable-sockets --enable-bcmath --with-ldap --enable-gettext --enable-mbstring --with-openssl --with-zip --with-zlib  --enable-fpm --with pgsql=/apps/postgresql --with-pdo-pgsql=/apps/postgresql/bin/pg_config --with-gd --with-jpeg --with-freetype</span><br><span class="line"></span><br><span class="line"><span class="comment">#不指定路径</span></span><br><span class="line">./configure --with-fpm-user=php --with-fpm-group=php  --with-curl --enable-gd --enable-sockets --enable-bcmath --with-ldap --enable-gettext --enable-mbstring --with-openssl --with-zip --with-zlib  --enable-fpm --with-pgsql --with-pdo-pgsql --with-gd --with-jpeg --with-freetype --with-mysqli --with-pdo-mysql</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/libzip/lib64/pkgconfig ONIG_CFLAGS=<span class="string">&quot;-I/usr/include&quot;</span> ONIG_LIBS=<span class="string">&quot;-L/usr/lib -lonig&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#8.29版本的</span></span><br><span class="line">./configure --prefix=/apps/php --with-fpm-user=php --with-fpm-group=php --with-curl --with-gd --with-jpeg --with-freetype --enable-sockets --enable-bcmath --with-ldap --enable-gettext --enable-mbstring --with-openssl --with-zip --with-zlib --enable-fpm --with-pgsql=/apps/postgresql --with-pdo-pgsql=/apps/postgresql/bin/pg_config</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#编译</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R php.php /apps/php</span><br></pre></td></tr></table></figure>

<ul>
<li>复制PHP配置文件模板</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/local/src/php-7.4.30/php.ini-development /apps/php/lib/php.ini</span><br></pre></td></tr></table></figure>

<h3 id="添加全局变量"><a href="#添加全局变量" class="headerlink" title="添加全局变量"></a>添加全局变量</h3><ul>
<li>1.打开终端，并以root权限登录</li>
<li>2.编辑&#x2F;etc&#x2F;profile文件，可以使用文本编辑器（如vi或nano）进行编辑：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#最后一行添加</span></span><br><span class="line">[root@rocky1 src]<span class="comment"># vim /etc/profile</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/apps/php/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>3.重启配置生效</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<ul>
<li>4.确认PHP命令是否可以全局使用</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@rocky1 php]<span class="comment"># php -v</span></span><br><span class="line">PHP 7.4.30 (cli) (built: Aug 14 2023 09:37:56) ( NTS )</span><br><span class="line">Copyright (c) The PHP Group</span><br><span class="line">Zend Engine v3.4.0, Copyright (c) Zend Technologies</span><br></pre></td></tr></table></figure>

<h3 id="systemctl管理PHP"><a href="#systemctl管理PHP" class="headerlink" title="systemctl管理PHP"></a>systemctl管理PHP</h3><ul>
<li>创建一个名为php-fpm.service的服务单元文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@rocky1~]<span class="comment"># vim /etc/systemd/system/php-fpm.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=PHP-FPM FastCGI Process Manager</span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/apps/php/sbin/php-fpm --nodaemonize --fpm-config /apps/php/etc/php-fpm.conf</span><br><span class="line">ExecReload=/bin/kill -USR2 <span class="variable">$MAINPID</span></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">几个小坑：</span><br><span class="line">1./apps/php/etc/php-fpm.conf配置文件名字必须为conf结尾的，默认的是php-fpm.conf.default，需要手动修改</span><br><span class="line">2./apps/php/etc/php-fpm.d目录下的www.conf.default文件也需要修改成www.conf</span><br></pre></td></tr></table></figure>

<ul>
<li>启用并启动PHP-FPM服务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> php-fpm</span><br><span class="line">systemctl start php-fpm</span><br></pre></td></tr></table></figure>

<ul>
<li>在&#x2F;apps&#x2F;php&#x2F;etc&#x2F;php-fpm.d目录下的<a href="http://www.conf里添加以下行/">www.conf里添加以下行</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">php_admin_value[php.ini] = /apps/php/lib/php.ini</span><br></pre></td></tr></table></figure>

<ul>
<li>重启生效</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart php-fpm</span><br></pre></td></tr></table></figure>

<ul>
<li><code>www.conf</code>文件中的参数优化</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line">pm = dynamic</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>编译安装Postgresql13.7</title>
    <url>/2024/01/20/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85postgresql13.7/</url>
    <content><![CDATA[<h1 id="编译安装Postgresql13-7"><a href="#编译安装Postgresql13-7" class="headerlink" title="编译安装Postgresql13.7"></a>编译安装Postgresql13.7</h1><h3 id="创建postgres用户及安装目录"><a href="#创建postgres用户及安装目录" class="headerlink" title="创建postgres用户及安装目录"></a>创建postgres用户及安装目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># useradd postgres</span></span><br><span class="line"><span class="comment"># mkdir -p /apps/postgresql</span></span><br></pre></td></tr></table></figure>

<h3 id="安装PostgreSQL依赖包"><a href="#安装PostgreSQL依赖包" class="headerlink" title="安装PostgreSQL依赖包"></a>安装PostgreSQL依赖包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install perl-ExtUtils-Embed -y</span><br><span class="line">yum install readline-devel -y</span><br><span class="line">yum install python-devel -y</span><br><span class="line">yum install python3 -y</span><br><span class="line">yum install python3-devel -y&amp;nbsp;</span><br><span class="line">yum install gcc-c++ -y</span><br><span class="line">yum install cmake -y</span><br><span class="line">yum install libarchive -y</span><br><span class="line">yum install openssl-devel -y</span><br></pre></td></tr></table></figure>

<h3 id="部署PostgreSQL"><a href="#部署PostgreSQL" class="headerlink" title="部署PostgreSQL"></a>部署PostgreSQL</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">##下载安装包</span></span><br><span class="line">wget https://ftp.postgresql.org/pub/source/v13.7/postgresql-13.7.tar.gz  </span><br><span class="line">tar -zxvf postgresql-13.7.tar.gz  <span class="comment">##解压安装包</span></span><br><span class="line"><span class="built_in">cd</span> postgresql-13.7/</span><br><span class="line">./configure --prefix=/apps/postgresql --with-python --with-perl --with-openssl</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">##查看已经安装成功</span></span><br><span class="line">[root@rocky1 postgresql-13.7]<span class="comment"># /apps/postgresql/bin/pg_ctl --version</span></span><br><span class="line">pg_ctl (PostgreSQL) 13.7</span><br></pre></td></tr></table></figure>

<h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /apps/postgresql/pgdata <span class="comment">##创建数据库的数据目录</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/profile &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">### postgres ###</span></span><br><span class="line"><span class="string">export PATH=/apps/postgresql/bin:$PATH</span></span><br><span class="line"><span class="string">export LD_LIBRARY_PATH=/apps/postgresql/lib</span></span><br><span class="line"><span class="string">export PGDATA=/apps/postgresql/pgdata</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line">pg_ctl --version  <span class="comment">##环境变量配置成功</span></span><br></pre></td></tr></table></figure>

<p>给用户目录赋权并创建数据库簇</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R postgres.postgres /apps/postgresql  <span class="comment">##修改postgresql所属组和所属用户</span></span><br><span class="line">su - postgres</span><br><span class="line">initdb  <span class="comment">##初始化数据库</span></span><br></pre></td></tr></table></figure>

<h3 id="后续配置"><a href="#后续配置" class="headerlink" title="后续配置"></a>后续配置</h3><h4 id="自定义开放访问的IP-修改data目录下的pg-hba-conf文件"><a href="#自定义开放访问的IP-修改data目录下的pg-hba-conf文件" class="headerlink" title="自定义开放访问的IP ,修改data目录下的pg_hba.conf文件"></a>自定义开放访问的IP ,修改data目录下的pg_hba.conf文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /apps/postgresql/pgdata</span><br><span class="line">[root@rocky1 pgdata]<span class="comment"># vim pg_hba.conf</span></span><br><span class="line"><span class="comment"># IPv4 out connections:</span></span><br><span class="line">host    all             all             0.0.0.0/0                md5</span><br></pre></td></tr></table></figure>

<h4 id="添加主机ip和主机名"><a href="#添加主机ip和主机名" class="headerlink" title="添加主机ip和主机名"></a>添加主机ip和主机名</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@rocky1 pgdata]<span class="comment"># vim postgresql.conf</span></span><br><span class="line">listen_addresses = <span class="string">&#x27;*&#x27;</span>          <span class="comment"># what IP address(es) to listen on;</span></span><br><span class="line">port = 5432 </span><br></pre></td></tr></table></figure>

<ul>
<li>切换到root用户，并到postgresql源码包的解压目录下(&#x2F;root&#x2F;postgresql-13.7&#x2F;)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /apps/postgresql/log</span><br><span class="line"><span class="built_in">cd</span> /apps/postgresql/log</span><br><span class="line"><span class="built_in">touch</span> server.log</span><br><span class="line"><span class="built_in">chown</span> -R postgres.postgres <span class="built_in">log</span></span><br><span class="line"><span class="comment">#在/root/postgresql-13.7/contrib/start-scripts里面</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">将 PostgreSQL 的启动脚本从源码包的 contrib/start-scripts/linux 目录复制到 /etc/init.d 目录中。这个脚本是用于启动、停止和管理 PostgreSQL 服务器的脚本。</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">[root@rocky1 start-scripts]<span class="comment"># cp linux /etc/init.d/postgresql</span></span><br><span class="line">vim /etc/init.d/postgresql</span><br><span class="line">prefix=/apps/postgresql</span><br><span class="line">PGDATA=<span class="string">&quot;/apps/postgresql/pgdata&quot;</span></span><br><span class="line">PGLOG=<span class="string">&quot;/apps/postgresql/log/server.log&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>赋予该文件执行权限</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /etc/init.d/postgresql</span><br><span class="line"><span class="comment">#设置服务开机自启</span></span><br><span class="line">chkconfig --add postgresql</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /home/postgres</span><br><span class="line"><span class="built_in">chown</span> -R postgres.postgres /home/postgres</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动数据库</span></span><br><span class="line">service postgresql restart</span><br></pre></td></tr></table></figure>

<h3 id="源码安装timesacledb"><a href="#源码安装timesacledb" class="headerlink" title="源码安装timesacledb"></a>源码安装timesacledb</h3><h5 id="cmake需要3-0以上版本"><a href="#cmake需要3-0以上版本" class="headerlink" title="cmake需要3.0以上版本"></a>cmake需要3.0以上版本</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget&amp;nbsp;https://github.com/Kitware/CMake/releases/download/v3.27.4/cmake-3.27.4.tar.gz</span><br><span class="line"></span><br><span class="line">tar zxvf cmake-3.27.4.tar.gz</span><br><span class="line"><span class="built_in">cd</span> cmake-3.27.4</span><br><span class="line">./bootstrap --prefix=/usr/local</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">vi ~/.bash_profile</span><br></pre></td></tr></table></figure>

<ul>
<li>下载源码，或者直接下载包，传上去</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/timescale/timescaledb/archive/refs/tags/2.11.2.tar.gz</span><br><span class="line">tar zxvf timescaledb-2.11.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> timescaledb-2.11.1</span><br></pre></td></tr></table></figure>

<ul>
<li>安装和编译</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bootstrap <span class="comment">#如果有需要openssl就安装重新构建pgsql</span></span><br><span class="line"><span class="built_in">cd</span> ./build &amp;&amp; make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#加在最后一行</span></span><br><span class="line"><span class="built_in">cd</span> /apps/postgresql/pgdata</span><br><span class="line">[root@rocky1 pgdata]<span class="comment"># vim postgresql.conf</span></span><br><span class="line">shared_preload_libraries = <span class="string">&#x27;timescaledb&#x27;</span></span><br><span class="line"></span><br><span class="line">service postgresql restart</span><br><span class="line"></span><br><span class="line">CREATE DATABASE example;</span><br><span class="line">\c example</span><br><span class="line">CREATE EXTENSION IF NOT EXISTS timescaledb;</span><br><span class="line">SELECT * FROM pg_extension WHERE extname=<span class="string">&#x27;timescaledb&#x27;</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
        <category>Postgresql</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Postgresql</tag>
      </tags>
  </entry>
  <entry>
    <title>部分常见Linux命令总结</title>
    <url>/2024/04/28/%E9%83%A8%E5%88%86%E5%B8%B8%E8%A7%81linux%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="部分常见Linux命令总结"><a href="#部分常见Linux命令总结" class="headerlink" title="部分常见Linux命令总结"></a>部分常见Linux命令总结</h1><h2 id="1-基本命令"><a href="#1-基本命令" class="headerlink" title="1. 基本命令"></a>1. 基本命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">uname</span> -m  <span class="comment">#显示机器的处理器架构</span></span><br><span class="line"><span class="built_in">uname</span> -r <span class="comment">#显示正在使用的内核版本</span></span><br><span class="line">dmidecode -q  <span class="comment">#显示硬件系统部件</span></span><br><span class="line">(SMBIOS / DMI) hdparm -i /dev/hda  <span class="comment">#罗列一个磁盘的架构特性</span></span><br><span class="line">hdparm -tT /dev/sda <span class="comment">#在磁盘上执行测试性读取操作系统信息</span></span><br><span class="line"><span class="built_in">arch</span> <span class="comment">#显示机器的处理器架构</span></span><br><span class="line"><span class="built_in">uname</span> -m <span class="comment">#显示机器的处理器架构</span></span><br><span class="line"><span class="built_in">uname</span> -r <span class="comment">#显示正在使用的内核版本</span></span><br><span class="line">dmidecode -q <span class="comment">#显示硬件系统部件 - (SMBIOS / DMI)</span></span><br><span class="line">hdparm -i /dev/hda <span class="comment">#罗列一个磁盘的架构特性</span></span><br><span class="line">hdparm -tT /dev/sda <span class="comment">#在磁盘上执行测试性读取操作</span></span><br><span class="line"><span class="built_in">cat</span> /proc/cpuinfo <span class="comment">#显示CPU info的信息</span></span><br><span class="line"><span class="built_in">cat</span> /proc/interrupts <span class="comment">#显示中断</span></span><br><span class="line"><span class="built_in">cat</span> /proc/meminfo <span class="comment">#校验内存使用</span></span><br><span class="line"><span class="built_in">cat</span> /proc/swaps <span class="comment">#显示哪些swap被使用</span></span><br><span class="line"><span class="built_in">cat</span> /proc/version <span class="comment">#显示内核的版本</span></span><br><span class="line"><span class="built_in">cat</span> /proc/net/dev <span class="comment">#显示网络适配器及统计</span></span><br><span class="line"><span class="built_in">cat</span> /proc/mounts <span class="comment">#显示已加载的文件系统</span></span><br><span class="line">lspci -tv <span class="comment">#罗列 PCI 设备</span></span><br><span class="line">lsusb -tv <span class="comment">#显示 USB 设备</span></span><br><span class="line"><span class="built_in">date</span>  <span class="comment">#显示系统日期</span></span><br><span class="line">cal 2007 <span class="comment">#显示2007年的日历表</span></span><br><span class="line"><span class="built_in">date</span> 041217002007.00 <span class="comment">#设置日期和时间 - 月日时分年.秒</span></span><br><span class="line">clock -w <span class="comment">#将时间修改保存到 BIOS</span></span><br></pre></td></tr></table></figure>

<h2 id="2-关机"><a href="#2-关机" class="headerlink" title="2. 关机"></a>2. 关机</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shutdown -h now <span class="comment">#关闭系统(1)</span></span><br><span class="line">init 0 <span class="comment">#关闭系统(2)</span></span><br><span class="line">telinit 0 <span class="comment">#关闭系统(3)</span></span><br><span class="line">shutdown -h hours:minutes &amp; <span class="comment">#按预定时间关闭系统</span></span><br><span class="line">shutdown -c <span class="comment">#取消按预定时间关闭系统</span></span><br><span class="line">shutdown -r now <span class="comment">#重启(1)</span></span><br><span class="line">reboot <span class="comment">#重启(2)</span></span><br><span class="line"><span class="built_in">logout</span> <span class="comment">#注销</span></span><br></pre></td></tr></table></figure>

<h2 id="3-文件和目录"><a href="#3-文件和目录" class="headerlink" title="3. 文件和目录"></a>3. 文件和目录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home <span class="comment">#进入 &#x27;/ home&#x27; 目录&#x27;</span></span><br><span class="line"><span class="built_in">cd</span> .. <span class="comment">#返回上一级目录</span></span><br><span class="line"><span class="built_in">cd</span> ../..   <span class="comment">#返回上两级目录</span></span><br><span class="line"><span class="built_in">cd</span> <span class="comment">#进入个人的主目录</span></span><br><span class="line"><span class="built_in">cd</span> ~user1 <span class="comment">#进入个人的主目录</span></span><br><span class="line"><span class="built_in">cd</span> - <span class="comment">#返回上次所在的目录</span></span><br><span class="line"><span class="built_in">pwd</span> <span class="comment">#显示工作路径</span></span><br><span class="line"><span class="built_in">ls</span> <span class="comment">#查看目录中的文件</span></span><br><span class="line"><span class="built_in">ls</span> -F <span class="comment">#查看目录中的文件</span></span><br><span class="line"><span class="built_in">ls</span> -l <span class="comment">#显示文件和目录的详细资料</span></span><br><span class="line"><span class="built_in">ls</span> -a <span class="comment">#显示隐藏文件</span></span><br><span class="line"><span class="built_in">ls</span> *[0-9]* <span class="comment">#显示包含数字的文件名和目录名</span></span><br><span class="line">tree <span class="comment">#显示文件和目录由根目录开始的树形结构(1)</span></span><br><span class="line">lstree <span class="comment">#显示文件和目录由根目录开始的树形结构(2)</span></span><br><span class="line"><span class="built_in">mkdir</span> dir1 <span class="comment">#创建一个叫做 &#x27;dir1&#x27; 的目录&#x27;</span></span><br><span class="line"><span class="built_in">mkdir</span> dir1 dir2 <span class="comment">#同时创建两个目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /tmp/dir1/dir2 <span class="comment">#创建一个目录树</span></span><br><span class="line"><span class="built_in">rm</span> -f file1 <span class="comment">#删除一个叫做 &#x27;file1&#x27; 的文件&#x27;</span></span><br><span class="line"><span class="built_in">rmdir</span> dir1 <span class="comment">#删除一个叫做 &#x27;dir1&#x27; 的目录&#x27;</span></span><br><span class="line"><span class="built_in">rm</span> -rf dir1 <span class="comment">#删除一个叫做 &#x27;dir1&#x27; 的目录并同时删除其内容</span></span><br><span class="line"><span class="built_in">rm</span> -rf dir1 dir2 <span class="comment">#同时删除两个目录及它们的内容</span></span><br><span class="line"><span class="built_in">mv</span> dir1 new_dir <span class="comment">#重命名/移动 一个目录</span></span><br><span class="line"><span class="built_in">cp</span> file1 file2 <span class="comment">#复制一个文件</span></span><br><span class="line"><span class="built_in">cp</span> <span class="built_in">dir</span>/* . <span class="comment">#复制一个目录下的所有文件到当前工作目录</span></span><br><span class="line"><span class="built_in">cp</span> -a /tmp/dir1 . <span class="comment">#复制一个目录到当前工作目录</span></span><br><span class="line"><span class="built_in">cp</span> -a dir1 dir2 <span class="comment">#复制一个目录</span></span><br><span class="line"><span class="built_in">ln</span> -s file1 lnk1 <span class="comment">#创建一个指向文件或目录的软链接</span></span><br><span class="line"><span class="built_in">ln</span> file1 lnk1 <span class="comment">#创建一个指向文件或目录的物理链接</span></span><br><span class="line"><span class="built_in">touch</span> -t 0712250000 file1 <span class="comment">#修改一个文件或目录的时间戳 - (YYMMDDhhmm)</span></span><br><span class="line">file file1 <span class="comment">#outputs the mime type of the file as text</span></span><br><span class="line">iconv -l 列出已知的编码</span><br><span class="line">iconv -f fromEncoding -t toEncoding inputFile &gt; outputFile <span class="comment">#creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding.</span></span><br><span class="line"></span><br><span class="line">find . -maxdepth 1 -name *.jpg -<span class="built_in">print</span> -<span class="built_in">exec</span> convert <span class="string">&quot;&#123;&#125;&quot;</span> -resize 80x60 <span class="string">&quot;thumbs/&#123;&#125;&quot;</span> \; <span class="comment">#batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick)</span></span><br></pre></td></tr></table></figure>

<h2 id="4-文件搜索"><a href="#4-文件搜索" class="headerlink" title="4. 文件搜索"></a>4. 文件搜索</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -name file1 <span class="comment">#从 &#x27;/&#x27; 开始进入根文件系统搜索文件和目录</span></span><br><span class="line">find / -user user1 <span class="comment">#搜索属于用户 &#x27;user1&#x27; 的文件和目录</span></span><br><span class="line">find /home/user1 -name \*.bin <span class="comment">#在目录 &#x27;/ home/user1&#x27; 中搜索带有&#x27;.bin&#x27; 结尾的文件</span></span><br><span class="line">find /usr/bin -<span class="built_in">type</span> f -atime +100 <span class="comment">#搜索在过去100天内未被使用过的执行文件</span></span><br><span class="line">find /usr/bin -<span class="built_in">type</span> f -mtime -10 <span class="comment">#搜索在10天内被创建或者修改过的文件</span></span><br><span class="line">find / -name \*.rpm -<span class="built_in">exec</span> <span class="built_in">chmod</span> 755 <span class="string">&#x27;&#123;&#125;&#x27;</span> \; <span class="comment">#搜索以 &#x27;.rpm&#x27; 结尾的文件并定义其权限</span></span><br><span class="line">find / -xdev -name \*.rpm 搜索以 <span class="string">&#x27;.rpm&#x27;</span> <span class="comment">#结尾的文件，忽略光驱、捷盘等可移动设备</span></span><br><span class="line">locate \*.ps 寻找以 <span class="string">&#x27;.ps&#x27;</span> <span class="comment">#结尾的文件 - 先运行 &#x27;updatedb&#x27; 命令</span></span><br><span class="line">whereis halt <span class="comment">#显示一个二进制文件、源码或man的位置</span></span><br><span class="line"><span class="built_in">which</span> halt <span class="comment">#显示一个二进制文件或可执行文件的完整路径</span></span><br></pre></td></tr></table></figure>

<h2 id="5-挂载一个文件系统"><a href="#5-挂载一个文件系统" class="headerlink" title="5. 挂载一个文件系统"></a>5. 挂载一个文件系统</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount /dev/hda2 /mnt/hda2 <span class="comment">#挂载一个叫做hda2的盘 - 确定目录 &#x27;/ mnt/hda2&#x27; 已经存在</span></span><br><span class="line">umount /dev/hda2 <span class="comment">#卸载一个叫做hda2的盘 - 先从挂载点 &#x27;/ mnt/hda2&#x27; 退出</span></span><br><span class="line">fuser -km /mnt/hda2 <span class="comment">#当设备繁忙时强制卸载</span></span><br><span class="line">umount -n /mnt/hda2 <span class="comment">#运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用</span></span><br><span class="line">mount /dev/fd0 /mnt/floppy <span class="comment">#挂载一个软盘</span></span><br><span class="line">mount /dev/cdrom /mnt/cdrom <span class="comment">#挂载一个cdrom或dvdrom</span></span><br><span class="line">mount /dev/hdc /mnt/cdrecorder <span class="comment">#挂载一个cdrw或dvdrom</span></span><br><span class="line">mount /dev/hdb /mnt/cdrecorder <span class="comment">#挂载一个cdrw或dvdrom</span></span><br><span class="line">mount -o loop file.iso /mnt/cdrom <span class="comment">#挂载一个文件或ISO镜像文件</span></span><br><span class="line">mount -t vfat /dev/hda5 /mnt/hda5 <span class="comment">#挂载一个Windows FAT32文件系统</span></span><br><span class="line">mount /dev/sda1 /mnt/usbdisk <span class="comment">#挂载一个usb 捷盘或闪存设备</span></span><br><span class="line">mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share <span class="comment">#挂载一个windows网络共享</span></span><br></pre></td></tr></table></figure>

<h2 id="6-磁盘空间"><a href="#6-磁盘空间" class="headerlink" title="6. 磁盘空间"></a>6. 磁盘空间</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -h <span class="comment">#显示已经挂载的分区列表</span></span><br><span class="line"><span class="built_in">ls</span> -lSr |more <span class="comment">#以尺寸大小排列文件和目录</span></span><br><span class="line"><span class="built_in">du</span> -sh dir1 估算目录 <span class="string">&#x27;dir1&#x27;</span> <span class="comment">#已经使用的磁盘空间&#x27;</span></span><br><span class="line"><span class="built_in">du</span> -sk * | <span class="built_in">sort</span> -rn <span class="comment">#以容量大小为依据依次显示文件和目录的大小</span></span><br><span class="line">rpm -q -a --qf <span class="string">&#x27;%10&#123;SIZE&#125;t%&#123;NAME&#125;n&#x27;</span> | <span class="built_in">sort</span> -k1,1n <span class="comment">#以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统)</span></span><br><span class="line">dpkg-query -W -f=<span class="string">&#x27;$&#123;Installed-Size;10&#125;t$&#123;Package&#125;n&#x27;</span> | <span class="built_in">sort</span> -k1,1n <span class="comment">#以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统)</span></span><br></pre></td></tr></table></figure>

<h2 id="7-用户和群组"><a href="#7-用户和群组" class="headerlink" title="7. 用户和群组"></a>7. 用户和群组</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd group_name <span class="comment">#创建一个新用户组</span></span><br><span class="line">groupdel group_name <span class="comment">#删除一个用户组</span></span><br><span class="line">groupmod -n new_group_name old_group_name <span class="comment">#重命名一个用户组</span></span><br><span class="line">useradd -c <span class="string">&quot;Name Surname &quot;</span> -g admin -d /home/user1 -s /bin/bash user1 <span class="comment">#创建一个属于 &quot;admin&quot; 用户组的用户</span></span><br><span class="line">useradd user1 <span class="comment">#创建一个新用户</span></span><br><span class="line">userdel -r user1 <span class="comment">#删除一个用户 ( &#x27;-r&#x27; 排除主目录)</span></span><br><span class="line">usermod -c <span class="string">&quot;User FTP&quot;</span> -g system -d /ftp/user1 -s /bin/nologin user1 <span class="comment">##修改用户属性</span></span><br><span class="line">passwd <span class="comment">#修改口令</span></span><br><span class="line">passwd user1 <span class="comment">#修改一个用户的口令 (只允许root执行)</span></span><br><span class="line">chage -E 2005-12-31 user1 <span class="comment">#设置用户口令的失效期限</span></span><br><span class="line">pwck <span class="comment">#检查 &#x27;/etc/passwd&#x27; 的文件格式和语法修正以及存在的用户</span></span><br><span class="line">grpck <span class="comment">#检查 &#x27;/etc/passwd&#x27; 的文件格式和语法修正以及存在的群组</span></span><br><span class="line">newgrp group_name <span class="comment">#登陆进一个新的群组以改变新创建文件的预设群组</span></span><br></pre></td></tr></table></figure>

<h2 id="8-文件的权限-使用-“-”-设置权限，使用-“-”-用于取消"><a href="#8-文件的权限-使用-“-”-设置权限，使用-“-”-用于取消" class="headerlink" title="8. 文件的权限 使用 “+” 设置权限，使用 “-” 用于取消"></a>8. 文件的权限 使用 “+” 设置权限，使用 “-” 用于取消</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -lh <span class="comment">#显示权限</span></span><br><span class="line"><span class="built_in">ls</span> /tmp | <span class="built_in">pr</span> -T5 -W<span class="variable">$COLUMNS</span> <span class="comment">#将终端划分成5栏显示</span></span><br><span class="line"><span class="built_in">chmod</span> ugo+rwx directory1 <span class="comment">#设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限</span></span><br><span class="line"><span class="built_in">chmod</span> go-rwx directory1 <span class="comment">#删除群组(g)与其他人(o)对目录的读写执行权限</span></span><br><span class="line"><span class="built_in">chown</span> user1 file1 <span class="comment">#改变一个文件的所有人属性</span></span><br><span class="line"><span class="built_in">chown</span> -R user1 directory1 <span class="comment">#改变一个目录的所有人属性并同时改变改目录下所有文件的属性</span></span><br><span class="line"><span class="built_in">chgrp</span> group1 file1 <span class="comment">#改变文件的群组</span></span><br><span class="line"><span class="built_in">chown</span> user1:group1 file1 <span class="comment">#改变一个文件的所有人和群组属性</span></span><br><span class="line">find / -perm -u+s <span class="comment">#罗列一个系统中所有使用了SUID控制的文件</span></span><br><span class="line"><span class="built_in">chmod</span> u+s /bin/file1 <span class="comment">#设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限</span></span><br><span class="line"><span class="built_in">chmod</span> u-s /bin/file1 <span class="comment">#禁用一个二进制文件的 SUID位</span></span><br><span class="line"><span class="built_in">chmod</span> g+s /home/public <span class="comment">#设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的</span></span><br><span class="line"><span class="built_in">chmod</span> g-s /home/public <span class="comment">#禁用一个目录的 SGID 位</span></span><br><span class="line"><span class="built_in">chmod</span> o+t /home/public <span class="comment">#设置一个文件的 STIKY 位 - 只允许合法所有人删除文件</span></span><br><span class="line"><span class="built_in">chmod</span> o-t /home/public <span class="comment">#禁用一个目录的 STIKY 位</span></span><br><span class="line"><span class="built_in">chmod</span> +x 文件路径 <span class="comment">#为所有者、所属组和其他用户添加执行的权限</span></span><br><span class="line"><span class="built_in">chmod</span> -x 文件路径 <span class="comment">#为所有者、所属组和其他用户删除执行的权限</span></span><br><span class="line"><span class="built_in">chmod</span> u+x 文件路径 <span class="comment">#为所有者添加执行的权限</span></span><br><span class="line"><span class="built_in">chmod</span> g+x 文件路径 <span class="comment">#为所属组添加执行的权限</span></span><br><span class="line"><span class="built_in">chmod</span> o+x 文件路径 <span class="comment">#为其他用户添加执行的权限</span></span><br><span class="line"><span class="built_in">chmod</span> ug+x 文件路径 <span class="comment">#为所有者、所属组添加执行的权限</span></span><br><span class="line"><span class="built_in">chmod</span> =wx 文件路径 <span class="comment">#为所有者、所属组和其他用户添加写、执行的权限，取消读权限</span></span><br><span class="line"><span class="built_in">chmod</span> ug=wx 文件路径 <span class="comment">#为所有者、所属组添加写、执行的权限，取消读权限</span></span><br></pre></td></tr></table></figure>

<h2 id="9-文件的特殊属性-，使用-“-”-设置权限，使用-“-”-用于取消"><a href="#9-文件的特殊属性-，使用-“-”-设置权限，使用-“-”-用于取消" class="headerlink" title="9. 文件的特殊属性 ，使用 “+” 设置权限，使用 “-” 用于取消"></a>9. 文件的特殊属性 ，使用 “+” 设置权限，使用 “-” 用于取消</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chattr +a file1 <span class="comment">#只允许以追加方式读写文件</span></span><br><span class="line">chattr +c file1 <span class="comment">##允许这个文件能被内核自动压缩/解压</span></span><br><span class="line">chattr +d file1 <span class="comment">#在进行文件系统备份时，dump程序将忽略这个文件</span></span><br><span class="line">chattr +i file1 <span class="comment">#设置成不可变的文件，不能被删除、修改、重命名或者链接</span></span><br><span class="line">chattr +s file1 <span class="comment">#允许一个文件被安全地删除</span></span><br><span class="line">chattr +S file1 <span class="comment">#一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘</span></span><br><span class="line">chattr +u file1 <span class="comment">#若文件被删除，系统会允许你在以后恢复这个被删除的文件</span></span><br><span class="line">lsattr <span class="comment">#显示特殊的属性</span></span><br></pre></td></tr></table></figure>

<h2 id="10-打包和压缩文件"><a href="#10-打包和压缩文件" class="headerlink" title="10. 打包和压缩文件"></a>10. 打包和压缩文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bunzip2 file1.bz2 <span class="comment">#解压一个叫做 &#x27;file1.bz2&#x27;的文件</span></span><br><span class="line">bzip2 file1 <span class="comment">#压缩一个叫做 &#x27;file1&#x27; 的文件</span></span><br><span class="line">gunzip file1.gz <span class="comment">#解压一个叫做 &#x27;file1.gz&#x27;的文件</span></span><br><span class="line">gzip file1 <span class="comment">#压缩一个叫做 &#x27;file1&#x27;的文件</span></span><br><span class="line">gzip -9 file1 <span class="comment">#最大程度压缩</span></span><br><span class="line">rar a file1.rar test_file <span class="comment">#创建一个叫做 &#x27;file1.rar&#x27; 的包</span></span><br><span class="line">rar a file1.rar file1 file2 dir1 <span class="comment">#同时压缩 &#x27;file1&#x27;, &#x27;file2&#x27; 以及目录 &#x27;dir1&#x27;</span></span><br><span class="line">rar x file1.rar <span class="comment">#解压rar包</span></span><br><span class="line">unrar x file1.rar <span class="comment">#解压rar包</span></span><br><span class="line">tar -cvf archive.tar file1 <span class="comment">#创建一个非压缩的 tarball</span></span><br><span class="line">tar -cvf archive.tar file1 file2 dir1 <span class="comment">#创建一个包含了 &#x27;file1&#x27;, &#x27;file2&#x27; 以及 &#x27;dir1&#x27;的档案文件</span></span><br><span class="line">tar -tf archive.tar <span class="comment">#显示一个包中的内容</span></span><br><span class="line">tar -xvf archive.tar <span class="comment">#释放一个包</span></span><br><span class="line">tar -xvf archive.tar -C /tmp <span class="comment">#将压缩包释放到 /tmp目录下</span></span><br><span class="line">tar -cvfj archive.tar.bz2 dir1 <span class="comment">#创建一个bzip2格式的压缩包</span></span><br><span class="line">tar -xvfj archive.tar.bz2 <span class="comment">#解压一个bzip2格式的压缩包</span></span><br><span class="line">tar -cvfz archive.tar.gz dir1 <span class="comment">#创建一个gzip格式的压缩包</span></span><br><span class="line">tar -xvfz archive.tar.gz <span class="comment">#解压一个gzip格式的压缩包</span></span><br><span class="line">zip file1.zip file1 <span class="comment">#创建一个zip格式的压缩包</span></span><br><span class="line">zip -r file1.zip file1 file2 dir1 <span class="comment">#将几个文件和目录同时压缩成一个zip格式的压缩包</span></span><br><span class="line">unzip file1.zip <span class="comment">#解压一个zip格式压缩包</span></span><br></pre></td></tr></table></figure>

<h2 id="11-RPM-包"><a href="#11-RPM-包" class="headerlink" title="11. RPM 包"></a>11. RPM 包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh package.rpm <span class="comment">#安装一个rpm包</span></span><br><span class="line">rpm -ivh --nodeeps package.rpm <span class="comment">#安装一个rpm包而忽略依赖关系警告</span></span><br><span class="line">rpm -U package.rpm <span class="comment">#更新一个rpm包但不改变其配置文件</span></span><br><span class="line">rpm -F package.rpm <span class="comment">#更新一个确定已经安装的rpm包</span></span><br><span class="line">rpm -e package_name.rpm <span class="comment">#删除一个rpm包</span></span><br><span class="line">rpm -qa <span class="comment">#显示系统中所有已经安装的rpm包</span></span><br><span class="line">rpm -qa | grep httpd <span class="comment">#显示所有名称中包含 &quot;httpd&quot; 字样的rpm包</span></span><br><span class="line">rpm -qi package_name <span class="comment">#获取一个已安装包的特殊信息</span></span><br><span class="line">rpm -qg <span class="string">&quot;System Environment/Daemons&quot;</span> <span class="comment">#显示一个组件的rpm包</span></span><br><span class="line">rpm -ql package_name <span class="comment">#显示一个已经安装的rpm包提供的文件列表</span></span><br><span class="line">rpm -qc package_name <span class="comment">#显示一个已经安装的rpm包提供的配置文件列表</span></span><br><span class="line">rpm -q package_name --whatrequires <span class="comment">#显示与一个rpm包存在依赖关系的列表</span></span><br><span class="line">rpm -q package_name --whatprovides <span class="comment">#显示一个rpm包所占的体积</span></span><br><span class="line">rpm -q package_name --scripts <span class="comment">#显示在安装/删除期间所执行的脚本l</span></span><br><span class="line">rpm -q package_name --changelog <span class="comment">#显示一个rpm包的修改历史</span></span><br><span class="line">rpm -qf /etc/httpd/conf/httpd.conf <span class="comment">#确认所给的文件由哪个rpm包所提供</span></span><br><span class="line">rpm -qp package.rpm -l <span class="comment">#显示由一个尚未安装的rpm包提供的文件列表</span></span><br><span class="line">rpm --import /media/cdrom/RPM-GPG-KEY <span class="comment">#导入公钥数字证书</span></span><br><span class="line">rpm --checksig package.rpm <span class="comment">#确认一个rpm包的完整性</span></span><br><span class="line">rpm -qa gpg-pubkey <span class="comment">#确认已安装的所有rpm包的完整性</span></span><br><span class="line">rpm -V package_name <span class="comment">#检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间</span></span><br><span class="line">rpm -Va <span class="comment">#检查系统中所有已安装的rpm包- 小心使用</span></span><br><span class="line">rpm -Vp package.rpm <span class="comment">#确认一个rpm包还未安装</span></span><br><span class="line">rpm2cpio package.rpm | cpio --extract --make-directories *bin* <span class="comment">#从一个rpm包运行可执行文件</span></span><br><span class="line">rpm -ivh /usr/src/redhat/RPMS/`<span class="built_in">arch</span>`/package.rpm <span class="comment">#从一个rpm源码安装一个构建好的包</span></span><br><span class="line">rpmbuild --rebuild package_name.src.rpm <span class="comment">#从一个rpm源码构建一个 rpm 包</span></span><br></pre></td></tr></table></figure>

<h2 id="12-YUM-软件包升级器"><a href="#12-YUM-软件包升级器" class="headerlink" title="12. YUM 软件包升级器"></a>12. YUM 软件包升级器</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install package_name <span class="comment">#下载并安装一个rpm包</span></span><br><span class="line">yum localinstall package_name.rpm <span class="comment">#将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系</span></span><br><span class="line">yum update package_name.rpm <span class="comment">#更新当前系统中所有安装的rpm包</span></span><br><span class="line">yum update package_name <span class="comment">#更新一个rpm包</span></span><br><span class="line">yum remove package_name <span class="comment">#删除一个rpm包</span></span><br><span class="line">yum list <span class="comment">#列出当前系统中安装的所有包</span></span><br><span class="line">yum search package_name <span class="comment">#在rpm仓库中搜寻软件包</span></span><br><span class="line">yum clean packages <span class="comment">#清理rpm缓存删除下载的包</span></span><br><span class="line">yum clean headers <span class="comment">#删除所有头文件</span></span><br><span class="line">yum clean all <span class="comment">#删除所有缓存的包和头文件</span></span><br></pre></td></tr></table></figure>

<h2 id="13-deb-包"><a href="#13-deb-包" class="headerlink" title="13. deb 包"></a>13. deb 包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg -i package.deb <span class="comment">#安装/更新一个 deb 包</span></span><br><span class="line">dpkg -r package_name <span class="comment">#从系统删除一个 deb 包</span></span><br><span class="line">dpkg -l <span class="comment">#显示系统中所有已经安装的 deb 包</span></span><br><span class="line">dpkg -l | grep httpd <span class="comment">#显示所有名称中包含 &quot;httpd&quot; 字样的deb包</span></span><br><span class="line">dpkg -s package_name <span class="comment">#获得已经安装在系统中一个特殊包的信息</span></span><br><span class="line">dpkg -L package_name <span class="comment">#显示系统中已经安装的一个deb包所提供的文件列表</span></span><br><span class="line">dpkg --contents package.deb <span class="comment">#显示尚未安装的一个包所提供的文件列表</span></span><br><span class="line">dpkg -S /bin/ping <span class="comment">#确认所给的文件由哪个deb包提供</span></span><br><span class="line">APT <span class="comment">#软件工具 (Debian, Ubuntu 以及类似系统)</span></span><br><span class="line">apt-get install package_name <span class="comment">#安装/更新一个 deb 包</span></span><br><span class="line">apt-cdrom install package_name <span class="comment">#从光盘安装/更新一个 deb 包</span></span><br><span class="line">apt-get update <span class="comment">#升级列表中的软件包</span></span><br><span class="line">apt-get upgrade <span class="comment">#升级所有已安装的软件</span></span><br><span class="line">apt-get remove package_name <span class="comment">#从系统删除一个deb包</span></span><br><span class="line">apt-get check <span class="comment">#确认依赖的软件仓库正确</span></span><br><span class="line">apt-get clean <span class="comment">#从下载的软件包中清理缓存</span></span><br><span class="line">apt-cache search searched-package <span class="comment">#返回包含所要搜索字符串的软件包名称</span></span><br></pre></td></tr></table></figure>

<h2 id="14-查看文件内容"><a href="#14-查看文件内容" class="headerlink" title="14. 查看文件内容"></a>14. 查看文件内容</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> file1 <span class="comment">#从第一个字节开始正向查看文件的内容</span></span><br><span class="line"><span class="built_in">tac</span> file1 <span class="comment">#从最后一行开始反向查看一个文件的内容</span></span><br><span class="line">more file1 <span class="comment">#查看一个长文件的内容</span></span><br><span class="line">less file1 <span class="comment">#类似于 &#x27;more&#x27; 命令，但是它允许在文件中和正向操作一样的反向操作</span></span><br><span class="line"><span class="built_in">head</span> -2 file1 <span class="comment">#查看一个文件的前两行</span></span><br><span class="line"><span class="built_in">tail</span> -2 file1 <span class="comment">#查看一个文件的最后两行</span></span><br><span class="line"><span class="built_in">tail</span> -f /var/log/messages <span class="comment">#实时查看被添加到一个文件中的内容</span></span><br></pre></td></tr></table></figure>

<h2 id="15-文本处理"><a href="#15-文本处理" class="headerlink" title="15. 文本处理"></a>15. 文本处理</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> file1 | <span class="built_in">command</span>( sed, grep, awk, grep, etc...) &gt; result.txt <span class="comment">#合并一个文件的详细说明文本，并将简介写入一个新文件中</span></span><br><span class="line"><span class="built_in">cat</span> file1 | <span class="built_in">command</span>( sed, grep, awk, grep, etc...) &gt;&gt; result.txt <span class="comment">#合并一个文件的详细说明文本，并将简介写入一个已有的文件中</span></span><br><span class="line">grep Aug /var/log/messages <span class="comment">#在文件 &#x27;/var/log/messages&#x27;中查找关键词&quot;Aug&quot;</span></span><br><span class="line">grep ^Aug /var/log/messages <span class="comment">#在文件 &#x27;/var/log/messages&#x27;中查找以&quot;Aug&quot;开始的词汇</span></span><br><span class="line">grep [0-9] /var/log/messages <span class="comment">#选择 &#x27;/var/log/messages&#x27; 文件中所有包含数字的行</span></span><br><span class="line">grep Aug -R /var/log/* <span class="comment">#在目录 &#x27;/var/log&#x27; 及随后的目录中搜索字符串&quot;Aug&quot;</span></span><br><span class="line">sed <span class="string">&#x27;s/stringa1/stringa2/g&#x27;</span> example.txt <span class="comment">#将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot;</span></span><br><span class="line">sed <span class="string">&#x27;/^$/d&#x27;</span> example.txt <span class="comment">#从example.txt文件中删除所有空白行</span></span><br><span class="line">sed <span class="string">&#x27;/ *#/d; /^$/d&#x27;</span> example.txt <span class="comment">#从example.txt文件中删除所有注释和空白行</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;esempio&#x27;</span> | <span class="built_in">tr</span> <span class="string">&#x27;[:lower:]&#x27;</span> <span class="string">&#x27;[:upper:]&#x27;</span> <span class="comment">#合并上下单元格内容</span></span><br><span class="line">sed -e <span class="string">&#x27;1d&#x27;</span> result.txt <span class="comment">#从文件example.txt 中排除第一行</span></span><br><span class="line">sed -n <span class="string">&#x27;/stringa1/p&#x27;</span> <span class="comment">#查看只包含词汇 &quot;string1&quot;的行</span></span><br><span class="line">sed -e <span class="string">&#x27;s/ *$//&#x27;</span> example.txt <span class="comment">#删除每一行最后的空白字符</span></span><br><span class="line">sed -e <span class="string">&#x27;s/stringa1//g&#x27;</span> example.txt <span class="comment">#从文档中只删除词汇 &quot;string1&quot; 并保留剩余全部</span></span><br><span class="line">sed -n <span class="string">&#x27;1,5p;5q&#x27;</span> example.txt <span class="comment">#查看从第一行到第5行内容</span></span><br><span class="line">sed -n <span class="string">&#x27;5p;5q&#x27;</span> example.txt <span class="comment">#查看第5行</span></span><br><span class="line">sed -e <span class="string">&#x27;s/00*/0/g&#x27;</span> example.txt <span class="comment">#用单个零替换多个零</span></span><br><span class="line"><span class="built_in">cat</span> -n file1 <span class="comment">#标示文件的行数</span></span><br><span class="line"><span class="built_in">cat</span> example.txt | awk <span class="string">&#x27;NR%2==1&#x27;</span> <span class="comment">#删除example.txt文件中的所有偶数行</span></span><br><span class="line"><span class="built_in">echo</span> a b c | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> <span class="comment">#查看一行第一栏</span></span><br><span class="line"><span class="built_in">echo</span> a b c | awk <span class="string">&#x27;&#123;print $1,$3&#125;&#x27;</span> <span class="comment">#查看一行的第一和第三栏</span></span><br><span class="line"><span class="built_in">paste</span> file1 file2 <span class="comment">#合并两个文件或两栏的内容</span></span><br><span class="line"><span class="built_in">paste</span> -d <span class="string">&#x27;+&#x27;</span> file1 file2 <span class="comment">#合并两个文件或两栏的内容，中间用&quot;+&quot;区分</span></span><br><span class="line"><span class="built_in">sort</span> file1 file2 <span class="comment">#排序两个文件的内容</span></span><br><span class="line"><span class="built_in">sort</span> file1 file2 | <span class="built_in">uniq</span> <span class="comment">#取出两个文件的并集(重复的行只保留一份)</span></span><br><span class="line"><span class="built_in">sort</span> file1 file2 | <span class="built_in">uniq</span> -u <span class="comment">#删除交集，留下其他的行</span></span><br><span class="line"><span class="built_in">sort</span> file1 file2 | <span class="built_in">uniq</span> -d <span class="comment">#取出两个文件的交集(只留下同时存在于两个文件中的文件)</span></span><br><span class="line"><span class="built_in">comm</span> -1 file1 file2 <span class="comment">#比较两个文件的内容只删除 &#x27;file1&#x27; 所包含的内容</span></span><br><span class="line"><span class="built_in">comm</span> -2 file1 file2 <span class="comment">#比较两个文件的内容只删除 &#x27;file2&#x27; 所包含的内容</span></span><br><span class="line"><span class="built_in">comm</span> -3 file1 file2 <span class="comment">#比较两个文件的内容只删除两个文件共有的部分</span></span><br></pre></td></tr></table></figure>

<h2 id="16-字符设置和文件格式转换"><a href="#16-字符设置和文件格式转换" class="headerlink" title="16. 字符设置和文件格式转换"></a>16. 字符设置和文件格式转换</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dos2unix filedos.txt fileunix.txt <span class="comment">#将一个文本文件的格式从MSDOS转换成UNIX</span></span><br><span class="line">unix2dos fileunix.txt filedos.txt <span class="comment">#将一个文本文件的格式从UNIX转换成MSDOS</span></span><br><span class="line">recode ..HTML &lt; page.txt &gt; page.html <span class="comment">#将一个文本文件转换成html</span></span><br><span class="line">recode -l | more <span class="comment">#显示所有允许的转换格式</span></span><br></pre></td></tr></table></figure>

<h2 id="17-文件系统分析"><a href="#17-文件系统分析" class="headerlink" title="17. 文件系统分析"></a>17. 文件系统分析</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">badblocks -v /dev/hda1 <span class="comment">#检查磁盘hda1上的坏磁块</span></span><br><span class="line">fsck /dev/hda1 <span class="comment">#修复/检查hda1磁盘上linux文件系统的完整性</span></span><br><span class="line">fsck.ext2 /dev/hda1 <span class="comment">#修复/检查hda1磁盘上ext2文件系统的完整性</span></span><br><span class="line">e2fsck /dev/hda1 <span class="comment">#修复/检查hda1磁盘上ext2文件系统的完整性</span></span><br><span class="line">e2fsck -j /dev/hda1 <span class="comment">#修复/检查hda1磁盘上ext3文件系统的完整性</span></span><br><span class="line">fsck.ext3 /dev/hda1 <span class="comment">#修复/检查hda1磁盘上ext3文件系统的完整性</span></span><br><span class="line">fsck.vfat /dev/hda1 <span class="comment">#修复/检查hda1磁盘上fat文件系统的完整性</span></span><br><span class="line">fsck.msdos /dev/hda1 <span class="comment">#修复/检查hda1磁盘上dos文件系统的完整性</span></span><br><span class="line">dosfsck /dev/hda1 <span class="comment">#修复/检查hda1磁盘上dos文件系统的完整性</span></span><br></pre></td></tr></table></figure>

<h2 id="18-初始化一个文件系统"><a href="#18-初始化一个文件系统" class="headerlink" title="18. 初始化一个文件系统"></a>18. 初始化一个文件系统</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfs /dev/hda1 <span class="comment">#在hda1分区创建一个文件系统</span></span><br><span class="line">mke2fs /dev/hda1 <span class="comment">#在hda1分区创建一个linux ext2的文件系统</span></span><br><span class="line">mke2fs -j /dev/hda1 <span class="comment">#在hda1分区创建一个linux ext3(日志型)的文件系统</span></span><br><span class="line">mkfs -t vfat 32 -F /dev/hda1 <span class="comment">#创建一个 FAT32 文件系统</span></span><br><span class="line">fdformat -n /dev/fd0 <span class="comment">#格式化一个软盘</span></span><br><span class="line">mkswap /dev/hda3 <span class="comment">#创建一个swap文件系统</span></span><br></pre></td></tr></table></figure>

<h2 id="19-SWAP-文件系统"><a href="#19-SWAP-文件系统" class="headerlink" title="19. SWAP 文件系统"></a>19. SWAP 文件系统</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkswap /dev/hda3 <span class="comment">#创建一个swap文件系统</span></span><br><span class="line">swapon /dev/hda3 <span class="comment">#启用一个新的swap文件系统</span></span><br><span class="line">swapon /dev/hda2 /dev/hdb3 <span class="comment">#启用两个swap分区</span></span><br></pre></td></tr></table></figure>

<h2 id="20-备份"><a href="#20-备份" class="headerlink" title="20. 备份"></a>20. 备份</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dump -0aj -f /tmp/home0.bak /home <span class="comment">#制作一个 &#x27;/home&#x27; 目录的完整备份</span></span><br><span class="line">dump -1aj -f /tmp/home0.bak /home <span class="comment">#制作一个 &#x27;/home&#x27; 目录的交互式备份</span></span><br><span class="line">restore -<span class="keyword">if</span> /tmp/home0.bak <span class="comment">#还原一个交互式备份</span></span><br><span class="line">rsync -rogpav --delete /home /tmp <span class="comment">#同步两边的目录</span></span><br><span class="line">rsync -rogpav -e ssh --delete /home ip_address:/tmp <span class="comment">#通过SSH通道rsync</span></span><br><span class="line">rsync -az -e ssh --delete ip_addr:/home/public /home/local <span class="comment">#通过ssh和压缩将一个远程目录同步到本地目录</span></span><br><span class="line">rsync -az -e ssh --delete /home/local ip_addr:/home/public <span class="comment">#通过ssh和压缩将本地目录同步到远程目录</span></span><br><span class="line"><span class="built_in">dd</span> bs=1M <span class="keyword">if</span>=/dev/hda | gzip | ssh user@ip_addr <span class="string">&#x27;dd of=hda.gz&#x27;</span> <span class="comment">#通过ssh在远程主机上执行一次备份本地磁盘的操作</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/sda of=/tmp/file1 <span class="comment">#备份磁盘内容到一个文件</span></span><br><span class="line">tar -Puf backup.tar /home/user <span class="comment">#执行一次对 &#x27;/home/user&#x27; 目录的交互式备份操作</span></span><br><span class="line">( <span class="built_in">cd</span> /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr <span class="string">&#x27;cd /home/share/ &amp;&amp; tar x -p&#x27;</span> <span class="comment">#通过ssh在远程目录中复制一个目录内容</span></span><br><span class="line">( tar c /home ) | ssh -C user@ip_addr <span class="string">&#x27;cd /home/backup-home &amp;&amp; tar x -p&#x27;</span> <span class="comment">#通过ssh在远程目录中复制一个本地目录</span></span><br><span class="line">tar cf - . | (<span class="built_in">cd</span> /tmp/backup ; tar xf - ) <span class="comment">#本地将一个目录复制到另一个地方，保留原有权限及链接</span></span><br><span class="line">find /home/user1 -name <span class="string">&#x27;*.txt&#x27;</span> | xargs <span class="built_in">cp</span> -av --target-directory=/home/backup/ --parents <span class="comment">#从一个目录查找并复制所有以 &#x27;.txt&#x27; 结尾的文件到另一个目录</span></span><br><span class="line">find /var/log -name <span class="string">&#x27;*.log&#x27;</span> | tar cv --files-from=- | bzip2 &gt; log.tar.bz2 查找所有以 <span class="string">&#x27;.log&#x27;</span> <span class="comment">#结尾的文件并做成一个bzip包</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/hda of=/dev/fd0 bs=512 count=1 <span class="comment">#做一个将 MBR (Master Boot Record)内容复制到软盘的动作</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/fd0 of=/dev/hda bs=512 count=1 <span class="comment">#从已经保存到软盘的备份中恢复MBR内容</span></span><br></pre></td></tr></table></figure>

<h2 id="21-光盘"><a href="#21-光盘" class="headerlink" title="21. 光盘"></a>21. 光盘</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force <span class="comment">#清空一个可复写的光盘内容</span></span><br><span class="line">mkisofs /dev/cdrom &gt; cd.iso <span class="comment">#在磁盘上创建一个光盘的iso镜像文件</span></span><br><span class="line">mkisofs /dev/cdrom | gzip &gt; cd_iso.gz <span class="comment">#在磁盘上创建一个压缩了的光盘iso镜像文件</span></span><br><span class="line">mkisofs -J -allow-leading-dots -R -V <span class="string">&quot;Label CD&quot;</span> -iso-level 4 -o ./cd.iso data_cd <span class="comment">#创建一个目录的iso镜像文件</span></span><br><span class="line">cdrecord -v dev=/dev/cdrom cd.iso <span class="comment">#刻录一个ISO镜像文件</span></span><br><span class="line">gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - <span class="comment">#刻录一个压缩了的ISO镜像文件</span></span><br><span class="line">mount -o loop cd.iso /mnt/iso <span class="comment">#挂载一个ISO镜像文件</span></span><br><span class="line">cd-paranoia -B <span class="comment">#从一个CD光盘转录音轨到 wav 文件中</span></span><br><span class="line">cd-paranoia -- <span class="string">&quot;-3&quot;</span> <span class="comment">#从一个CD光盘转录音轨到 wav 文件中（参数-3）</span></span><br><span class="line">cdrecord --scanbus <span class="comment">#扫描总线以识别scsi通道</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/hdc | <span class="built_in">md5sum</span> <span class="comment">#校验一个设备的md5sum编码，例如一张 CD</span></span><br></pre></td></tr></table></figure>

<h2 id="22-列出目录内容"><a href="#22-列出目录内容" class="headerlink" title="22. 列出目录内容"></a>22. 列出目录内容</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -a：<span class="comment">#显示所有文件（包括隐藏文件）；</span></span><br><span class="line"><span class="built_in">ls</span> -l：<span class="comment">#显示详细信息；</span></span><br><span class="line"><span class="built_in">ls</span> -R：<span class="comment">#递归显示子目录结构；</span></span><br><span class="line"><span class="built_in">ls</span> -ld：<span class="comment">#显示目录和链接信息；</span></span><br><span class="line">ctrl+r：<span class="comment">##历史记录中所搜命令（输入命令中的任意一个字符）；</span></span><br><span class="line"><span class="built_in">pwd</span>:<span class="comment">#显示当前目录</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
